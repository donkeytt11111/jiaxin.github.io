<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>刘佳鑫笔记</title><link>https://donkeytt11111.github.io/jiaxin.github.io</link><description>欢迎您</description><copyright>刘佳鑫笔记</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://github.githubassets.com/favicons/favicon.svg</url><title>avatar</title><link>https://donkeytt11111.github.io/jiaxin.github.io</link></image><lastBuildDate>Tue, 10 Sep 2024 08:18:55 +0000</lastBuildDate><managingEditor>刘佳鑫笔记</managingEditor><ttl>60</ttl><webMaster>刘佳鑫笔记</webMaster><item><title>yum配置</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/yum-pei-zhi.html</link><description>```shell&#13;
yum install -y epel-release &amp;&amp; yum update -y &amp;&amp; yum install -y jq&#13;
&#13;
#!/bin/bash&#13;
&#13;
# 定义常量&#13;
BACKUP_FILE='/etc/yum.repos.d/CentOS-Base.repo.backup'&#13;
REPO_FILE='/etc/yum.repos.d/CentOS-Base.repo'&#13;
&#13;
# 备份当前的yum源配置文件&#13;
echo '备份当前的yum源配置文件...'&#13;
cp $REPO_FILE $BACKUP_FILE&#13;
&#13;
# 清空 CentOS-Base.repo 文件&#13;
echo '清空 CentOS-Base.repo 文件...'&#13;
&gt; $REPO_FILE&#13;
&#13;
# 写入新的配置内容，使用多个稳定的镜像地址&#13;
echo '写入新的配置内容...'&#13;
cat &lt;&lt; EOF &gt; $REPO_FILE&#13;
#&#13;
# CentOS-Base.repo&#13;
#&#13;
# The mirror system uses the connecting IP address of the client and the&#13;
# update status of each mirror to pick mirrors that are updated to and&#13;
# geographically close to the client.  You should use this for CentOS updates&#13;
# unless you are manually picking other mirrors.&#13;
#&#13;
# If the mirrorlist= does not work for you, as a fall back you can try the &#13;
# remarked out baseurl= line instead.&#13;
#&#13;
#&#13;
&#13;
[base]&#13;
name=CentOS-$releasever - Base&#13;
# 使用多个稳定的镜像地址&#13;
baseurl=http://mirrors.cloud.tencent.com/centos/\$releasever/os/\$basearch/&#13;
baseurl=http://mirrors.163.com/centos/\$releasever/os/\$basearch/&#13;
baseurl=http://mirrors.huaweicloud.com/centos/\$releasever/os/\$basearch/&#13;
gpgcheck=1&#13;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7&#13;
&#13;
# released updates &#13;
[updates]&#13;
name=CentOS-$releasever - Updates&#13;
# 使用多个稳定的镜像地址&#13;
baseurl=http://mirrors.cloud.tencent.com/centos/\$releasever/updates/\$basearch/&#13;
baseurl=http://mirrors.163.com/centos/\$releasever/updates/\$basearch/&#13;
baseurl=http://mirrors.huaweicloud.com/centos/\$releasever/updates/\$basearch/&#13;
gpgcheck=1&#13;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7&#13;
&#13;
# additional packages that may be useful&#13;
[extras]&#13;
name=CentOS-$releasever - Extras&#13;
# 使用多个稳定的镜像地址&#13;
baseurl=http://mirrors.cloud.tencent.com/centos/\$releasever/extras/\$basearch/&#13;
baseurl=http://mirrors.163.com/centos/\$releasever/extras/\$basearch/&#13;
baseurl=http://mirrors.huaweicloud.com/centos/\$releasever/extras/\$basearch/&#13;
gpgcheck=1&#13;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-Centos-7&#13;
&#13;
# additional packages that extend functionality of existing packages&#13;
[centosplus]&#13;
name=CentOS-$releasever - Plus&#13;
# 使用多个稳定的镜像地址&#13;
baseurl=http://mirrors.cloud.tencent.com/centos/\$releasever/centosplus/\$basearch/&#13;
baseurl=http://mirrors.163.com/centos/\$releasever/centosplus/\$basearch/&#13;
baseurl=http://mirrors.huaweicloud.com/centos/\$releasever/centosplus/\$basearch/&#13;
gpgcheck=1&#13;
enabled=0&#13;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-Centos-7&#13;
EOF&#13;
&#13;
# 清除缓存并重新生成缓存&#13;
echo '清除缓存并重新生成缓存...'&#13;
yum clean all &amp;&amp; yum makecache&#13;
&#13;
# 输出完成信息&#13;
echo '配置文件更新完成。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/yum-pei-zhi.html</guid><pubDate>Tue, 10 Sep 2024 08:18:27 +0000</pubDate></item><item><title>常用配置</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/chang-yong-pei-zhi.html</link><description>```shell&#13;
#!/bin/bash&#13;
&#13;
# 打开 .bashrc 文件并添加配置&#13;
echo '&#13;
export CLICOLOR=1&#13;
export LSCOLORS=gxfxcxdxbxegedabagacad&#13;
export PS1='\[\e[01;33m\][\[\e[01;32m\]\u\[\e[01;33m\]@\t]: \[\e[01;36m\]\w \[\e[01;32m\]\$ '&#13;
alias dps='docker ps --format \'table {{.ID}}\\t{{.Image}}\\t{{.Ports}}\\t{{.Status}}\\t{{.Names}}\''&#13;
alias dis='docker images'&#13;
alias dos='docker-compose'&#13;
alias tl='talosctl'&#13;
alias kl='kubectl'&#13;
alias sl='systemctl'&#13;
unalias ls 2&gt;/dev/null&#13;
alias ls='/bin/ls'&#13;
' &gt;&gt; ~/.bashrc&#13;
&#13;
# 重新加载 .bashrc 文件&#13;
source ~/.bashrc。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/chang-yong-pei-zhi.html</guid><pubDate>Wed, 21 Aug 2024 08:41:13 +0000</pubDate></item><item><title>docker镜像源</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/docker-jing-xiang-yuan.html</link><description>{&#13;
    'registry-mirrors': [&#13;
        'https://hub.uuuadc.top',&#13;
        'https://docker.anyhub.us.kg',&#13;
        'https://dockerhub.jobcher.com',&#13;
        'https://dockerhub.icu',&#13;
        'https://docker.ckyl.me',&#13;
        'https://docker.awsl9527.cn'&#13;
    ],&#13;
&#13;
    'insecure-registries': [&#13;
        '172.16.1.100',&#13;
        '192.168.63.87:8089'&#13;
    ]&#13;
}&#13;
。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/docker-jing-xiang-yuan.html</guid><pubDate>Wed, 21 Aug 2024 08:37:21 +0000</pubDate></item><item><title>字符画</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/zi-fu-hua.html</link><description>```shell&#13;
#!/bin/bash&#13;
 &#13;
COLORS=('\033[31m' '\033[32m' '\033[33m' '\033[34m' '\033[35m' '\033[36m' '\033[37m')&#13;
RESET='\033[0m'&#13;
&#13;
art=$(cat &lt;&lt;'EOF'&#13;
............................................................................................................................................................*............................&#13;
..............................................................................**]]]/oOOOOOOOOOOOOOOOOOOOo\]]]**........................................]oOOOOOO\*........................&#13;
........................................................................,]]oOOO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OOOo]]`...............................,OO@@@@@@@@@O^.......................&#13;
................................................................*]]OOOO@@@@@OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO@@@@@@@@OOOO]]*....................,OO@@@@@OOOOO@@@O^......................&#13;
..............................,OOOOOOo]*....................,]oOO@@@@@@OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO@@@@@@@@@OOo]`..............,OO@@@@@OOOOOOOO@@OO`.....................&#13;
............................,OO@@@@@@@@OO\`............,/OOO@@@@OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO@@@@@@@@@OOO]*.......,OO@@@@@OOO@@@@@OO@@@O^.....................&#13;
...........................*OO@@OOOOO@@@@@OO`.......,oOO@@@@@OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO@@@@@@OOO@@@@@@@@OO\`*.,OO@@@@OOOOOOO@@@@@O@@@@O.....................&#13;
...........................=O@@OOOOOOO@@@@@@OO\]]oOO@@@@OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO@@@@@@@@@@@@@@@@@@@@@O@@@@@OOOOOOOOOO@@@@@@@@@O*....................&#13;
...........................OO@@OO@@@@@@OOO@@@@@@@@@@@OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOoooooooooOOOOOOOOOOOOOOOOOOOOOOOOOO@@@@@@@@@@@@@@@@@@@@@@OOOOOOOOOOO@@@@@@@@O^....................&#13;
..........................=O@@@@@@@@@@@O@@@@@@@@@OOOOOOOOOOOOOOOOOOOOOOOOOOO@@@@OOoo[***.......**,[ooOOO@@@@OOOOOOOOOOOOOOO@@@@@@@@@@@@@@@@@@@@@@@@OOOOOOO@@@@@@@@@O^....................&#13;
..........................oO@@@@@@@@@@@@@@@@@@@OOOOOOOOOOOOOOOOOOOOOOOOOOO@@@@@@Oo*.................*=OO@@@@@OOOOOOOOOOOOOOO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O^....................&#13;
.........................*OO@@@@@@@@@@@@@@@@OOOOOOOOOOOOOOOOOOOOOOOOOOOOOO@@@@@@O^....................oO@@@@@@OOOOOOOOOOOOOOO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O^....................&#13;
.........................,OO@@@@@@@@@@@@@OOOOOOOOOOOOOOOOOOOOOOOOOOOoo/\oO@@@@@@O*....................=O@@@@@OO[[[\oooOOOOOOOOO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O^....................&#13;
.........................=OO@@@@@@@@@@@OOOOOOOOO@OOOOOOOOOOOOOOOOo/**....=O@@@@O^.....................*O@@@@@/*.......**,ooOOOOO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O^....................&#13;
.........................=O@@@@@@@@@@OOOOOOOO@@@@OOOOOOOOOOOOOOo[*.......*\O@@Oo*......................=O@@@O*...........**,oOOOO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O^....................&#13;
.........................=O@@@@@@@@OOOOOO@@@@@@@OOOOOOOOOOOOOo`*...........,oo/*........................,\o[*...............*,oOOO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O^....................&#13;
.........................=O@@@@@@OOOOOO@@@@@@@@@OOOOOOOOOOOO/*................................................................*=OOO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O^....................&#13;
.........................oO@@@@OOOOO@@@@@@@@@@@@OOOOOOOOOOo`...................................................................*,oOO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O^....................&#13;
......................../O@@@@OOOO@@@@@@@@@@@@@@OOOOOOOOO/*......................................................................*\OO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O*...................&#13;
......................,O@@@@OOOO@@@@@@@@@@@@@@@@OOOOOOOo`.........................................................................*\OO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O`..................&#13;
.....................=O@@@@OOO@@@@@@@@@@@@@@@@@@OOOOOO/*...........................................................................*=OO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O^.................&#13;
..................../O@@@OOO@@@@@@@@@@@@@@@@@@@@@OOOo`..............................................................................*,oOO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O\................&#13;
..................*OO@@@OOO@@@@@@@@@@@@@@@@@@@@OOOo`..................................................................................*,oOO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O\...............&#13;
.................*O@@@@OO@@@@@@@@@@@@@@@@@@@@@OOO^*...................................................................................**,oOO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O`.............&#13;
................,O@@@@OO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OOOOO\]`...............................................................**]oOOOOOOO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O`............&#13;
...............,O@@@@O@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OO]................................................,/O@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O*...........&#13;
..............*OO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O`...........................................]O@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O*..........&#13;
.............*oO@@@O@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\........................................./@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O*.........&#13;
............./O@@@@@@@@@@@@@@@@@@@@@OO[[\@@@@@@@@@@@@@@@@@@@OOO@@@@@@@@@@O`.......................................=O@@@@@@@@@@OOO@@@@@@@@@@@@@@@@@@O/[[OO@@@@@@@@@@@@@@@@@@@@@O^.........&#13;
............=O@@@@@@@@@@@@@@@@@@O/`......O@@@@@@@@@@@@@@@@@O....,\O@@@@@@@O......................................,O@@@@@@@O[`....O@@@@@@@@@@@@@@@@@o......[\O@@@@@@@@@@@@@@@@@@O`........&#13;
............O@@@@@@@@@@@@@@@@@@/.........\@@@@@@@@@@@@@@@@@^.......=@@@@@@O^.....................................=@@@@@@@^.......\@@@@@@@@@@@@@@@@O^.........\@@@@@@@@@@@@@@@@@@O........&#13;
...........=O@@@@@@@@@@@@@@@@@O...........\@@@@@@@@@@@@@@O^.........\@@@@@O^.....................................=@@@@@@/.........=O@@@@@@@@@@@@@O/..........*O@@@@@@@@@@@@@@@@@O^.......&#13;
..........*O@@@@@@@@@@@@@@@@@@O\*..........,O@@@@@@@@@@@O`..........=@@@@@O......................................=O@@@@@^..........,O@@@@@@@@@@@O`..........,/@@@@@@@@@@@@@@@@@@@O*......&#13;
........../O@@@@@@@@@@@@@OOOO@@@@O\]*........,\OOOOOOO[...........,/@@@@@O`.......................................=O@@@@@\...........*[OOOOOOO[*.........,/OO@@@OOO@@@@@@@@@@@@@@O^......&#13;
..........O@@@@@@@@@@@@@O/**,oO@@@@@@@OOOOO\]]]]]/\*****,]]/OOO@@@@@@@@O/..........................................,\@@@@@@@OOO]`*......******..**,]oOOO@@@@@OO/`*\O@@@@@@@@@@@@@@O......&#13;
.........,O@@@@@@@@@@@Oo`.....*,[OOO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OO/`...................******......................[\O@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OOo[*....*\OO@@@@@@@@@@@@O......&#13;
.........=O@@@@@@@@@@O/*...........**,[\oOOOOOOOO@@OOOOOOOOOOo/[[*..................,]O@@@@@@@@@@@@@O\]...................*[\OOOO@@@@@@@@@@@@@@OOOOOOo/[*..........*,oO@@@@@@@@@@@O^.....&#13;
.........=O@@@@@@@@@O/*..........................................................,/@@@@@@@@@@@@@@@@@@@@@O\...........................*********.......................*oO@@@@@@@@@@O^.....&#13;
.........o@@@@@@@@@O/*.........................................................,O@@@@@@@@@@@OOO@@@@@@@@@@@@O`.........................................................,oO@@@@@@@@@@^.....&#13;
........*O@@@@@@@@O/*........................................................,O@@@@@@@OOOOOOOOOOOOOOOO@@@@@@@^........................................................*=O@@@@@@@@@@o.....&#13;
........*O@@@@@@@OO*........................................................=O@@@@@OOOOOOOOOOOOOOOOOOOOOO@@@@@^........................................................*\O@@@@@@@@@O.....&#13;
........*O@@@@@@@O/.........................................................=@@@@@OOOOOOOOOOOOOOOOOOOOOOO@@@@@O.........................................................*=O@@@@@@@@O.....&#13;
........*O@@@@@@OO`.........................................................=@@@@@OOOOOOOOOOOOOOOOOOOOO@@@@@@O`.........................................................*=O@@@@@@@@O.....&#13;
........*O@@@@@@O^*..........................................................=@@@@@@OOOOOOOOOOOOOOOOO@@@@@@@O............................................................*OO@@@@@@@o.....&#13;
.........o@@@@@@O^............................................................,O@@@@@@@OOOOOOOOOOOO@@@@@@@/`.............................................................*oO@@@@@@@^.....&#13;
.........=@@@@@@O`..............................................................*\@@@@@@@OOOOOOOO@@@@@@O[...................**...........................................*oO@@@@@@O^.....&#13;
.........=O@@@@OO*.............................................**`*................,\@@@@@@@@@@@@@@@@/`.....................*^*..........................................*=O@@@@@@O*.....&#13;
.........,O@@@@Oo*....................................................................\O@@@@@@@@@@O/.....................................................................*=O@@@@@@O......&#13;
..........O@@@@Oo*.......................................................................=O@@@@O`........................................................................*=O@@@@@@O......&#13;
..........oO@@@Oo*....................................................,**.................=O@@@^......................***................................................*=O@@@@@O^......&#13;
..........=O@@@OO*...........................................,^*..........................*O@@@^...............................***......................................**=O@@@@@O`......&#13;
...........\@@@@O*............................................*..........**.......*.......=O@@@\....................*...........*.......................................**oO@@@@O^.......&#13;
...........=O@@@O^.......................................................=^......***......O@@@@O`.........***......***..................................................**oO@@@@O*.......&#13;
............oO@@O\*...............................................*oo*...................=@@@@@@@\*......................***............................................*=O@@@@O^........&#13;
............*O@@@O^..........................................**....**..................*O@@@@@@@@@O\*...........**.............***.................................******=O@@@@O.........&#13;
.............=O@@OO*.........................................,`*...........***.......,OO@@@@@@@@@@@@O\`.........***...........*=oo]*..............................******=O@@@@O^.........&#13;
.............*oO@@O^*............................................................*]OO@@@@@@@@@@@@@@@@@@O\`...................,/OOOO\*............................******,OO@@@O/..........&#13;
..............*OO@@O\*...................................*/OOOoo]]]********,]/oOO@@@@@@@@@@@@@@@@@@@@@@@@@OO\]***....***]]/OOO@@@@O^*..........................*******,oO@@@O/...........&#13;
...............,O@@@O\*.................................*oO@@@@@@@@@@OOOO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OOOOOOOOO@@@@@@@@Oo`...........................********oO@@@@/............&#13;
................*OO@@O\*.................................*\OOO@@@@@@@@@@@@@@@@@@@@@@@@@OOOOo[`**[\oOOO@@@@@@@@@@@@@@@@@@@@@OOOo`*............................********/O@@@@O.............&#13;
.................*O@@@Oo`*..................................*****,[[oooOOOOOOooo[[`******............****,[\ooOOOOOooo[[*****................................******/OO@@@@o..............&#13;
..................*oO@@OO^*...............................................................................................................................********=O@@@@O^...............&#13;
....................\O@@@O\**.........................................................................................................................**********,OO@@@@O`................&#13;
.....................,OO@@OO`**......................................................................................................................*********,oO@@@@OO`.................&#13;
.......................\O@@@OO\**..................................................................................................................*********,oO@@@@@O`...................&#13;
........................,OO@@@OO]***......................................................................................................****************,oO@@@@@O/.....................&#13;
..........................,OO@@@OO\`***................................................................................................*****************/OO@@@@@OO`......................&#13;
............................=OO@@@@OOo****.............................................................................................**************]oOO@@@@@OO`........................&#13;
..............................,OO@@@@@OO\********.................................................................................****************,oOO@@@@@@O/`..........................&#13;
................................*\OO@@@@@OOo`*******..................................................................*************************/OOO@@@@@@OO[.............................&#13;
...................................,oO@@@@@@OOOo]******..............................................................**********************/oOO@@@@@@@@O/*...............................&#13;
.....................................*[OO@@@@@@@OOOO\]*******............................................................************,]oOOO@@@@@@@@@Oo`..................................&#13;
.........................................,oOO@@@@@@@@OOOOo\`*********..................................................********,]/oOOO@@@@@@@@@@OO/*.....................................&#13;
............................................*[oOO@@@@@@@@@@@OOOoo\`***********.*******......................*************]ooOOO@@@@@@@@@@@@@OO/`*........................................&#13;
.................................................,\OOO@@@@@@@@@@@@@OOOOOooo\`*********************************,/ooOOOOOO@@@@@@@@@@@@@@@OOO[`.............................................&#13;
.....................................................*,[oOOO@@@@@@@@@@@@@@@@@@@OOOOOOOOOOOOOOOOOOOOOOOOOOOOO@@@@@@@@@@@@@@@@@@@@@OOOo[*..................................................&#13;
............................................................*[\oOOO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OOOOo/`*........................................................&#13;
...................................................................**[[\oOOOOOOOO@@@@@@@@@@@@@@@@@@@@@@@@@@@@OOOOOOOo/[[**...............................................................&#13;
.................................................................................***[[[[[[[[[[[[[[[[[[[[[***.............................................................................&#13;
EOF&#13;
)&#13;
&#13;
colored_art=''&#13;
while IFS= read -r line; do&#13;
    color=${COLORS[$((RANDOM % ${#COLORS[@]}))]}&#13;
    colored_art+='${color}${line}${RESET}\n'&#13;
done &lt;&lt;&lt; '$art'&#13;
&#13;
echo -e '$colored_art'&#13;
。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/zi-fu-hua.html</guid><pubDate>Wed, 21 Aug 2024 08:36:27 +0000</pubDate></item><item><title>ntp_timeset_chrony.conf</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/ntp_timeset_chrony.conf.html</link><description>```config&#13;
bindaddress 0.0.0.0&#13;
bindaddress ::&#13;
driftfile /var/lib/chrony/drift&#13;
logdir /var/log/chrony&#13;
makestep 1.0 3&#13;
rtcsync&#13;
minsources 3&#13;
local stratum 10&#13;
ratelimit interval 1 burst 16&#13;
server ntp.tencent.com iburst minpoll 6 maxpoll 24&#13;
server ntp1.tencent.com iburst minpoll 6 maxpoll 24&#13;
server ntp2.tencent.com iburst minpoll 6 maxpoll 24&#13;
server ntp3.tencent.com iburst minpoll 6 maxpoll 24&#13;
server ntp4.tencent.com iburst minpoll 6 maxpoll 24&#13;
server ntp5.tencent.com iburst minpoll 6 maxpoll 24&#13;
server ntp.aliyun.com iburst minpoll 6 maxpoll 24&#13;
server ntp1.aliyun.com iburst minpoll 6 maxpoll 24&#13;
server ntp2.aliyun.com iburst minpoll 6 maxpoll 24&#13;
server ntp3.aliyun.com iburst minpoll 6 maxpoll 24&#13;
server ntp4.aliyun.com iburst minpoll 6 maxpoll 24&#13;
server ntp5.aliyun.com iburst minpoll 6 maxpoll 24&#13;
server ntp6.aliyun.com iburst minpoll 6 maxpoll 24&#13;
server ntp7.aliyun.com iburst minpoll 6 maxpoll 24&#13;
pool 0.pool.ntp.org iburst minpoll 6 maxpoll 24 maxsources 3&#13;
pool 1.pool.ntp.org iburst minpoll 6 maxpoll 24 maxsources 3&#13;
pool 2.pool.ntp.org iburst minpoll 6 maxpoll 24 maxsources 3&#13;
pool 3.pool.ntp.org iburst minpoll 6 maxpoll 24 maxsources 3&#13;
allow 0.0.0.0/0&#13;
allow ::/0。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/ntp_timeset_chrony.conf.html</guid><pubDate>Thu, 08 Aug 2024 07:19:25 +0000</pubDate></item><item><title>sql_init</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/sql_init.html</link><description>psql -h 172.16.102.145 -p 32002 -U root&#13;
&#13;
Passw0rd@MY&#13;
&#13;
show timezone;&#13;
&#13;
SELECT * FROM pg_timezone_names WHERE name = current_setting('TIMEZONE');&#13;
&#13;
CREATE DATABASE netbox;&#13;
CREATE USER netbox WITH PASSWORD 'Passw0rd@MY';&#13;
&#13;
GRANT ALL PRIVILEGES ON DATABASE netbox TO netbox;&#13;
&#13;
SELECT * FROM pg_timezone_names WHERE name = current_setting('TIMEZONE');&#13;
&#13;
create database kea;&#13;
&#13;
create user kea with password  'Passw0rd@MY';&#13;
&#13;
GRANT ALL PRIVILEGES ON DATABASE kea TO kea;&#13;
&#13;
ALTER DATABASE netbox SET timezone TO 'Asia/Shanghai';&#13;
&#13;
ALTER DATABASE kea SET timezone TO 'Asia/Shanghai';&#13;
&#13;
ALTER DATABASE root SET timezone TO 'Asia/Shanghai';&#13;
&#13;
`````````````````````````````````````````````````````````````````````````````````````````````````&#13;
&#13;
psql -h 172.16.102.145 -p 32002 -U  netbox&#13;
&#13;
&#13;
psql -h 172.16.102.145 -p 32002  -d kea -U kea -f ./dhcpdb_create.pgsql&#13;
&#13;
ALTER DATABASE kea SET timezone TO 'Asia/Shanghai';&#13;
&#13;
kubectl rollout restart statefulset -n cncp-system&#13;
&#13;
&#13;
&#13;
&#13;
&#13;
&#13;
。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/sql_init.html</guid><pubDate>Thu, 01 Aug 2024 01:44:10 +0000</pubDate></item><item><title>nslookup_telnet.py</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/nslookup_telnet.py.html</link><description>```python&#13;
import openpyxl&#13;
import dns.resolver&#13;
import telnetlib&#13;
import logging&#13;
&#13;
# 日志配置&#13;
logging.basicConfig(filename='dns_telnet.log', level=logging.INFO)&#13;
&#13;
def resolve_dns(domain, nameserver='114.114.114.114'):&#13;
    resolver = dns.resolver.Resolver(configure=False)&#13;
    resolver.nameservers = [nameserver]&#13;
&#13;
    try:&#13;
        a_records = resolver.resolve(domain, 'A')&#13;
        aaaa_records = resolver.resolve(domain, 'AAAA')&#13;
&#13;
        print(f'正在解析 {domain} 的DNS记录...')&#13;
        print(f'A 记录: {[str(rdata) for rdata in a_records]}')&#13;
        print(f'AAAA 记录: {[str(rdata) for rdata in aaaa_records]}')&#13;
&#13;
        return {'A': [str(rdata) for rdata in a_records],&#13;
                'AAAA': [str(rdata) for rdata in aaaa_records]}&#13;
    except Exception as e:&#13;
        logging.error(f'解析 {domain} 失败: {e}')&#13;
        print(f'解析 {domain} 失败: {e}')&#13;
        return {}&#13;
&#13;
def check_port(ip, port=80):&#13;
    print(f'正在检查 IP {ip} 的端口 {port} 是否开放...')&#13;
    try:&#13;
        tn = telnetlib.Telnet(ip, port, timeout=5)&#13;
        tn.close()&#13;
        print(f'IP {ip} 的端口 {port} 是开放的。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/nslookup_telnet.py.html</guid><pubDate>Tue, 30 Jul 2024 09:26:05 +0000</pubDate></item><item><title>Talos Linux 修改IP测试</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/Talos%20Linux%20-xiu-gai-IP-ce-shi.html</link><description>Talos Linux 修改IP测试 一、测试环境&#13;
设备型号 设备IPv4地址 设备IPv6地址 MYCNP-SV-P2C 172.16.223.101/24 2408:8631:c02:ffe3::a101/64 MYCNP-SV-P2C 172.16.223.102/24 2408:8631:c02:ffe3::a102/64 MYCNP-SV-P2C 172.16.223.103/24 2408:8631:c02:ffe3::a103/64&#13;
二、修改流程 1. 修改前准备工作&#13;
(1) 检查集群运行状态：&#13;
$ kubectl get nodes -o wide&#13;
NAME         STATUS   ROLES           AGE    VERSION   INTERNAL-IP EXTERNAL-IP   OS-IMAGE                KERNEL-VERSION   CONTAINER-RUNTIME cncp-ms-01   Ready    control-plane   19m    v1.28.5   172.16.223.101   &lt;none&gt; Talos (v1.5.5-mycos2) 6.1.45-talos     containerd://1.6.23 cncp-ms-02   Ready    control-plane   11m    v1.28.5   172.16.223.102   &lt;none&gt; Talos (v1.5.5-mycos2) 6.1.45-talos     containerd://1.6.23 cncp-ms-03   Ready    control-plane   4m5s   v1.28.5   172.16.223.103   &lt;none&gt; Talos (v1.5.5-mycos2) 6.1.45-talos     containerd://1.6.23&#13;
$ talosctl etcd status&#13;
NODE             MEMBER             DB SIZE   IN USE            LEADER RAFT INDEX   RAFT TERM   RAFT APPLIED INDEX   LEARNER   ERRORS 172.16.223.101   09b46a3d5cc2c53a   6.6 MB    3.4 MB (51.96%) 09b46a3d5cc2c53a   5137 3 5137 false 172.16.223.103   dfc9e2c28fb4d3f1   6.3 MB    3.4 MB (54.55%) 09b46a3d5cc2c53a   5137 3 5137 false 172.16.223.102   da76ae5474605fb9   6.5 MB    3.4 MB (52.63%) 09b46a3d5cc2c53a   5137 3 5137 false&#13;
2. 集群停机进入维护模式&#13;
如果集群上有Pod因为PodDisruptionBudgets导致无法被Cordon（如CNCP平台中的 OpenSearch集群），可以加上 --disable-eviction 越过限制强制停机，但可能会导致数据；&#13;
正常情况下使用 --ignore-daemonsets --delete-emptydir-data 即可。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/Talos%20Linux%20-xiu-gai-IP-ce-shi.html</guid><pubDate>Mon, 29 Jul 2024 00:23:05 +0000</pubDate></item><item><title>harbor_init.py</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/harbor_init.py.html</link><description>```python&#13;
import time&#13;
import unittest&#13;
from config import BASE_URL&#13;
from selenium.webdriver.support.ui import Select&#13;
from selenium.webdriver.common.by import By&#13;
from selenium.webdriver.support.ui import WebDriverWait&#13;
from selenium.webdriver.support import expected_conditions as EC&#13;
from selenium import webdriver&#13;
from selenium.webdriver.chrome.service import Service&#13;
from selenium.webdriver.common.by import By&#13;
from selenium.webdriver.support.ui import WebDriverWait&#13;
from selenium.webdriver.support import expected_conditions as EC&#13;
&#13;
class HarborTest(unittest.TestCase):&#13;
    @classmethod&#13;
    def setUpClass(cls):&#13;
        service = Service('C:\\chromedriver.exe')  # 替换为你的chromedriver路径&#13;
        options = webdriver.ChromeOptions()&#13;
        options.add_argument('--ignore-certificate-errors')&#13;
        cls.driver = webdriver.Chrome(service=service, options=options)&#13;
        cls.driver.maximize_window()&#13;
&#13;
    @classmethod&#13;
    def tearDownClass(cls):&#13;
        cls.driver.quit()&#13;
&#13;
    def test_harbor_operations(self):&#13;
        driver = self.driver&#13;
&#13;
        # 访问并处理证书警告&#13;
        driver.get(BASE_URL)&#13;
        # advanced_button = WebDriverWait(driver, 10).until(&#13;
        #     EC.element_to_be_clickable((By.XPATH, '//*[@id='advancedButton']'))&#13;
        # )&#13;
        # advanced_button.click()&#13;
        # proceed_button = WebDriverWait(driver, 10).until(&#13;
        #     EC.element_to_be_clickable((By.XPATH, '//*[@id='exceptionDialogButton']'))&#13;
        # )&#13;
        # proceed_button.click()&#13;
&#13;
        '''&#13;
        登录&#13;
        '''&#13;
        username_field = WebDriverWait(driver, 10).until(&#13;
            EC.element_to_be_clickable((By.XPATH, '//*[@id='login_username']'))&#13;
        )&#13;
        username_field.send_keys('admin')&#13;
        password_field = WebDriverWait(driver, 10).until(&#13;
            EC.element_to_be_clickable((By.XPATH, '//*[@id='login_password']'))&#13;
        )&#13;
        password_field.send_keys('Harbor12345')&#13;
        login_button = WebDriverWait(driver, 10).until(&#13;
            EC.element_to_be_clickable((By.ID, 'log_in'))&#13;
        )&#13;
        login_button.click()&#13;
        time.sleep(5)  # 等待登录完成&#13;
&#13;
        '''&#13;
        仓库管理&#13;
        '''&#13;
        repository_management_button = WebDriverWait(driver, 10).until(&#13;
            EC.element_to_be_clickable((By.XPATH, '/html/body/harbor-app/harbor-shell/clr-main-container/div/clr-vertical-nav/div/div[1]/clr-vertical-nav-group/div[2]/clr-vertical-nav-group-children/a[3]/span'))&#13;
        )&#13;
        repository_management_button.click()&#13;
        new_button = WebDriverWait(driver, 10).until(&#13;
            EC.element_to_be_clickable((By.XPATH, '//*[@id='add']'))&#13;
        )&#13;
        new_button.click()&#13;
        destination_name_field = WebDriverWait(driver, 10).until(&#13;
            EC.element_to_be_clickable((By.XPATH, '//*[@id='destination_name']'))&#13;
        )&#13;
        destination_name_field.send_keys('test')&#13;
        destination_url_field = WebDriverWait(driver, 10).until(&#13;
            EC.element_to_be_clickable((By.XPATH, '//*[@id='destination_url']'))&#13;
        )&#13;
        destination_url_field.send_keys('https://172.16.8.201')&#13;
&#13;
        usr_exit = WebDriverWait(driver, 10).until(&#13;
            EC.element_to_be_clickable((By.XPATH, '//*[@id='destination_access_key']'))&#13;
        )&#13;
        usr_exit.send_keys('admin')&#13;
&#13;
        destination_pass_field = WebDriverWait(driver, 10).until(&#13;
            EC.element_to_be_clickable((By.XPATH, '//*[@id='destination_password']'))&#13;
        )&#13;
        destination_pass_field.send_keys('Harbor12345')&#13;
&#13;
        uncheck_button = WebDriverWait(driver, 10).until(&#13;
            EC.element_to_be_clickable((By.XPATH, '/html/body/harbor-app/harbor-shell/clr-main-container/div/div/hbr-endpoint/div/hbr-create-edit-endpoint/clr-modal/div/div[2]/div[2]/div/div[2]/div/form/clr-checkbox-container/div/clr-checkbox-wrapper/label'))&#13;
        )&#13;
        uncheck_button.click()&#13;
        submit_button = WebDriverWait(driver, 10).until(&#13;
            EC.element_to_be_clickable((By.XPATH, '/html/body/harbor-app/harbor-shell/clr-main-container/div/div/hbr-endpoint/div/hbr-create-edit-endpoint/clr-modal/div/div[2]/div[2]/div/div[3]/button[3]/span'))&#13;
        )&#13;
        submit_button.click()&#13;
&#13;
        # 复制管理功能&#13;
        new_replication_rule_button = WebDriverWait(driver, 10).until(&#13;
            EC.element_to_be_clickable((By.XPATH, '/html/body/harbor-app/harbor-shell/clr-main-container/div/clr-vertical-nav/div/div[1]/clr-vertical-nav-group/div[2]/clr-vertical-nav-group-children/a[4]/span'))&#13;
        )&#13;
        new_replication_rule_button.click()&#13;
&#13;
        new_replication_exit_button = WebDriverWait(driver, 10).until(&#13;
            EC.element_to_be_clickable((By.XPATH, '//*[@id='new_replication_rule_id']'))&#13;
        )&#13;
        new_replication_exit_button.click()&#13;
&#13;
        init_button = WebDriverWait(driver, 10).until(&#13;
            EC.element_to_be_clickable((By.XPATH, '/html/body/harbor-app/harbor-shell/clr-main-container/div/div/total-replication/div/hbr-replication/div/hbr-create-edit-rule/clr-modal/div/div[2]/div[2]/div/div[2]/div/form/clr-radio-container/div/clr-radio-wrapper[2]/label'))&#13;
        )&#13;
        init_button.click()&#13;
&#13;
        rule_name_field = WebDriverWait(driver, 10).until(&#13;
            EC.element_to_be_clickable((By.XPATH, '//*[@id='ruleName']'))&#13;
        )&#13;
        rule_name_field.send_keys('test')&#13;
        # target_repo_dropdown = WebDriverWait(driver, 10).until(&#13;
        #     EC.element_to_be_clickable((By.XPATH, '/html/body/harbor-app/harbor-shell/clr-main-container/div/div/total-replication/div/hbr-replication/div/hbr-create-edit-rule/clr-modal/div/div[2]/div[2]/div/div[2]/div/form/div[3]/div/div[2]'))&#13;
        # )&#13;
        # target_repo_dropdown.click()&#13;
        '''&#13;
        下拉1&#13;
        '''&#13;
&#13;
        try:&#13;
            # 等待并定位&lt;select&gt;元素&#13;
            select_element = WebDriverWait(driver, 20).until(&#13;
                EC.presence_of_element_located((By.ID, 'src_registry_id'))&#13;
            )&#13;
            # 创建Select对象&#13;
            select = Select(select_element)&#13;
            print('找到了下拉列表')&#13;
&#13;
        except Exception as e:&#13;
            print(f'无法找到下拉列表: {e}')&#13;
&#13;
        try:&#13;
            # 选择下拉列表中的第一个非空选项&#13;
            # 注意：这里的index是从0开始的，因此第一个非空选项的索引是1（假设第一个选项是占位符）&#13;
            select.select_by_index(1)&#13;
            print('选择了下拉列表的第一个非空选项')&#13;
&#13;
        except Exception as e:&#13;
            print(f'无法选择下拉列表的第一个非空选项: {e}')&#13;
&#13;
        '''&#13;
        处理2下拉&#13;
        '''&#13;
        try:&#13;
            # 点击下拉列表以展开&#13;
            dropdown_tow = WebDriverWait(driver, 20).until(&#13;
                EC.element_to_be_clickable((By.ID, 'dest_namespace_replace_count'))&#13;
            )&#13;
            dropdown_tow.click()&#13;
            print('点击了下拉列表')&#13;
            # 等待并选择“无替换”选项&#13;
            # 选择的 XPATH 必须匹配展开后的选项&#13;
            no_replace_option = WebDriverWait(driver,10).until(&#13;
                EC.element_to_be_clickable(&#13;
                    (By.XPATH, '//select[@id='dest_namespace_replace_count']/option[@value='0']'))&#13;
            )&#13;
            no_replace_option.click()&#13;
            print('选择了‘无替换’选项')&#13;
&#13;
        except Exception as e:&#13;
            print(f'无法处理下拉列表: {e}')&#13;
&#13;
        '''&#13;
        保存&#13;
        '''&#13;
        time.sleep(5)&#13;
        save_button = WebDriverWait(driver, 10).until(&#13;
            EC.element_to_be_clickable((By.XPATH, '//*[@id='ruleBtnOk']'))&#13;
        )&#13;
        save_button.click()&#13;
        # 提交复制功能&#13;
        replication_checkbox = WebDriverWait(driver, 10).until(&#13;
            EC.element_to_be_clickable((By.XPATH, '/html/body/harbor-app/harbor-shell/clr-main-container/div/div/total-replication/div/hbr-replication/div/div[2]/hbr-list-replication-rule/div/clr-datagrid/div[1]/div/div/div/div/clr-dg-row/div/div[1]/div/clr-radio-wrapper/label'))&#13;
        )&#13;
        replication_checkbox.click()&#13;
        replicate_button = WebDriverWait(driver, 10).until(&#13;
            EC.element_to_be_clickable((By.XPATH, '//*[@id='replication_exe_id']'))&#13;
        )&#13;
        replicate_button.click()&#13;
        confirm_replicate_button = WebDriverWait(driver, 10).until(&#13;
            EC.element_to_be_clickable((By.XPATH, '/html/body/harbor-app/harbor-shell/clr-main-container/div/div/total-replication/div/hbr-replication/div/confirmation-dialog[1]/clr-modal/div/div[2]/div[2]/div/div[3]/button[2]'))&#13;
        )&#13;
        confirm_replicate_button.click()&#13;
&#13;
if __name__ == '__main__':&#13;
    unittest.main()&#13;
。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/harbor_init.py.html</guid><pubDate>Thu, 25 Jul 2024 02:32:38 +0000</pubDate></item><item><title>harbor_k8s.sh</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/harbor_k8s.sh.html</link><description>```shell&#13;
#harbor自动化heml部署&#13;
#!/bin/bash&#13;
&#13;
# 定义错误处理函数&#13;
handle_error() {&#13;
  echo '发生错误: $1'&#13;
  exit 1&#13;
}&#13;
&#13;
# 检查外部URL参数&#13;
if [ -z '$1' ]; then&#13;
  echo '请提供外部URL作为参数，例如:sh test.sh https://172.16.102.146 请提供 loadBalancerIP 作为第二个参数，例如: 172.16.102.79' &#13;
  kubectl get IPAddressPool -A&#13;
  exit 1&#13;
fi&#13;
&#13;
EXTERNAL_URL='$1'&#13;
&#13;
# 检查 loadBalancerIP 参数&#13;
if [ -z '$2' ]; then&#13;
  echo '请提供 loadBalancerIP 作为第二个参数，例如: 172.16.102.79'&#13;
  exit 1&#13;
fi&#13;
&#13;
LOAD_BALANCER_IP='$2'&#13;
&#13;
# 检查是否已有Harbor安装&#13;
echo '检查是否有已存在的Harbor安装...'&#13;
if helm ls --namespace harbor | grep -q harbor; then&#13;
  echo '正在卸载现有的Harbor安装...'&#13;
  if ! helm uninstall harbor --namespace harbor; then&#13;
    handle_error '卸载现有Harbor安装失败'&#13;
  fi&#13;
fi&#13;
&#13;
# 安装Harbor&#13;
echo '正在安装Harbor...'&#13;
if ! helm install \&#13;
    --create-namespace \&#13;
    --namespace harbor \&#13;
    harbor ./ \&#13;
    --set expose.type=clusterIP \&#13;
    --set expose.tls.auto.commonName=$(echo $EXTERNAL_URL | awk -F'://' '{print $NF}') \&#13;
    --set externalURL=$EXTERNAL_URL \&#13;
    --set trivy.enabled=false \&#13;
    --set metrics.enabled=true \&#13;
    --set persistence.persistentVolumeClaim.registry.storageClass=openebs-sc \&#13;
    --set persistence.persistentVolumeClaim.jobservice.jobLog.storageClass=openebs-sc \&#13;
    --set persistence.persistentVolumeClaim.database.storageClass=openebs-sc \&#13;
    --set persistence.persistentVolumeClaim.redis.storageClass=openebs-sc \&#13;
    --set persistence.persistentVolumeClaim.trivy.storageClass=openebs-sc \&#13;
    --set 'nginx.nodeSelector.kubernetes\.io/hostname=cncp-ms-01' \&#13;
    --set 'portal.nodeSelector.kubernetes\.io/hostname=cncp-ms-01' \&#13;
    --set 'core.nodeSelector.kubernetes\.io/hostname=cncp-ms-01' \&#13;
    --set 'jobservice.nodeSelector.kubernetes\.io/hostname=cncp-ms-01' \&#13;
    --set 'registry.nodeSelector.kubernetes\.io/hostname=cncp-ms-01' \&#13;
    --set 'trivy.nodeSelector.kubernetes\.io/hostname=cncp-ms-01' \&#13;
    --set 'database.nodeSelector.kubernetes\.io/hostname=cncp-ms-01' \&#13;
    --set 'redis.nodeSelector.kubernetes\.io/hostname=cncp-ms-01' \&#13;
    --set 'exporter.nodeSelector.kubernetes\.io/hostname=cncp-ms-01' \&#13;
    --set harbor-core.image.repository=myharborregistry/harbor-core \&#13;
    --set harbor-core.image.tag=v2.3.0; then&#13;
  handle_error '安装Harbor失败'&#13;
fi&#13;
&#13;
echo 'Harbor安装完成!'&#13;
&#13;
cat &lt;&lt;EOF | kubectl apply -f -&#13;
apiVersion: v1&#13;
kind: Service&#13;
metadata:&#13;
  name: harbor-loadbalancer&#13;
  namespace: harbor&#13;
spec:&#13;
  selector:&#13;
    app: harbor&#13;
    component: nginx&#13;
  ipFamilies:&#13;
  - IPv4&#13;
  ipFamilyPolicy: SingleStack&#13;
  ports:&#13;
  - name: http&#13;
    port: 80&#13;
    targetPort: 8080&#13;
  - name: https&#13;
    port: 443&#13;
    targetPort: 8443&#13;
  type: LoadBalancer&#13;
  loadBalancerIP: ${LOAD_BALANCER_IP}&#13;
  allocateLoadBalancerNodePorts: false&#13;
EOF&#13;
```。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/harbor_k8s.sh.html</guid><pubDate>Tue, 23 Jul 2024 01:49:13 +0000</pubDate></item><item><title>PRC网口定义</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/PRC-wang-kou-ding-yi.html</link><description>## 明阳设备端口测序&#13;
### 1. MYCNP-SV-P1 (蓝色/1U/Intel 平台)&#13;
&#13;
| 接口位置 | 接口名称 | 接口形态 | 网卡 busPath   | 网卡系统名称  | 网卡型号                            |&#13;
| ---- | ---- | ---- | ------------ | ------- | ------------------------------- |&#13;
| 板载   | ens1 | 1G电  | 0000:05:00.0 | enp5s0  | I211 Gigabit Network Connection |&#13;
| 板载   | ens2 | 1G电  | 0000:06:00.0 | enp6s0  | I211 Gigabit Network Connection |&#13;
| 板载   | ens3 | 1G电  | 0000:07:00.0 | enp7s0  | I211 Gigabit Network Connection |&#13;
| 板载   | ens4 | 1G电  | 0000:08:00.0 | enp8s0  | I211 Gigabit Network Connection |&#13;
| 板载   | ens5 | 1G电  | 0000:0b:00.0 | enp11s0 | I211 Gigabit Network Connection |&#13;
| 板载   | ens6 | 1G电  | 0000:0c:00.0 | enp12s0 | I211 Gigabit Network Connection |&#13;
| 板载   | ens7 | 1G电  | 0000:12:00.0 | enp18s0 | I211 Gigabit Network Connection |&#13;
| 板载   | ens8 | 1G电  | 0000:13:00.0 | enp19s0 | I211 Gigabit Network Connection |&#13;
### 2. MYCNP-SV-P2 (蓝色/1U/Intel 平台)&#13;
&#13;
| 接口位置 | 接口名称 | 接口形态 | 网卡 busPath   | 网卡系统名称    | 网卡型号                                  |&#13;
| ---- | ---- | ---- | ------------ | --------- | ------------------------------------- |&#13;
| 板载   | ens1 | 1G电  | 0000:05:00.0 | enp5s0    | I211 Gigabit Network Connection       |&#13;
| 板载   | ens2 | 1G电  | 0000:06:00.0 | enp6s0    | I211 Gigabit Network Connection       |&#13;
| 板载   | ens3 | 1G电  | 0000:07:00.0 | enp7s0    | I211 Gigabit Network Connection       |&#13;
| 板载   | ens4 | 1G电  | 0000:08:00.0 | enp8s0    | I211 Gigabit Network Connection       |&#13;
| 板载   | ens5 | 1G电  | 0000:0b:00.0 | enp11s0   | I211 Gigabit Network Connection       |&#13;
| 板载   | ens6 | 1G电  | 0000:0c:00.0 | enp12s0   | I211 Gigabit Network Connection       |&#13;
| 板载   | ens7 | 1G电  | 0000:12:00.0 | enp18s0   | I211 Gigabit Network Connection       |&#13;
| 板载   | ens8 | 1G电  | 0000:13:00.0 | enp19s0   | I211 Gigabit Network Connection       |&#13;
| 板卡A  | GE1  | 1G光  | 0000:19:00.0 | enp25s0f0 | I350 Gigabit Fiber Network Connection |&#13;
| 板卡A  | GE2  | 1G光  | 0000:19:00.1 | enp25s0f1 | I350 Gigabit Fiber Network Connection |&#13;
| 板卡A  | GE3  | 1G光  | 0000:19:00.2 | enp25s0f2 | I350 Gigabit Fiber Network Connection |&#13;
| 板卡A  | GE4  | 1G光  | 0000:19:00.3 | enp25s0f3 | I350 Gigabit Fiber Network Connection |&#13;
### 3. MYCNP-SV-P2C (红色/2U/海光平台)&#13;
&#13;
| 接口位置 | 接口名称   | 接口形态 | 网卡 busPath   | 网卡系统名称    | 网卡型号                                       |&#13;
| ---- | ------ | ---- | ------------ | --------- | ------------------------------------------ |&#13;
| 板载   | ETH0   | 1G电  | 0000:05:00.0 | eno1      | WX1860A2 Gigabit Ethernet Controller       |&#13;
| 板载   | ETH1   | 1G电  | 0000:05:00.1 | eno2      | WX1860A2 Gigabit Ethernet Controller       |&#13;
| 板载   | ETH2   | 1G电  | 0000:08:00.0 | eno3      | WX1860A4 Gigabit Ethernet Controller       |&#13;
| 板载   | ETH3   | 1G电  | 0000:08:00.1 | eno4      | WX1860A4 Gigabit Ethernet Controller       |&#13;
| 板载   | ETH4   | 1G电  | 0000:08:00.2 | eno5      | WX1860A4 Gigabit Ethernet Controller       |&#13;
| 板载   | ETH5   | 1G电  | 0000:08:00.3 | eno6      | WX1860A4 Gigabit Ethernet Controller       |&#13;
| 板载   | SFP1   | 1G光  | 0000:0b:00.0 | eno7      | WX1860A4 Gigabit Ethernet Controller       |&#13;
| 板载   | SFP2   | 1G光  | 0000:0b:00.1 | eno8      | WX1860A4 Gigabit Ethernet Controller       |&#13;
| 板载   | SFP3   | 1G光  | 0000:0b:00.2 | eno9      | WX1860A4 Gigabit Ethernet Controller       |&#13;
| 板载   | SFP4   | 1G光  | 0000:0b:00.3 | eno10     | WX1860A4 Gigabit Ethernet Controller       |&#13;
| 板卡A  | GSFP+1 | 10G光 | 0000:0e:00.0 | enp14s0f0 | Ethernet Controller SP1000A for 10GbE SFP+ |&#13;
| 板卡A  | GSFP+2 | 10G光 | 0000:0e:00.1 | enp14s0f1 | Ethernet Controller SP1000A for 10GbE SFP+ |&#13;
&gt; 备注:&#13;
&gt; 1. GSFP+1、GSFP+2 10G光网卡，左侧为ACT指示灯，右侧为Speed指示灯；Speed指示灯亮绿色=速度1Gbps、Speed指示灯亮橙色=速度10Gbps。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/PRC-wang-kou-ding-yi.html</guid><pubDate>Thu, 18 Jul 2024 03:15:28 +0000</pubDate></item><item><title>K8S技巧</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/K8S-ji-qiao.html</link><description>补全&#13;
kubectl completion bash &gt; /usr/share/bash-completion/completions/kubectl&#13;
。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/K8S-ji-qiao.html</guid><pubDate>Thu, 18 Jul 2024 03:03:06 +0000</pubDate></item><item><title>metallb问题解决</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/metallb-wen-ti-jie-jue.html</link><description>添加 Metallb 仓库：&#13;
&#13;
sh&#13;
helm repo add metallb https://metallb.github.io/metallb&#13;
更新 Helm 仓库：&#13;
&#13;
sh&#13;
helm repo update&#13;
安装 Metallb：&#13;
&#13;
sh&#13;
helm install metallb metallb/metallb&#13;
&#13;
确保 CRD 已安装：&#13;
&#13;
Metallb 依赖的 IPAddressPool 和 L2Advertisement CRD 需要先被安装。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/metallb-wen-ti-jie-jue.html</guid><pubDate>Thu, 18 Jul 2024 00:59:28 +0000</pubDate></item><item><title>k8s安装</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/k8s-an-zhuang.html</link><description>```shell&#13;
#修改hosts&#13;
cat &gt;&gt;/etc/hosts&lt;&lt;EOF&#13;
10.42.13.201 cncp-ms-01&#13;
10.42.13.202 cncp-ms-02&#13;
10.42.13.203 cncp-ms-03&#13;
EOF&#13;
&#13;
hostnamectl  set-hostname cncp-ms-01&#13;
&#13;
#关闭selinux&#13;
sudo setenforce 0 #临时&#13;
sudo sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config&#13;
reboot&#13;
&#13;
#关闭防火墙&#13;
systemctl disable firewalld &amp;&amp; systemctl stop firewalld&#13;
&#13;
#关闭selinux&#13;
修改文件/etc/selinux/config：SELINUX=disabled。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/k8s-an-zhuang.html</guid><pubDate>Tue, 16 Jul 2024 02:48:27 +0000</pubDate></item><item><title>helm使用方法</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/helm-shi-yong-fang-fa.html</link><description>```yaml&#13;
helm repo add harbor https://helm.goharbor.io&#13;
helm repo update&#13;
helm fetch harbor/harbor&#13;
tar -zxvf harbor-*.tgz&#13;
cd harbor&#13;
&#13;
异常解决：&#13;
helm uninstall harbor --namespace harbor&#13;
&#13;
&#13;
helm install --create-namespace --namespace harbor harbor ./ \&#13;
--set expose.type=clusterIP \&#13;
--set expose.tls.auto.commonName=172.16.102.146 \&#13;
--set externalURL=https://172.16.102.146 \&#13;
--set trivy.enabled=false \&#13;
--set metrics.enabled=true \&#13;
--set persistence.persistentVolumeClaim.registry.storageClass=openebs-sc \&#13;
--set persistence.persistentVolumeClaim.jobservice.jobLog.storageClass=openebs-sc \&#13;
--set persistence.persistentVolumeClaim.database.storageClass=openebs-sc \&#13;
--set persistence.persistentVolumeClaim.redis.storageClass=openebs-sc \&#13;
--set persistence.persistentVolumeClaim.trivy.storageClass=openebs-sc \&#13;
--set 'nginx.nodeSelector.kubernetes\.io/hostname=cncp-ms-01' \&#13;
--set 'portal.nodeSelector.kubernetes\.io/hostname=cncp-ms-01' \&#13;
--set 'core.nodeSelector.kubernetes\.io/hostname=cncp-ms-01' \&#13;
--set 'jobservice.nodeSelector.kubernetes\.io/hostname=cncp-ms-01' \&#13;
--set 'registry.nodeSelector.kubernetes\.io/hostname=cncp-ms-01' \&#13;
--set 'trivy.nodeSelector.kubernetes\.io/hostname=cncp-ms-01' \&#13;
--set 'database.nodeSelector.kubernetes\.io/hostname=cncp-ms-01' \&#13;
--set 'redis.nodeSelector.kubernetes\.io/hostname=cncp-ms-01' \&#13;
--set 'exporter.nodeSelector.kubernetes\.io/hostname=cncp-ms-01' \&#13;
--set harbor-core.image.repository=myharborregistry/harbor-core \&#13;
--set harbor-core.image.tag=v2.3.0&#13;
```&#13;
&#13;
```shell&#13;
cat &lt;&lt;EOF | kubectl apply -f -&#13;
apiVersion: v1&#13;
kind: Service&#13;
metadata:&#13;
  name: harbor-loadbalancer&#13;
  namespace: harbor&#13;
spec:&#13;
  selector:&#13;
    app: harbor&#13;
    component: nginx&#13;
  ipFamilies:&#13;
  - IPv4&#13;
  ipFamilyPolicy: SingleStack&#13;
  ports:&#13;
  - name: http&#13;
    port: 80&#13;
    targetPort: 8080&#13;
  - name: https&#13;
    port: 443&#13;
    targetPort: 8443&#13;
  type: LoadBalancer&#13;
  loadBalancerIP: 172.16.102.79&#13;
  allocateLoadBalancerNodePorts: false&#13;
EOF&#13;
```。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/helm-shi-yong-fang-fa.html</guid><pubDate>Fri, 12 Jul 2024 07:20:59 +0000</pubDate></item><item><title>docker镜像上传端口配置</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/docker-jing-xiang-shang-chuan-duan-kou-pei-zhi.html</link><description>```shell&#13;
docker load -i registry.tar.gz&#13;
docker ps -a&#13;
docker run -d -p 5000:5000 --name registry regisrty:2&#13;
docker run -d -p 5000:5000 --name registry registry:2&#13;
docker load -i etcd.tar.gz&#13;
docker tag gcr.io/etcd-development/etcd:v3.5.10 172.16.8.102:5000/gcr.io/etcd-development/etcd:v3.5.10&#13;
docker push 172.16.8.102:5000/gcr.io/etcd-development/etcd:v3.5.10&#13;
vim /etc/docker/daemon.json&#13;
service docker restart&#13;
docker push 172.16.8.102:5000/gcr.io/etcd-development/etcd:v3.5.10&#13;
docker start&#13;
docker start registry.tar.gz&#13;
docker start registry&#13;
docker push 172.16.8.102:5000/gcr.io/etcd-development/etcd:v3.5.10&#13;
talosctl edit mc&#13;
talosctl image pull gcr.io/etcd-development/etcd:v3.5.10&#13;
talosctl reboot&#13;
talosctl dashboard&#13;
ping 172.16.8.30&#13;
talosctl service&#13;
talosctl kubeconfig&#13;
kubectl get nodes -o wide&#13;
&#13;
&#13;
docker配置&#13;
&#13;
{&#13;
    'data-root': '/home/chen/docker_data',&#13;
    'insecure-registries': ['172.16.8.102:5000']&#13;
}&#13;
&#13;
http://172.16.8.102:5000/v2/gcr.io。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/docker-jing-xiang-shang-chuan-duan-kou-pei-zhi.html</guid><pubDate>Thu, 11 Jul 2024 08:29:33 +0000</pubDate></item><item><title>硬盘挂载配置文件</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/ying-pan-gua-zai-pei-zhi-wen-jian.html</link><description>```yaml&#13;
# Editing MachineConfigs.config.talos.dev/v1alpha1 at node 172.16.8.192&#13;
version: v1alpha1&#13;
debug: false&#13;
persist: true&#13;
machine:&#13;
  disks:&#13;
    - device: /dev/sdb&#13;
      partitions:&#13;
        - mountpoint: /var/openebs/local2&#13;
  type: controlplane&#13;
  token: 26yer4.i0q29jdpr62vpfrk&#13;
  ca:&#13;
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEFCYUhSZmxCTnh2UUg5S1kyT1kwRVNNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTNNREV3TnpVME16WmFGdzB6TkRBMk1qa3dOelUwTXpaYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBK0VKZXpsRmhpYTNIVGxtRDhWYnQvRTZVSUI5bkNCdGdYTHFpCjlwZEo5Q2lqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVWHZudmMvcjRlRHk4aTZ1aQpZWXdlTVNMVGFXSXdCUVlESzJWd0EwRUErbHIyU0hlL1NiRjB3VTlIWS9LSVFMcis5VmNBU1VTT242VHd0V1FKCnZ5VEwxTXVmRXZ4eW1WRlZ1QS9LWUFNRStkc3ZIMVkyeDVLMjdTS2w5TFFDQmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==&#13;
    key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJTkMvV05XMFdDUFBaMitOdENBWk1udVhQZ2w0ckNobExQVFVzd3hCNzQvVgotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K&#13;
  certSANs: []&#13;
  kubelet:&#13;
    image: ghcr.io/siderolabs/kubelet:v1.28.5&#13;
    extraMounts:&#13;
      - destination: /var/openebs/local&#13;
        type: bind&#13;
        source: /var/openebs/local&#13;
        options:&#13;
          - bind&#13;
          - rshared&#13;
          - rw&#13;
      - destination: /var/openebs/local2&#13;
        type: bind&#13;
        source: /var/openebs/local2&#13;
        options:&#13;
          - bind&#13;
          - rshared&#13;
          - rw&#13;
      - destination: /var/local-storage&#13;
        type: bind&#13;
        source: /var/local-storage&#13;
        options:&#13;
          - bind&#13;
          - rshared&#13;
          - rw&#13;
    extraConfig:&#13;
      containerLogMaxFiles: 5&#13;
      containerLogMaxSize: 30Mi&#13;
    defaultRuntimeSeccompProfileEnabled: true&#13;
    disableManifestsDirectory: true&#13;
  pods:&#13;
    - apiVersion: v1&#13;
      kind: Pod&#13;
      metadata:&#13;
        name: manager&#13;
        namespace: kube-system&#13;
      spec:&#13;
        containers:&#13;
          - image: mingyangtech.com.cn/mingyang/centos7:v1.0.0&#13;
            imagePullPolicy: IfNotPresent&#13;
            name: manager&#13;
            resources:&#13;
              limits:&#13;
                cpu: 50m&#13;
                memory: 200Mi&#13;
            securityContext:&#13;
              privileged: true&#13;
            volumeMounts:&#13;
              - mountPath: /etc/cni&#13;
                name: cni&#13;
        hostNetwork: true&#13;
        priorityClassName: system-node-critical&#13;
        restartPolicy: Always&#13;
        volumes:&#13;
          - hostPath:&#13;
              path: /etc/cni&#13;
              type: DirectoryOrCreate&#13;
            name: cni&#13;
  network:&#13;
    hostname: cncp-ms-01&#13;
    interfaces:&#13;
      - bond:&#13;
          deviceSelectors:&#13;
            - busPath: 0000:0b:00.0&#13;
            - busPath: 0000:0c:00.0&#13;
          mode: active-backup&#13;
        interface: bond-ip6&#13;
      - bond:&#13;
          deviceSelectors:&#13;
            - busPath: 0000:12:00.0&#13;
            - busPath: 0000:13:00.0&#13;
          mode: active-backup&#13;
        interface: bond-ip4&#13;
      - addresses:&#13;
          - 172.16.8.192/24&#13;
          - 2408:8631:c02:ff08::192/64&#13;
        routes:&#13;
          - network: 0.0.0.0/0&#13;
            gateway: 172.16.8.1&#13;
          - network: ::/0&#13;
            gateway: 2408:8631:c02:ff08::1&#13;
        bond:&#13;
          deviceSelectors:&#13;
            - busPath: 0000:07:00.0&#13;
            - busPath: 0000:08:00.0&#13;
          mode: active-backup&#13;
        interface: bond-cluster&#13;
    nameservers:&#13;
      - 114.114.114.114&#13;
      - 8.8.8.8&#13;
      - 2400:3200::1&#13;
      - 2400:3200:baba::1&#13;
    extraHostEntries:&#13;
      - ip: 172.16.8.192&#13;
        aliases:&#13;
          - endpoint&#13;
          - cncp-ms-01&#13;
  install:&#13;
    disk: /dev/sda&#13;
    image: ghcr.io/siderolabs/installer:v1.5.5-mycos2&#13;
    extensions:&#13;
      - image: ghcr.io/siderolabs/iscsi-tools:v0.1.1&#13;
      - image: ghcr.io/nanfei-chen/hello-world-service:v1.4.0&#13;
    wipe: false&#13;
  time:&#13;
    disabled: false&#13;
    servers:&#13;
      - cn.ntp.org.cn&#13;
  sysctls:&#13;
    vm.max_map_count: 262144&#13;
  registries:&#13;
    mirrors:&#13;
      '*':&#13;
        endpoints:&#13;
          - https://172.16.1.200/v2/&#13;
      docker.io:&#13;
        endpoints:&#13;
          - https://172.16.1.200/v2/docker.io&#13;
        overridePath: true&#13;
      gcr.io:&#13;
        endpoints:&#13;
          - https://172.16.1.200/v2/gcr.io&#13;
        overridePath: true&#13;
      ghcr.io:&#13;
        endpoints:&#13;
          - https://172.16.1.200/v2/ghcr.io&#13;
        overridePath: true&#13;
      k8s.gcr.io:&#13;
        endpoints:&#13;
          - https://172.16.1.200/v2/k8s.gcr.io&#13;
        overridePath: true&#13;
      mingyangtech.com.cn:&#13;
        endpoints:&#13;
          - https://172.16.1.200/v2/mingyangtech.com.cn&#13;
        overridePath: true&#13;
      nvcr.io:&#13;
        endpoints:&#13;
          - https://172.16.1.200/v2/nvcr.io&#13;
        overridePath: true&#13;
      quay.io:&#13;
        endpoints:&#13;
          - https://172.16.1.200/v2/quay.io&#13;
        overridePath: true&#13;
      registry.k8s.io:&#13;
        endpoints:&#13;
          - https://172.16.1.200/v2/registry.k8s.io&#13;
        overridePath: true&#13;
    config:&#13;
      172.16.1.200:&#13;
        tls:&#13;
          insecureSkipVerify: true&#13;
      172.16.106.11:10080:&#13;
        auth:&#13;
          username: admin&#13;
          password: Passw0rd@MY&#13;
  features:&#13;
    rbac: true&#13;
    stableHostname: true&#13;
    apidCheckExtKeyUsage: true&#13;
    diskQuotaSupport: true&#13;
  kernel:&#13;
    modules:&#13;
      - name: nfsd&#13;
      - name: ngbe&#13;
      - name: txgbe&#13;
      - name: jool&#13;
      - name: jool_siit&#13;
      - name: jool_common&#13;
  nodeLabels:&#13;
    node-role.kubernetes.io/master: ''&#13;
cluster:&#13;
  id: b9rXRBFHdsd8Umf5VP3DDNT-UDfJvo9O1aqTYAdBlhI=&#13;
  secret: 6tHGd/NZptvAwfSw1JQxVCzF+lPnOaigorcjPqcfQJs=&#13;
  controlPlane:&#13;
    endpoint: https://172.16.8.192:6443&#13;
  clusterName: mingyang&#13;
  network:&#13;
    cni:&#13;
      name: custom&#13;
      urls:&#13;
        - http://172.16.106.11:8088/mingyang/cncp/cilium-dsr.yaml&#13;
    dnsDomain: cluster.local&#13;
    podSubnets:&#13;
      - 10.32.0.0/16&#13;
      - fd00:1032::/48&#13;
    serviceSubnets:&#13;
      - 10.64.0.0/16&#13;
      - fd00:1064::/112&#13;
  token: fvxdtg.fd8ohnsdo63wh88b&#13;
  secretboxEncryptionSecret: R/ZSfqkzKb9rnH65AeGhCC8iH7qeM8JLXOb+TMGYFu0=&#13;
  ca:&#13;
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVMrZ0F3SUJBZ0lRWTlXNkFPZzc3WUpkM2RiRFVhcjZ0akFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSTBNRGN3TVRBM05UUXpObG9YRFRNME1EWXlPVEEzTlRRegpObG93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCQlRCd09xdDFnUHFlNEw0eXltTzJlRzJHVnJYNW9MQkZSSDFBY2JiUkxCOVJkczJRdWlQa0tWSWs3QmQKNVI5VTFObjRaZmxBbS9rbDBSU09ncmdvTm5tallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVV2OVJhbkJhczMwdEwrM1Y5K1NYZTQwN0FOY013Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloQU8zbzAvU0wKSGlsT0QzYnd5TmUrRVlIK0J1S2QrN0x6K2h1V2dORnh6YWVoQWlBMFRPa2F0U0tHeUoralg4OU8zUjkzcDUxYgp0Q1dRb1VxUURSNUliME1ZN0E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==&#13;
    key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSURqQzZ1c2Z2ZXBMTTlDRjZVR2poeWxHRVFBdG9NUzl3c2dIM21rVCtBSFNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFRk1IQTZxM1dBK3A3Z3ZqTEtZN1o0YllaV3RmbWdzRVZFZlVCeHR0RXNIMUYyelpDNkkrUQpwVWlUc0YzbEgxVFUyZmhsK1VDYitTWFJGSTZDdUNnMmVRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=&#13;
  aggregatorCA:&#13;
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZVENDQVFhZ0F3SUJBZ0lSQUw2UnJNdmUwVUZQNHRyNlJHWXFSNXN3Q2dZSUtvWkl6ajBFQXdJd0FEQWUKRncweU5EQTNNREV3TnpVME16WmFGdzB6TkRBMk1qa3dOelUwTXpaYU1BQXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVJqNTFPdG9JVktiMTE1cVFtM3FIaWMrbGVwaXVnaUxBZzgvMjBDOHhWbkUwWW9DZUo2Cm1vM2RyREcxdGx0Q09obUpQY2pZQndpelFjZ29PbjNLQjZWSW8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpIUVlEVlIwT0JCWUVGTmZuYXk3S2hiQ1NkYm84dXdoQithMlp5R2hZTUFvR0NDcUdTTTQ5QkFNQ0Ewa0FNRVlDCklRQ01pUWJ3V2l1aFVwZWNNYW9Idjk5MWcyUCt0dmdkYnVReVlxOEZJaEh5MHdJaEFPWkFrNTlnNmZ3NEsxcHAKeU43WC9qOGFLOW51RDRJd1htMnhjVGhWZFkwUwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==&#13;
    key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUxTSVdCSWY0S0ZpTERFTzRUam15d3YzV0lNZXNuelJQNlhjbXRPa2hHZUxvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFWStkVHJhQ0ZTbTlkZWFrSnQ2aDRuUHBYcVlyb0lpd0lQUDl0QXZNVlp4TkdLQW5pZXBxTgozYXd4dGJaYlFqb1ppVDNJMkFjSXMwSElLRHA5eWdlbFNBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=&#13;
  serviceAccount:&#13;
    key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSURlRUZ1ODNNR3VMa1YvRE9NSTV6RkJoUG13M1lMd0ZDUHFudzU4RXhncWdvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFRk03RTRpSWxMZHNaNmxyZDIvajBmckZzOW11aUlKVkpua0hVejdST2svemxsang1TXpiQgp2Qm0ya3NPQkhiVWYrVjEvb1A0eHZIK2lWWmp1ZmFuRVBnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=&#13;
  apiServer:&#13;
    image: registry.k8s.io/kube-apiserver:v1.28.5&#13;
    certSANs:&#13;
      - 172.16.8.192&#13;
    disablePodSecurityPolicy: true&#13;
    auditPolicy:&#13;
      apiVersion: audit.k8s.io/v1&#13;
      kind: Policy&#13;
      rules:&#13;
        - level: Metadata&#13;
  controllerManager:&#13;
    image: registry.k8s.io/kube-controller-manager:v1.28.5&#13;
  proxy:&#13;
    disabled: true&#13;
    image: registry.k8s.io/kube-proxy:v1.27.1&#13;
    mode: ipvs&#13;
    extraArgs:&#13;
      ipvs-strict-arp: 'true'&#13;
  scheduler:&#13;
    image: registry.k8s.io/kube-scheduler:v1.28.5&#13;
  discovery:&#13;
    enabled: true&#13;
    registries:&#13;
      kubernetes:&#13;
        disabled: true&#13;
      service: {}&#13;
  etcd:&#13;
    ca:&#13;
      crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmRENDQVNPZ0F3SUJBZ0lRWnFJS3hzdCtJOVFxRHA4YjVjZXBUekFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1JsZEdOa01CNFhEVEkwTURjd01UQTNOVFF6TmxvWERUTTBNRFl5T1RBM05UUXpObG93RHpFTgpNQXNHQTFVRUNoTUVaWFJqWkRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkZlOEFLUmpwYmtNCmZuTHJqT2NJQmRmakRqaWZwb2NmVlJGRlZ1dW1QTjIxTzNZM0NXcVdXMHBkcVBUSk9FMWI2YTFwZWtUdncwWEsKMGU1RFJUMzE0RXVqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjRApBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVUEtMbnBBcGpyTkNhCkNPanJ6V3JrVFdQbHBTWXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdkWUQ5RDUwUU84Y1pXSy9kdXlwSzhPZlcKWHAyaTAzc3Z6SGZpNmNEYko1SUNJQlBpeTVPdDM5citzaXEwUkVVVzZxUzRJQnhqemFrdUcxNmxoVEZIM0lBbQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==&#13;
      key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUd3Zkh2T2lQbHpLbVFsMkttR2NTaXpPTHhDUGRRK0N5UmtqcHhsQ2pSQjFvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFVjd3QXBHT2x1UXgrY3V1TTV3Z0YxK01PT0orbWh4OVZFVVZXNjZZODNiVTdkamNKYXBaYgpTbDJvOU1rNFRWdnByV2w2Uk8vRFJjclI3a05GUGZYZ1N3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=&#13;
  extraManifests:&#13;
    - http://172.16.106.11:8088/mingyang/cncp/cni-installation-ds.yaml&#13;
    - http://172.16.106.11:8088/mingyang/cncp/multus-with-patch.yaml&#13;
    - http://172.16.106.11:8088/mingyang/cncp/openebs.yaml&#13;
    - http://172.16.106.11:8088/mingyang/cncp/openebs-sc.yaml&#13;
    - http://172.16.106.11:8088/mingyang/cncp/dashboard-deploy.yaml&#13;
    - http://172.16.106.11:8088/mingyang/cncp/metallb-native.yaml&#13;
    - http://172.16.106.11:8088/mingyang/cncp/reloader.yaml&#13;
    - http://172.16.106.11:8088/mingyang/cncp/cncp-namespaces.yaml&#13;
    - http://172.16.106.11:8088/mingyang/cncp/nfs-server-deploy.yaml&#13;
  inlineManifests:&#13;
    - name: cluster-config-cm&#13;
      contents: |-&#13;
        kind: ConfigMap&#13;
        apiVersion: v1&#13;
        metadata:&#13;
          name: cluster-config&#13;
          namespace: kube-system&#13;
        data:&#13;
          KUBERNETES_API_SERVER_ADDRESS: '172.16.8.192'&#13;
          KUBERNETES_API_SERVER_PORT: '6443'&#13;
  adminKubeconfig:&#13;
    certLifetime: 87600h0m0s&#13;
  allowSchedulingOnControlPlanes: true&#13;
。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/ying-pan-gua-zai-pei-zhi-wen-jian.html</guid><pubDate>Thu, 11 Jul 2024 03:00:46 +0000</pubDate></item><item><title>边缘管控罐装命令</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/bian-yuan-guan-kong-guan-zhuang-ming-ling.html</link><description>Sidero Metal Clusterctl 安装&#13;
&#13;
export SIDERO_CONTROLLER_MANAGER_HOST_NETWORK=true&#13;
export SIDERO_CONTROLLER_MANAGER_DEPLOYMENT_STRATEGY=Recreate&#13;
export SIDERO_CONTROLLER_MANAGER_API_ENDPOINT=172.16.102.80&#13;
export SIDERO_CONTROLLER_MANAGER_SIDEROLINK_ENDPOINT=172.16.102.80&#13;
export CLUSTERCTL_LOG_LEVEL=5&#13;
export CLUSTERCTL_DISABLE_VERSIONCHECK=true&#13;
&#13;
clusterctl init -b talos:v0.6.2 -c talos:v0.5.3 -i sidero:v0.6.1&#13;
&#13;
-----&#13;
&#13;
Harbor Helm Chart 安装&#13;
&#13;
helm install --create-namespace --namespace harbor harbor ./ \&#13;
  --set expose.type=clusterIP \&#13;
  --set expose.tls.auto.commonName=172.16.102.79 \&#13;
  --set externalURL=https://172.16.102.79 \&#13;
  --set trivy.enabled=false \&#13;
  --set metrics.enabled=true \&#13;
  --set persistence.persistentVolumeClaim.registry.storageClass=openebs-sc \&#13;
  --set persistence.persistentVolumeClaim.jobservice.jobLog.storageClass=openebs-sc \&#13;
  --set persistence.persistentVolumeClaim.database.storageClass=openebs-sc \&#13;
  --set persistence.persistentVolumeClaim.redis.storageClass=openebs-sc \&#13;
  --set persistence.persistentVolumeClaim.trivy.storageClass=openebs-sc \&#13;
  --set nginx.nodeSelector.'kubernetes\.io/hostname'=cncp-ms-01 \&#13;
  --set portal.nodeSelector.'kubernetes\.io/hostname'=cncp-ms-01 \&#13;
  --set core.nodeSelector.'kubernetes\.io/hostname'=cncp-ms-01 \&#13;
  --set jobservice.nodeSelector.'kubernetes\.io/hostname'=cncp-ms-01 \&#13;
  --set registry.nodeSelector.'kubernetes\.io/hostname'=cncp-ms-01\&#13;
  --set trivy.nodeSelector.'kubernetes\.io/hostname'=cncp-ms-01 \&#13;
  --set database.nodeSelector.'kubernetes\.io/hostname'=cncp-ms-01 \&#13;
  --set redis.nodeSelector.'kubernetes\.io/hostname'=cncp-ms-01  \&#13;
  --set exporter.nodeSelector.'kubernetes\.io/hostname'=cncp-ms-01&#13;
&#13;
-----&#13;
&#13;
Harbor Nginx Metal LB 服务暴露配置&#13;
&#13;
cat &lt;&lt;EOF | kubectl apply -f -&#13;
apiVersion: v1&#13;
kind: Service&#13;
metadata:&#13;
  name: harbor-loadbalancer&#13;
  namespace: harbor&#13;
spec:&#13;
  selector:&#13;
    app: harbor&#13;
    component: nginx&#13;
  ipFamilies:&#13;
  - IPv4&#13;
  ipFamilyPolicy: SingleStack&#13;
  ports:&#13;
  - name: http&#13;
    port: 80&#13;
    targetPort: 8080&#13;
  - name: https&#13;
    port: 443&#13;
    targetPort: 8443&#13;
  type: LoadBalancer&#13;
  loadBalancerIP: 172.16.102.79&#13;
  allocateLoadBalancerNodePorts: false&#13;
EOF&#13;
&#13;
-----&#13;
&#13;
SigNoz Helm Chart 安装&#13;
&#13;
helm install --create-namespace --namespace signoz signoz ./ \&#13;
  --set global.storageClass=openebs-sc \&#13;
  --set clickhouse.nodeSelector.'kubernetes\.io/hostname'=cncp-ms-01 \&#13;
  --set clickhouse.clickhouseOperator.nodeSelector.'kubernetes\.io/hostname'=cncp-ms-01 \&#13;
  --set queryService.nodeSelector.'kubernetes\.io/hostname'=cncp-ms-01 \&#13;
  --set frontend.nodeSelector.'kubernetes\.io/hostname'=cncp-ms-01 \&#13;
  --set alertmanager.nodeSelector.'kubernetes\.io/hostname'=cncp-ms-01 \&#13;
  --set otelCollector.nodeSelector.'kubernetes\.io/hostname'=cncp-ms-01 \&#13;
  --set otelCollectorMetrics.nodeSelector.'kubernetes\.io/hostname'=cncp-ms-01&#13;
&#13;
-----&#13;
&#13;
SigNoz Frontend Metal LB 服务暴露配置&#13;
&#13;
cat &lt;&lt;EOF | kubectl apply -f -&#13;
apiVersion: v1&#13;
kind: Service&#13;
metadata:&#13;
  name: signoz-frontend-loadbalancer&#13;
  namespace: signoz&#13;
spec:&#13;
  selector:&#13;
    app.kubernetes.io/component: frontend&#13;
    app.kubernetes.io/instance: signoz&#13;
    app.kubernetes.io/name: signoz&#13;
  ipFamilies:&#13;
  - IPv6&#13;
  ipFamilyPolicy: SingleStack&#13;
  ports:&#13;
  - name: http&#13;
    port: 3301&#13;
    protocol: TCP&#13;
    targetPort: http&#13;
  type: LoadBalancer&#13;
  loadBalancerIP: 2408:8631:c02:ffa2::78&#13;
  allocateLoadBalancerNodePorts: false&#13;
EOF&#13;
&#13;
-----&#13;
&#13;
SigNoz Otel-collector Metal LB 服务暴露配置&#13;
&#13;
cat &lt;&lt;EOF | kubectl apply -f -&#13;
apiVersion: v1&#13;
kind: Service&#13;
metadata:&#13;
  name: signoz-otel-collector-loadbalancer&#13;
  namespace: signoz&#13;
spec:&#13;
  selector:&#13;
    app.kubernetes.io/component: otel-collector&#13;
    app.kubernetes.io/instance: signoz&#13;
    app.kubernetes.io/name: signoz&#13;
  ipFamilies:&#13;
  - IPv6&#13;
  ipFamilyPolicy: SingleStack&#13;
  ports:&#13;
  - name: jaeger-grpc&#13;
    port: 14250&#13;
    protocol: TCP&#13;
    targetPort: jaeger-grpc&#13;
  - name: jaeger-thrift&#13;
    port: 14268&#13;
    protocol: TCP&#13;
    targetPort: jaeger-thrift&#13;
  - name: metrics&#13;
    port: 8888&#13;
    protocol: TCP&#13;
    targetPort: metrics&#13;
  - name: otlp&#13;
    port: 4317&#13;
    protocol: TCP&#13;
    targetPort: otlp&#13;
  - name: otlp-http&#13;
    port: 4318&#13;
    protocol: TCP&#13;
    targetPort: otlp-http&#13;
  type: LoadBalancer&#13;
  loadBalancerIP: 2408:8631:c02:ffa2::79&#13;
  allocateLoadBalancerNodePorts: false&#13;
EOF&#13;
&#13;
---&#13;
&#13;
边缘管控 HTTP服务 部署&#13;
&#13;
cat &lt;&lt;EOF | kubectl apply -f -&#13;
apiVersion: apps/v1&#13;
kind: Deployment&#13;
metadata:&#13;
  name: ucp-http&#13;
  namespace: ucp&#13;
spec:&#13;
  selector:&#13;
    matchLabels:&#13;
      app: http&#13;
  template:&#13;
    metadata:&#13;
      labels:&#13;
        app: http&#13;
    spec:&#13;
      nodeSelector:&#13;
        kubernetes.io/hostname: cncp-ms-01&#13;
      containers:&#13;
        - name: http&#13;
          image: mrwsydocker/ucp-http:0.12&#13;
          imagePullPolicy: IfNotPresent&#13;
          resources:&#13;
            limits:&#13;
              memory: '128Mi'&#13;
              cpu: '500m'&#13;
          ports:&#13;
            - name: http&#13;
              containerPort: 80&#13;
          volumeMounts:&#13;
            - name: nginx-config-default&#13;
              mountPath: '/etc/nginx/conf.d/default.conf'&#13;
              subPath: 'default.conf'&#13;
              readOnly: true&#13;
      volumes:&#13;
        - name: nginx-config-default&#13;
          configMap:&#13;
            name: nginx-config-default&#13;
---&#13;
apiVersion: v1&#13;
kind: ConfigMap&#13;
metadata:&#13;
  name: nginx-config-default&#13;
  namespace: ucp&#13;
data:&#13;
  default.conf: |&#13;
    server {&#13;
      listen 80;&#13;
      listen [::]:80;&#13;
      server_name _;&#13;
      location / {&#13;
        autoindex on;&#13;
        root /webroot;&#13;
      }&#13;
    }&#13;
---&#13;
apiVersion: v1&#13;
kind: Service&#13;
metadata:&#13;
  name: http&#13;
  namespace: ucp&#13;
spec:&#13;
  selector:&#13;
    app: http&#13;
  ports:&#13;
  - name: http&#13;
    port: 80&#13;
    protocol: TCP&#13;
    targetPort: 80&#13;
    nodePort: 31080&#13;
  type: NodePort &#13;
EOF&#13;
&#13;
-----&#13;
&#13;
边缘管控 NTP服务 部署&#13;
&#13;
cat &lt;&lt;EOF | kubectl apply -f -&#13;
apiVersion: apps/v1&#13;
kind: DaemonSet&#13;
metadata:&#13;
  name: ntpserver&#13;
  namespace: ucp&#13;
  labels:&#13;
    app: ntpserver&#13;
spec:&#13;
  selector:&#13;
    matchLabels:&#13;
      app: ntpserver&#13;
  template:&#13;
    metadata:&#13;
      labels:&#13;
        app: ntpserver&#13;
    spec:&#13;
      tolerations:&#13;
        - key: node-role.kubernetes.io/control-plane&#13;
          operator: Exists&#13;
          effect: NoSchedule&#13;
        - key: node-role.kubernetes.io/master&#13;
          operator: Exists&#13;
          effect: NoSchedule&#13;
      containers:&#13;
        - name: ntpserver&#13;
          image: mrwsydocker/ntpserver:0.1&#13;
          resources:&#13;
            limits:&#13;
              memory: 256Mi&#13;
            requests:&#13;
              cpu: 50m&#13;
              memory: 32Mi&#13;
          ports:&#13;
            - name: ntp&#13;
              protocol: UDP&#13;
              containerPort: 123&#13;
              hostPort: 123&#13;
          volumeMounts:&#13;
            - name: ntpserver-config&#13;
              mountPath: '/etc/chrony/chrony.conf'&#13;
              subPath: 'chrony.conf'&#13;
              readOnly: true&#13;
      terminationGracePeriodSeconds: 30&#13;
      volumes:&#13;
        - name: ntpserver-config&#13;
          configMap:&#13;
            name: ntpserver-config&#13;
---&#13;
apiVersion: v1&#13;
kind: ConfigMap&#13;
metadata:&#13;
  name: ntpserver-config&#13;
  namespace: ucp&#13;
data:&#13;
  chrony.conf: |&#13;
    bindaddress 0.0.0.0&#13;
    bindaddress ::&#13;
    driftfile /var/lib/chrony/drift&#13;
    logdir /var/log/chrony&#13;
    local stratum 10&#13;
    pool 0.pool.ntp.org iburst minpoll 6 maxpoll 24 maxsources 3&#13;
    pool 1.pool.ntp.org iburst minpoll 6 maxpoll 24 maxsources 3&#13;
    pool 2.pool.ntp.org iburst minpoll 6 maxpoll 24 maxsources 3&#13;
    pool 3.pool.ntp.org iburst minpoll 6 maxpoll 24 maxsources 3&#13;
    allow 0.0.0.0/0&#13;
    allow ::/0&#13;
---&#13;
apiVersion: v1&#13;
kind: Service&#13;
metadata:&#13;
  name: ntpserver&#13;
  namespace: ucp&#13;
spec:&#13;
  selector:&#13;
    app: ntpserver&#13;
  ports:&#13;
    - name: ntp&#13;
      port: 123&#13;
      protocol: TCP&#13;
      targetPort: 123&#13;
  type: ClusterIP&#13;
EOF。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/bian-yuan-guan-kong-guan-zhuang-ming-ling.html</guid><pubDate>Tue, 09 Jul 2024 07:35:58 +0000</pubDate></item><item><title>talos硬盘挂载方法</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/talos-ying-pan-gua-zai-fang-fa.html</link><description>0. 开始操作前，请认真阅读以下说明：&#13;
(1) 调整磁盘挂载配置会被Talos系统强制触发重启，请确保集群没有人在用后再执行！&#13;
(2) 由于操作磁盘为高度风险操作，数据无价，请确认精神状态良好，视力正常，能看清每一个字母后再操作！&#13;
(3) 如果在操作过程中发现返回结果异常，请立即停止操作，必要时请立即拔掉设备上的电源线，并寻求帮助！&#13;
&#13;
1. 通过talosctl disks确认目标磁盘是否在位&#13;
NODE           DEV        MODEL              SERIAL   TYPE   UUID   WWID   MODALIAS      NAME   SIZE     BUS_PATH                                                                SUBSYSTEM          SYSTEM_DISK&#13;
172.16.8.192   /dev/sda   D300 240G-SSDD03   -        SSD    -      -      scsi:t-0x00   -      240 GB   /pci0000:00/0000:00:08.1/0000:12:00.2/ata2/host1/target1:0:0/1:0:0:0/   /sys/class/block   *&#13;
172.16.8.192   /dev/sdb   ST2000NM000B-2TD   -        HDD    -      -      scsi:t-0x00   -      2.0 TB   /pci0000:00/0000:00:08.1/0000:12:00.2/ata3/host2/target2:0:0/2:0:0:0/   /sys/class/block   &#13;
172.16.8.193   /dev/sda   D300 240G-SSDD03   -        SSD    -      -      scsi:t-0x00   -      240 GB   /pci0000:00/0000:00:08.1/0000:12:00.2/ata2/host1/target1:0:0/1:0:0:0/   /sys/class/block   *&#13;
172.16.8.193   /dev/sdb   ST2000NM000B-2TD   -        HDD    -      -      scsi:t-0x00   -      2.0 TB   /pci0000:00/0000:00:08.1/0000:12:00.2/ata3/host2/target2:0:0/2:0:0:0/   /sys/class/block &#13;
&#13;
（注：正常情况下，固态硬盘(SSD)应该位于/dev/sda，机械硬盘(HDD)应该位于/dev/sdb，如果/dev/sdb硬盘未在位，或者两块硬盘位置相反，请联系产品硬件组进行确认检查）&#13;
&#13;
2. 通过talosctl mounts确认目标磁盘是否已被挂载&#13;
NODE           FILESYSTEM                                                   SIZE(GB)   USED(GB)   AVAILABLE(GB)   PERCENT USED   MOUNTED ON&#13;
172.16.8.192   devtmpfs                                                     16.73      0.00       16.73           0.00%          /dev&#13;
172.16.8.192   tmpfs                                                        16.77      0.01       16.77           0.03%          /run&#13;
172.16.8.192   tmpfs                                                        16.77      0.00       16.77           0.00%          /system&#13;
172.16.8.192   tmpfs                                                        0.07       0.00       0.07            0.00%          /tmp&#13;
172.16.8.192   overlay                                                      0.00       0.00       0.00            100.00%        /&#13;
172.16.8.192   rootfs                                                       16.73      0.06       16.67           0.38%          /lib/firmware&#13;
172.16.8.192   tmpfs                                                        16.77      0.00       16.77           0.00%          /dev/shm&#13;
172.16.8.192   tmpfs                                                        16.77      0.00       16.77           0.00%          /etc/cri/conf.d/hosts&#13;
172.16.8.192   overlay                                                      16.77      0.00       16.77           0.00%          /usr/etc/udev&#13;
172.16.8.192   /dev/sda5                                                    0.10       0.01       0.09            6.30%          /system/state&#13;
172.16.8.192   overlay                                                      16.77      0.00       16.77           0.00%          /usr/local/lib/containers/hello-world&#13;
172.16.8.192   /dev/sda6                                                    238.68     21.56      217.12          9.03%          /var&#13;
......&#13;
&#13;
（注：快速确认可以使用 talosctl mounts | grep /dev/sdb，如果目标Node没有输出结果说明没有挂载；目标Node仅输出一行 /var/openebs/local2 说明已挂载但未投入使用，显示多行 /var/lib/kubelet/pods 说明已经有PVC在位，禁止在未处理PVC的前提下解除挂载，否则数据会丢）&#13;
172.16.8.193   /dev/sdb1                                                    1999.42    14.03      1985.39         0.70%          /var/openebs/local2&#13;
172.16.8.193   /dev/sdb1                                                    1999.42    14.03      1985.39         0.70%          /var/lib/kubelet/pods/cd77311b-b37f-4f12-9e7b-4463fcca9b3d/volumes/kubernetes.io~local-volume/pvc-7f42effa-94c8-4027-9487-f8fdd132e4af&#13;
172.16.8.193   /dev/sdb1                                                    1999.42    14.03      1985.39         0.70%          /var/lib/kubelet/pods/532725e8-267d-4edd-9200-2e3b7c7e28c5/volumes/kubernetes.io~local-volume/pvc-dd6d6410-7b6f-4ae1-b1aa-d1cd4ba81ecb&#13;
172.16.8.193   /dev/sdb1                                                    1999.42    14.03      1985.39         0.70%          /var/lib/kubelet/pods/b02f0998-929b-40cf-8489-ee2a3dc869ab/volumes/kubernetes.io~local-volume/pvc-f5e3468b-ea5a-4730-9308-249e0d96a753&#13;
172.16.8.193   /dev/sdb1                                                    1999.42    14.03      1985.39         0.70%          /var/lib/kubelet/pods/29b9ec08-56bf-404a-8d6f-5068e7103b25/volumes/kubernetes.io~local-volume/pvc-3c06cf2a-5d91-4775-a54f-06149ba515cc&#13;
&#13;
3. 修改Talos MachineConfig（建议从最后一个集群开始，倒序修改，使用 talosctl edit mc -n IP 逐台修改，禁止同时修改多个节点）&#13;
在 machine: 字段下补充如下内容：&#13;
&#13;
machine:&#13;
    disks:&#13;
        - device: /dev/sdb # 请多次确认，严禁写成 /dev/sda，否则节点必炸！&#13;
           partitions:&#13;
              - mountpoint: /var/openebs/local2&#13;
&#13;
（注：/dev/sdb 后面不要加1，如 /dev/sdb1，Talos会自动补全）&#13;
&#13;
在machine.kubelet.extraMounts 字段下补充如下内容：&#13;
&#13;
machine:&#13;
  kubelet:&#13;
    extraMounts:&#13;
      - destination: /var/openebs/local2&#13;
        type: bind&#13;
        source: /var/openebs/local2&#13;
        options:&#13;
          - bind&#13;
          - rshared&#13;
          - rw&#13;
&#13;
确认无误后保存退出。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/talos-ying-pan-gua-zai-fang-fa.html</guid><pubDate>Tue, 09 Jul 2024 07:19:39 +0000</pubDate></item><item><title>dhcp配置文件</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/dhcp-pei-zhi-wen-jian.html</link><description>```shell&#13;
ddns-update-style none;&#13;
subnet 172.16.8.0 netmask 255.255.255.0&#13;
{&#13;
range 172.16.8.201 172.16.8.240;&#13;
option routers 172.16.8.1;&#13;
default-lease-time 600;&#13;
max-lease-time 7200;&#13;
#filename'ipxe.efi';&#13;
#next-server 172.16.8.2;&#13;
}&#13;
。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/dhcp-pei-zhi-wen-jian.html</guid><pubDate>Thu, 27 Jun 2024 00:58:01 +0000</pubDate></item><item><title>超云网口定义</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/chao-yun-wang-kou-ding-yi.html</link><description>&#13;
![image](https://github.com/user-attachments/assets/fb5a98cd-b59d-4b9c-b474-909dfc850162)&#13;
&#13;
enp6s0 0000:06:00.0&#13;
enp5s0 0000:05:00.0 带外管理&#13;
&#13;
enp1s0f0 0000:01:00.0 集群网络Bond&#13;
enp1s0f1 0000:01:00.1 集群网络Bond&#13;
&#13;
enp7s0f0 0000:07:00.0&#13;
enp7s0f1 0000:07:00.1&#13;
enp7s0f2 0000:07:00.2&#13;
enp7s0f3 0000:07:00.3&#13;
&#13;
&#13;
👍 &#13;
R3215新版 (Master123)&#13;
enp1s0f0 0000:01:00.0 板载左侧&#13;
enp1s0f1 0000:01:00.1 板载右侧&#13;
&#13;
enp193s0f0 0000:c1:00.0 Slot 3 Port 1 10G光&#13;
enp193s0f1 0000:c1:00.1 Slot 3 Port 2 10G光&#13;
enp193s0f2 0000:c1:00.2 Slot 3 Port 3 10G光&#13;
enp193s0f3 0000:c1:00.3 Slot 3 Port 4 10G光&#13;
&#13;
enp65s0f0 0000:41:00.0 Slot 5 Port 1 1G电&#13;
enp65s0f1 0000:41:00.1 Slot 5 Port 2 1G电&#13;
&#13;
enp68s0f0 0000:44:00.0 Slot 6 Port 1 1G电&#13;
enp68s0f1 0000:44:00.1 Slot 6 Port 2 1G电&#13;
enp68s0f2 0000:44:00.2 Slot 6 Port 3 1G电&#13;
enp68s0f3 0000:44:00.3 Slot 6 Port 4 1G电&#13;
&#13;
👍 R3215旧版&#13;
enp4s0f0 0000:04:00.0 板载左侧&#13;
enp4s0f1 0000:04:00.1 板载右侧&#13;
&#13;
enp9s0f0 0000:09:00.0 Slot 1 Port 1 1G电&#13;
enp9s0f1 0000:09:00.1 Slot 1 Port 2 1G电&#13;
enp9s0f2 0000:09:00.2 Slot 1 Port 3 1G电&#13;
enp0s0f3 0000:09:00.3 Slot 1 Port 4 1G电&#13;
&#13;
enp129s0f0 0000:81:00.0 Slot 2 Port 1 1G电&#13;
enp129s0f1 0000:81:00.1 Slot 2 Port 2 1G电&#13;
&#13;
enp65s0f0 0000:41:00.0 Slot 6 Port 1 10G光&#13;
enp65s0f1 0000:41:00.1 Slot 6 Port 2 10G光&#13;
&#13;
enp1s0f0 0000:01:00.0 Slot 7 Port 1 10G光&#13;
enp1s0f0 0000:01:00.1 Slot 7 Port 2 10G光。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/chao-yun-wang-kou-ding-yi.html</guid><pubDate>Wed, 26 Jun 2024 08:42:29 +0000</pubDate></item><item><title>集群时间同步注入器.yaml</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/ji-qun-shi-jian-tong-bu-zhu-ru-qi-.yaml.html</link><description>```yaml&#13;
---&#13;
# Source: k8tz/templates/namespace.yaml&#13;
apiVersion: v1&#13;
kind: Namespace&#13;
metadata:&#13;
  name: k8tz&#13;
  labels:&#13;
    k8tz.io/controller-namespace: 'true'&#13;
    helm.sh/chart: k8tz-0.16.1&#13;
    app.kubernetes.io/name: k8tz&#13;
    app.kubernetes.io/instance: k8tz&#13;
    app.kubernetes.io/version: '0.16.1'&#13;
    app.kubernetes.io/managed-by: Helm&#13;
---&#13;
# Source: k8tz/templates/serviceaccount.yaml&#13;
apiVersion: v1&#13;
kind: ServiceAccount&#13;
metadata:&#13;
  name: k8tz&#13;
  namespace: k8tz&#13;
  labels:&#13;
    helm.sh/chart: k8tz-0.16.1&#13;
    app.kubernetes.io/name: k8tz&#13;
    app.kubernetes.io/instance: k8tz&#13;
    app.kubernetes.io/version: '0.16.1'&#13;
    app.kubernetes.io/managed-by: Helm&#13;
---&#13;
# Source: k8tz/templates/admission-webhook.yaml&#13;
apiVersion: v1&#13;
data:&#13;
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVmVxclBqazRQYmQ2TndYdDJRRE5pVEFOQmdrcWhraUc5dzBCQVFzRkFEQVkKTVJZd0ZBWURWUVFERXcxck9IUjZMbXM0ZEhvdWMzWmpNQjRYRFRJME1EWXdOREExTVRBMU5Gb1hEVE00TURZdwpOVEExTVRBMU5Gb3dHREVXTUJRR0ExVUVBeE1OYXpoMGVpNXJPSFI2TG5OMll6Q0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOZmhNSU11ZGZDdzdjcFpWdW9pZ1Z3VGNUQjZzWFVrT1RJSHdUUU8KZU9HN1hRMWJoNWFmZ1NVZUhkK3FUdTIvZFFVaWp3VjNkSjJ1THoxY0dhSU1UNGNIbzVTMXF4L3haRFRsbjljUQpxaE82Q1NXMHVTekg4UUh2KzRIU2pJWEhGS0toSEFEZ2ROUkRHdVNrM2wwZDJjeGhVREVPNFY3R2xEZEhKTUg5ClFRVWNibFYvS0ZLcE5GZU1UM1pPM2VjbEVUQ2kvaDlscVhvSDNRbDNkZUNTMkpaLy9sTW9SeTczYlBCY0h2TFEKWmlFTUVRTjdyWnIvNXI1WU1qWVNPdFdGemI2WjR3c05nUW1saStUV2xIUWNNK283UmVQTXNLYS9nZ0xWaDUrYQozcVpHRzFNNGdZZS8zZTRGaXlSZ3ZENStWbDErUzlYMFpNTXc5a3VJbmljZGN0OENBd0VBQWFOWk1GY3dEZ1lEClZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlYKSFJNQkFmOEVBakFBTUJnR0ExVWRFUVFSTUErQ0RXczRkSG91YXpoMGVpNXpkbU13RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFOT2trNnlVdW4vU2d1Ynp2QUZRN25OalVvRXhQYmM3bXNmZDJsZ0JmczFUc04zaFE5S2tJNTRuCmU5TVhNRFI5RkVUUFVwZW5vMDF0ZnNaQXgwODJMMXIya1BlenhNN2QxZ0wvUjhJdHJjRDZoWG5ldzAxVWhDMisKZUJWTDN5endBRld4SXRab0xVR1orcEJlaWxWcDBraDBrVUxJWHF0ZG9meEZrbFYyMSsxdjlFWXZrSjdySm1lVwp5Tm0rWWttbmxocjNSY3cyZWkzQVpKU0VJSktzaHhacmZHaEhNSTBFcmE3SkxzUEJWMm9JMW5nYWR3amltdEMzCjdPWGRtcW1KYlBZemRxdi9TUXFCOTVwS1kvWUhtVjZ5d1YvM0toUmI1ZXZMT05hczZ6ZFk0MTg2NkpsdGoxR0IKU2ZyQmRmekJ4VnBrSTM4QnBncTJNQUNBU2VaNlRmND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==&#13;
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMStFd2d5NTE4TER0eWxsVzZpS0JYQk54TUhxeGRTUTVNZ2ZCTkE1NDRidGREVnVICmxwK0JKUjRkMzZwTzdiOTFCU0tQQlhkMG5hNHZQVndab2d4UGh3ZWpsTFdySC9Ga05PV2YxeENxRTdvSkpiUzUKTE1meEFlLzdnZEtNaGNjVW9xRWNBT0IwMUVNYTVLVGVYUjNaekdGUU1RN2hYc2FVTjBja3dmMUJCUnh1Vlg4bwpVcWswVjR4UGRrN2Q1eVVSTUtMK0gyV3BlZ2ZkQ1hkMTRKTFlsbi8rVXloSEx2ZHM4RndlOHRCbUlRd1JBM3V0Cm12L212bGd5TmhJNjFZWE52cG5qQ3cyQkNhV0w1TmFVZEJ3ejZqdEY0OHl3cHIrQ0F0V0huNXJlcGtZYlV6aUIKaDcvZDdnV0xKR0M4UG41V1hYNUwxZlJrd3pEMlM0aWVKeDF5M3dJREFRQUJBb0lCQVFDUW42TkJidUhDVXJXcgpSdmpNT0R1VGRNN3luRy9BTzNrNXhDb3g5clFTL2RPVC9FcTBwTHovSWRML29YZnBITWVIbmlSVWxEZUMzMHQwCmZ2d0pMTmdtYlA2d3hKZ1UrVUdaa20vbnc1azlSL2VTMUNUdUZEQ29qSjVnMWE0Z2ZVT2N3L1Fmdmo5bWFHSmUKNVBpM1J5VS9INzU2Ynk2YXNNeGd6LytYR2xQeDJHT0ZSamUvMjBMcVltN1k2UEo0SXJZblhnTEx2cGRRMk16SAozUUl0VjhSOU1SU1hDdmZEYmRuTkw0NXk1K2tyK0pPdDhkMXZocVpuY1ZPSitBeVFMSkNtMGZVUmpGYkFBb1EvCm5SdGNRdnI2RmNTS0IvbFh3Y3NxOG02ak4rZE03M2E1a2dRY2FVOWZVM3RvRkU1MFBhV0lsRWQveWZ0Vml1OXcKRnQySkFEVXBBb0dCQU53djcwbmcwQkZ6OVlGTnIvT3lZWUZYL3diaDVoQ0lLK3BMNjdNL3RHMUszY0prTVBUVAozanRacHRQeTdwWEhvREx3M0x5YUZVWXI0VXVzMm5uOVE1aThua2d3SzRsRWkxbDlUZUFncElNbk5ZUWhGOE9FCkNFSHhPVDRwd2dOb3dVQVNtZUo1ZCtqMVBpUDk3M3M0UjNRUW11RkZEVkNOMnRaZFc5UTRrOGZqQW9HQkFQcjkKNVpOR0pBS3pDNzd6Tk0zbHNSZ2E1b0Z1VVRVZEU0QUltMCtKNE4vMnJSTWxnUDVBSUtUaTJ5QUpKU1F0MGdCVQowSDZ6WU9Bc2MydHZYMVJZTDF0eEl4anN6RnQyWVNsbEp5bGRiaXJkRk9uS1BMTVFEUHlDV0U3MGVJWHhZZFBBCi9FemkxV090UzJ0QjhTWWJNdUVxK01xYXNKRDcyV3FUWk5lWmtzSFZBb0dBU2lWbUtmV25lMGtXTWkyc0E1OWQKRUVaR25kV3lPSHp5ZE5xT0MzVjNWNXB2Wk1lQ2FOOXpwWDdDRy90aGRsU2IwS3VsV1dsMW9vU2lRRzU3djdxVwphYmVTZ1hLZkpvRkxmNTRmZkVyaHV6eVgyOStjOWZ6Zkh2MlJMaXEzcDVnK0EwcUFRWEJ2L2FXZ0FGVEJzVGU1CmNBOHJhSkp0TW1RaWZpOC8vZzN6VGNzQ2dZRUE4TitmWmtKbkpzd0wxcnB6RDdLQ3paNXJYd1d2RzZrRzROWGgKcjJpa0Rtd2UxNFFqa2wyYXRvTWNSbGRnZEtNZ3FiNjd4UXlEU1VCL21EaHZKWFBvSnZxaDh6YTJQSVNVWkhTMgpLNldGcDg4NlZkQUhodFU5a1V2S1VpT2VVdlUvckVmR0drZUxBTGo3NnppQ3BNNXZldGFSbzJiblVvelFyODQ2CmRncmxZKzBDZ1lFQWg1bzJIaDRTZ2w3VjVsR3JreUtyeGVMRXk0dStQOHQ0MmFveHVBWnU3Z2dKWGJHRno3ZFMKYmxYcGRYQ21tRzNnaW1iVzNkSzgrNElJRXdJOWdrWnJKVnRvdGllaWdpWW15cityaTM1cjlQRVJSRHljNGUrVwpsMWoycnR4c2w5WjY0cXBVRTAvNllneUoyWnFlVE83UGRUSHVqQW0zSERvYmJZVTNpWStuY1VvPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==&#13;
kind: Secret&#13;
metadata:&#13;
  namespace: k8tz&#13;
  creationTimestamp: null&#13;
  name: k8tz-tls&#13;
  labels:&#13;
    helm.sh/chart: k8tz-0.16.1&#13;
    app.kubernetes.io/name: k8tz&#13;
    app.kubernetes.io/instance: k8tz&#13;
    app.kubernetes.io/version: '0.16.1'&#13;
    app.kubernetes.io/managed-by: Helm&#13;
---&#13;
# Source: k8tz/templates/rbac.yaml&#13;
kind: ClusterRole&#13;
apiVersion: rbac.authorization.k8s.io/v1&#13;
metadata:&#13;
  name: k8tz-role&#13;
  labels:&#13;
    helm.sh/chart: k8tz-0.16.1&#13;
    app.kubernetes.io/name: k8tz&#13;
    app.kubernetes.io/instance: k8tz&#13;
    app.kubernetes.io/version: '0.16.1'&#13;
    app.kubernetes.io/managed-by: Helm&#13;
rules:&#13;
  - apiGroups: ['']&#13;
    resources: ['namespaces']&#13;
    verbs: ['get']&#13;
  - apiGroups: ['']&#13;
    resources: ['secrets']&#13;
    verbs: ['get', 'list', 'watch']&#13;
---&#13;
# Source: k8tz/templates/rbac.yaml&#13;
kind: ClusterRoleBinding&#13;
apiVersion: rbac.authorization.k8s.io/v1&#13;
metadata:&#13;
  name: k8tz-role-binding&#13;
  labels:&#13;
    helm.sh/chart: k8tz-0.16.1&#13;
    app.kubernetes.io/name: k8tz&#13;
    app.kubernetes.io/instance: k8tz&#13;
    app.kubernetes.io/version: '0.16.1'&#13;
    app.kubernetes.io/managed-by: Helm&#13;
subjects:&#13;
  - kind: ServiceAccount&#13;
    name: k8tz&#13;
    namespace: k8tz&#13;
roleRef:&#13;
  kind: ClusterRole&#13;
  apiGroup: rbac.authorization.k8s.io&#13;
  name: k8tz-role&#13;
---&#13;
# Source: k8tz/templates/service.yaml&#13;
apiVersion: v1&#13;
kind: Service&#13;
metadata:&#13;
  name: k8tz&#13;
  namespace: k8tz&#13;
  labels:&#13;
    helm.sh/chart: k8tz-0.16.1&#13;
    app.kubernetes.io/name: k8tz&#13;
    app.kubernetes.io/instance: k8tz&#13;
    app.kubernetes.io/version: '0.16.1'&#13;
    app.kubernetes.io/managed-by: Helm&#13;
spec:&#13;
  type: ClusterIP&#13;
  ports:&#13;
    - port: 443&#13;
      targetPort: https&#13;
      protocol: TCP&#13;
      name: https&#13;
  selector:&#13;
    app.kubernetes.io/name: k8tz&#13;
    app.kubernetes.io/instance: k8tz&#13;
---&#13;
# Source: k8tz/templates/controller.yaml&#13;
apiVersion: apps/v1&#13;
kind: Deployment&#13;
metadata:&#13;
  name: k8tz&#13;
  namespace: k8tz&#13;
  labels:&#13;
    helm.sh/chart: k8tz-0.16.1&#13;
    app.kubernetes.io/name: k8tz&#13;
    app.kubernetes.io/instance: k8tz&#13;
    app.kubernetes.io/version: '0.16.1'&#13;
    app.kubernetes.io/managed-by: Helm&#13;
spec:&#13;
  replicas: 1&#13;
  selector:&#13;
    matchLabels:&#13;
      app.kubernetes.io/name: k8tz&#13;
      app.kubernetes.io/instance: k8tz&#13;
  template:&#13;
    metadata:&#13;
      annotations:&#13;
        checksum/config: 1b65ca92e0327fa2cf61c6d2fde359f580be30a672adf6df067080e3ce04261b&#13;
      labels:&#13;
        app.kubernetes.io/name: k8tz&#13;
        app.kubernetes.io/instance: k8tz&#13;
    spec:&#13;
      volumes:&#13;
        - name: tls&#13;
          secret:&#13;
            secretName: k8tz-tls&#13;
      serviceAccountName: k8tz&#13;
      securityContext:&#13;
        runAsNonRoot: true&#13;
        seccompProfile:&#13;
          type: RuntimeDefault&#13;
      containers:&#13;
        - name: k8tz&#13;
          args:&#13;
            - 'webhook'&#13;
            - '--timezone'&#13;
            - 'Asia/Shanghai'&#13;
            - '--injection-strategy'&#13;
            - 'initContainer'&#13;
            - '--inject=true'&#13;
            - '--container-name=k8tz'&#13;
            - '--bootstrap-image'&#13;
            - 'quay.io/k8tz/k8tz:0.16.1'&#13;
          securityContext:&#13;
            allowPrivilegeEscalation: false&#13;
            capabilities:&#13;
              drop:&#13;
                - ALL&#13;
            runAsNonRoot: true&#13;
            seccompProfile:&#13;
              type: RuntimeDefault&#13;
          image: 'quay.io/k8tz/k8tz:0.16.1'&#13;
          imagePullPolicy: IfNotPresent&#13;
          volumeMounts:&#13;
            - name: tls&#13;
              mountPath: /run/secrets/tls&#13;
              readOnly: true&#13;
          ports:&#13;
            - name: https&#13;
              containerPort: 8443&#13;
              protocol: TCP&#13;
          livenessProbe:&#13;
            httpGet:&#13;
              path: /health&#13;
              port: https&#13;
              scheme: HTTPS&#13;
          readinessProbe:&#13;
            httpGet:&#13;
              path: /health&#13;
              port: https&#13;
              scheme: HTTPS&#13;
          resources: {}&#13;
---&#13;
# Source: k8tz/templates/admission-webhook.yaml&#13;
apiVersion: admissionregistration.k8s.io/v1&#13;
kind: MutatingWebhookConfiguration&#13;
metadata:&#13;
  name: k8tz&#13;
  labels:&#13;
    helm.sh/chart: k8tz-0.16.1&#13;
    app.kubernetes.io/name: k8tz&#13;
    app.kubernetes.io/instance: k8tz&#13;
    app.kubernetes.io/version: '0.16.1'&#13;
    app.kubernetes.io/managed-by: Helm&#13;
webhooks:&#13;
  - name: admission-controller.k8tz.io&#13;
    namespaceSelector:&#13;
      matchExpressions:&#13;
        - key: k8tz.io/controller-namespace&#13;
          operator: NotIn&#13;
          values: ['true']&#13;
        - key: kubernetes.io/metadata.name&#13;
          operator: NotIn&#13;
          values:&#13;
            - k8tz&#13;
            - kube-system&#13;
    sideEffects: None&#13;
    failurePolicy: Fail&#13;
    admissionReviewVersions: ['v1', 'v1beta1']&#13;
    clientConfig:&#13;
      service:&#13;
        name: k8tz&#13;
        namespace: k8tz&#13;
        path: '/'&#13;
        port: 443&#13;
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVmVxclBqazRQYmQ2TndYdDJRRE5pVEFOQmdrcWhraUc5dzBCQVFzRkFEQVkKTVJZd0ZBWURWUVFERXcxck9IUjZMbXM0ZEhvdWMzWmpNQjRYRFRJME1EWXdOREExTVRBMU5Gb1hEVE00TURZdwpOVEExTVRBMU5Gb3dHREVXTUJRR0ExVUVBeE1OYXpoMGVpNXJPSFI2TG5OMll6Q0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOZmhNSU11ZGZDdzdjcFpWdW9pZ1Z3VGNUQjZzWFVrT1RJSHdUUU8KZU9HN1hRMWJoNWFmZ1NVZUhkK3FUdTIvZFFVaWp3VjNkSjJ1THoxY0dhSU1UNGNIbzVTMXF4L3haRFRsbjljUQpxaE82Q1NXMHVTekg4UUh2KzRIU2pJWEhGS0toSEFEZ2ROUkRHdVNrM2wwZDJjeGhVREVPNFY3R2xEZEhKTUg5ClFRVWNibFYvS0ZLcE5GZU1UM1pPM2VjbEVUQ2kvaDlscVhvSDNRbDNkZUNTMkpaLy9sTW9SeTczYlBCY0h2TFEKWmlFTUVRTjdyWnIvNXI1WU1qWVNPdFdGemI2WjR3c05nUW1saStUV2xIUWNNK283UmVQTXNLYS9nZ0xWaDUrYQozcVpHRzFNNGdZZS8zZTRGaXlSZ3ZENStWbDErUzlYMFpNTXc5a3VJbmljZGN0OENBd0VBQWFOWk1GY3dEZ1lEClZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlYKSFJNQkFmOEVBakFBTUJnR0ExVWRFUVFSTUErQ0RXczRkSG91YXpoMGVpNXpkbU13RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFOT2trNnlVdW4vU2d1Ynp2QUZRN25OalVvRXhQYmM3bXNmZDJsZ0JmczFUc04zaFE5S2tJNTRuCmU5TVhNRFI5RkVUUFVwZW5vMDF0ZnNaQXgwODJMMXIya1BlenhNN2QxZ0wvUjhJdHJjRDZoWG5ldzAxVWhDMisKZUJWTDN5endBRld4SXRab0xVR1orcEJlaWxWcDBraDBrVUxJWHF0ZG9meEZrbFYyMSsxdjlFWXZrSjdySm1lVwp5Tm0rWWttbmxocjNSY3cyZWkzQVpKU0VJSktzaHhacmZHaEhNSTBFcmE3SkxzUEJWMm9JMW5nYWR3amltdEMzCjdPWGRtcW1KYlBZemRxdi9TUXFCOTVwS1kvWUhtVjZ5d1YvM0toUmI1ZXZMT05hczZ6ZFk0MTg2NkpsdGoxR0IKU2ZyQmRmekJ4VnBrSTM4QnBncTJNQUNBU2VaNlRmND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==&#13;
    rules:&#13;
      - operations: ['CREATE']&#13;
        apiGroups: ['']&#13;
        apiVersions: ['v1']&#13;
        resources: ['pods']&#13;
      - operations: ['CREATE']&#13;
        apiGroups: ['batch']&#13;
        apiVersions: ['v1']&#13;
        resources: ['cronjobs']&#13;
---&#13;
&#13;
```。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/ji-qun-shi-jian-tong-bu-zhu-ru-qi-.yaml.html</guid><pubDate>Wed, 26 Jun 2024 07:55:50 +0000</pubDate></item><item><title>集群发货前注意事项</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/ji-qun-fa-huo-qian-zhu-yi-shi-xiang.html</link><description>![image](https://github.com/donkeytt11111/jiaxin.github.io/assets/167744103/281c6300-2ef0-400c-8ae0-0382faf9602a)&#13;
。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/ji-qun-fa-huo-qian-zhu-yi-shi-xiang.html</guid><pubDate>Wed, 26 Jun 2024 04:43:48 +0000</pubDate></item><item><title>集群灾难恢复方案</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/ji-qun-zai-nan-hui-fu-fang-an.html</link><description>![image](https://github.com/donkeytt11111/jiaxin.github.io/assets/167744103/ba658f4b-645a-462c-a316-910cd60b5682)&#13;
。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/ji-qun-zai-nan-hui-fu-fang-an.html</guid><pubDate>Tue, 25 Jun 2024 07:03:00 +0000</pubDate></item><item><title>离线更新镜像方案</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/li-xian-geng-xin-jing-xiang-fang-an.html</link><description>![image](https://github.com/donkeytt11111/jiaxin.github.io/assets/167744103/0a0a15a9-632a-41d8-bc05-16adde424fec)&#13;
&#13;
。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/li-xian-geng-xin-jing-xiang-fang-an.html</guid><pubDate>Tue, 25 Jun 2024 07:02:03 +0000</pubDate></item><item><title>集群系统时间同步</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/ji-qun-xi-tong-shi-jian-tong-bu.html</link><description>![image](https://github.com/donkeytt11111/jiaxin.github.io/assets/167744103/71acb7a0-fd8b-4e75-b38c-350b7cad84ef)&#13;
。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/ji-qun-xi-tong-shi-jian-tong-bu.html</guid><pubDate>Tue, 25 Jun 2024 07:01:14 +0000</pubDate></item><item><title>K8S_时间同步</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/K8S_-shi-jian-tong-bu.html</link><description>在 Kubernetes 集群中部署 NTP DaemonSet 以同步时间&#13;
以下是详细步骤，创建和部署一个 NTP DaemonSet 来同步所有 Pod 的时间。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/K8S_-shi-jian-tong-bu.html</guid><pubDate>Mon, 24 Jun 2024 05:42:14 +0000</pubDate></item><item><title>docker_push.sh</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/docker_push.sh.html</link><description>```shell&#13;
#!/bin/bash&#13;
&#13;
# 定义目标仓库前缀&#13;
TARGET_IP='172.16.8.3'&#13;
&#13;
# 获取所有本地镜像的信息&#13;
IMAGES=$(docker images --format '{{.Repository}}:{{.Tag}}')&#13;
&#13;
# 遍历所有本地镜像&#13;
for IMAGE in $IMAGES&#13;
do&#13;
    # 获取镜像的原始仓库和标签&#13;
    REPO=$(echo $IMAGE | cut -d':' -f1)&#13;
    TAG=$(echo $IMAGE | cut -d':' -f2)&#13;
&#13;
    # 构造新的仓库地址&#13;
    NEW_REPO='$TARGET_IP/$REPO'&#13;
&#13;
    # 构造新的完整标签&#13;
    NEW_IMAGE='$NEW_REPO:$TAG'&#13;
&#13;
    echo 'Tagging image $IMAGE as $NEW_IMAGE'&#13;
    docker tag $IMAGE $NEW_IMAGE&#13;
&#13;
    if [ $? -eq 0 ]; then&#13;
        echo 'Successfully tagged $IMAGE as $NEW_IMAGE'&#13;
&#13;
        echo 'Pushing image $NEW_IMAGE to remote repository...'&#13;
        docker push $NEW_IMAGE&#13;
&#13;
        if [ $? -eq 0 ]; then&#13;
            echo 'Successfully pushed $NEW_IMAGE'&#13;
        else&#13;
            echo 'Failed to push $NEW_IMAGE'&#13;
        fi&#13;
    else&#13;
        echo 'Failed to tag $IMAGE'&#13;
    fi&#13;
done&#13;
```&#13;
![image](https://github.com/donkeytt11111/jiaxin.github.io/assets/167744103/cb4089e5-c5b0-4687-999d-d58a8c97050b)&#13;
。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/docker_push.sh.html</guid><pubDate>Mon, 24 Jun 2024 03:07:11 +0000</pubDate></item><item><title>docker_del_image.sh</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/docker_del_image.sh.html</link><description>#!/bin/bash&#13;
&#13;
keyword=$1&#13;
version=$2&#13;
&#13;
if [ -z '$keyword' ] || [ -z '$version' ]; then&#13;
    echo 'Usage: $0 &lt;keyword&gt; &lt;version&gt;'&#13;
    exit 1&#13;
fi&#13;
&#13;
# 列出所有符合关键词的镜像&#13;
images=$(docker image ls --format '{{.Repository}}:{{.Tag}}' | grep '$keyword')&#13;
&#13;
# 循环删除符合条件的镜像&#13;
for image in $images&#13;
do&#13;
    repo=$(echo '$image' | cut -d ':' -f 1)&#13;
    tag=$(echo '$image' | cut -d ':' -f 2)&#13;
&#13;
    # 检查镜像版本是否包含指定的版本号&#13;
    if [[ '$tag' == *'$version'* ]]; then&#13;
        docker image rm '$repo:$tag'&#13;
    fi&#13;
done&#13;
&#13;
![image](https://github.com/donkeytt11111/jiaxin.github.io/assets/167744103/27f074f3-68c8-42a6-9eec-9af23f3f6e77)&#13;
。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/docker_del_image.sh.html</guid><pubDate>Wed, 19 Jun 2024 03:12:26 +0000</pubDate></item><item><title> docker镜像加速</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/%20docker-jing-xiang-jia-su.html</link><description>```shell&#13;
sudo mkdir -p /etc/docker&#13;
sudo tee /etc/docker/daemon.json &lt;&lt;-'EOF'&#13;
{&#13;
  'registry-mirrors': ['https://nftvqaga.mirror.aliyuncs.com']&#13;
}&#13;
EOF&#13;
sudo systemctl daemon-reload&#13;
sudo systemctl restart docker。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/%20docker-jing-xiang-jia-su.html</guid><pubDate>Mon, 17 Jun 2024 07:35:12 +0000</pubDate></item><item><title>bond9</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/bond9.html</link><description>```shell&#13;
vi /etc/named.conf&#13;
&#13;
zone 'example.com' IN {&#13;
    type master;&#13;
    file '/home/ljx/example.com.zone'; // 指定域名的区域文件路径&#13;
    allow-update { none; };&#13;
};&#13;
#随意文件夹&#13;
sudo vi /etc/named/zones/example.com.zone&#13;
&#13;
$TTL 86400&#13;
@       IN      SOA     ns1.example.com. admin.example.com. (&#13;
                        2024061301      ; Serial&#13;
                        3600            ; Refresh&#13;
                        1800            ; Retry&#13;
                        604800          ; Expire&#13;
                        86400           ; Minimum TTL&#13;
                        )&#13;
&#13;
; 定义域名服务器&#13;
@       IN      NS      ns1.example.com.&#13;
&#13;
; 定义域名解析记录&#13;
ns1     IN      A       192.168.1.100    ; 替换为您的服务器IP地址&#13;
www     IN      A       192.168.1.101    ; 替换为您要解析的域名对应的IP地址&#13;
&#13;
systemctl restart named&#13;
&#13;
。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/bond9.html</guid><pubDate>Thu, 13 Jun 2024 08:02:54 +0000</pubDate></item><item><title>nginx-deployment.yaml</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/nginx-deployment.yaml.html</link><description>```yaml&#13;
---&#13;
kind: PersistentVolume&#13;
apiVersion: v1&#13;
metadata:&#13;
  name: nginx&#13;
  annotations:&#13;
    helm.sh/resource-policy: keep&#13;
spec:&#13;
  capacity:&#13;
    storage: 20Gi&#13;
  nfs:&#13;
    server: endpoint&#13;
    path: /var/local-storage&#13;
  accessModes:&#13;
  - ReadWriteMany&#13;
  persistentVolumeReclaimPolicy: Retain&#13;
  storageClassName: nginxstorageclass&#13;
&#13;
---&#13;
kind: PersistentVolumeClaim&#13;
apiVersion: v1&#13;
metadata:&#13;
  name: nginx&#13;
  namespace: cncp-production&#13;
  annotations:&#13;
    helm.sh/resource-policy: keep&#13;
spec:&#13;
  accessModes:&#13;
  - ReadWriteMany&#13;
  resources:&#13;
    requests:&#13;
      storage: 20Gi&#13;
  storageClassName: nginxstorageclass&#13;
&#13;
---&#13;
kind: ConfigMap&#13;
apiVersion: v1&#13;
metadata:&#13;
  name: nginx&#13;
  namespace: cncp-production&#13;
data:&#13;
  nginx.conf: |-&#13;
    events {&#13;
        worker_connections 50000;&#13;
    }&#13;
    pid /var/run/nginx.pid;&#13;
    http {&#13;
        include       mime.types;&#13;
        default_type  application/octet-stream;&#13;
        client_max_body_size 1000m;&#13;
        sendfile        on;&#13;
        keepalive_timeout  65;&#13;
        log_format app_access_log 'logstart|$time_iso8601|$remote_addr|$remote_port|$server_addr|$server_port|$host|$http_host$uri|$status|$http_x_forwarded_for|$http_referer|$http_user_agent|$upstream_cache_status|$bytes_sent|$proxy_add_x_forwarded_for|$connection_requests|$request_length|';&#13;
    }&#13;
    stream {&#13;
    }&#13;
  init-entrypoint.sh: |-&#13;
    #!/usr/bin/env sh&#13;
    set -e -u&#13;
    NGINX_INIT_PATH='/opt/nginx'&#13;
    NGINX_CONFIG_PATH='/usr/local/nginx/conf/nginxconf'&#13;
    config_files=(nginx.conf)&#13;
    for file in ${config_files[@]}&#13;
    do&#13;
        if [ ! -f $NGINX_CONFIG_PATH/$file ]; then&#13;
            cp $NGINX_INIT_PATH/$file $NGINX_CONFIG_PATH&#13;
        fi&#13;
    done&#13;
  handle-outerchains.sh: |-&#13;
    #!/usr/bin/env sh&#13;
    set +e +u&#13;
    cd /usr/local/nginx/conf/nginxconf&#13;
    declare -A filesTime&#13;
    label=0&#13;
    while true&#13;
    do&#13;
        label=0&#13;
        echo 'label'$label&#13;
        filesname=`ls -lR |grep -v ^d|awk '{print $9}' | tr -s '\n'`&#13;
        echo 'allfilename'$filesname&#13;
        for filestr in ${filesname[@]};do&#13;
        echo 'filename'$filestr&#13;
        if [ '$filestr' != 'nginx.conf' ] &amp;&amp; [[ $filestr != sed* ]];then&#13;
        echo 'filename'$filestr&#13;
          old_modified_time=`stat -c %y $filestr`&#13;
          echo 'new time'$old_modified_time&#13;
          if [ '${filesTime['$filestr']}' != '$old_modified_time' ];then&#13;
          echo 'first time'${filesTime[$filestr]}&#13;
          label=1&#13;
          echo 'label'$label&#13;
          sed -i 's/'/\'/g' $filestr&#13;
          new_modified_time=`stat -c %y $filestr`&#13;
          filesTime[$filestr]=$new_modified_time&#13;
          echo 'first time2'${filesTime[$filestr]}&#13;
          echo 'new time2'$new_modified_time&#13;
          fi&#13;
        fi&#13;
        done&#13;
        if [ '$label' == 1 ];then&#13;
        nginx -s reload&#13;
        fi&#13;
        sleep 3&#13;
    done&#13;
  docker-entrypoint.sh: |-&#13;
    #!/usr/bin/env sh&#13;
    set -e -u&#13;
    #���cacheȨ�ޱ�������&#13;
    chmod 777 /usr/local/nginx/cache&#13;
    nohup /usr/local/bin/handle-outerchains.sh &gt; /var/log/handle-outerchains.log 2&gt;&amp;1 &amp;&#13;
    /usr/local/nginx/sbin/nginx&#13;
    /opt/reload.sh&#13;
  fluent.conf: |&#13;
    &lt;system&gt;&#13;
        enable_filter_chain_optimization false&#13;
    &lt;/system&gt;&#13;
    &lt;source&gt;&#13;
      @id fluentd-containers.log&#13;
      @type tail&#13;
      path /usr/local/nginx/logs/*.log&#13;
      pos_file /var/log/nginx/nginx.pos&#13;
      pos_file_compaction_interval 24h&#13;
      tag nginx.*&#13;
      read_from_head true&#13;
      follow_inodes true&#13;
      &lt;parse&gt;&#13;
        @type none&#13;
      &lt;/parse&gt;&#13;
    &lt;/source&gt;&#13;
    &lt;match nginx.**&gt;&#13;
      @type opensearch &#13;
      include_tag_key true &#13;
      #host 172.16.100.198&#13;
      host opensearch-cluster-master.cncp-system&#13;
      #port 30511&#13;
      port 9200&#13;
      user admin&#13;
      password admin&#13;
      index_name cncp-log&#13;
      include_timestamp true    &#13;
      logstash_format false&#13;
      request_timeout    30s&#13;
      ssl_verify false&#13;
      timezone +08:00&#13;
      scheme http&#13;
      &lt;buffer&gt;&#13;
        @type file&#13;
        path /var/log/fluentd-buffers/kubernetes.system.buffer&#13;
        flush_mode interval&#13;
        retry_type exponential_backoff&#13;
        flush_thread_count 2&#13;
        flush_interval 5s&#13;
        retry_forever&#13;
        retry_max_interval 30&#13;
        chunk_limit_size 2M&#13;
        queue_limit_length 8&#13;
        overflow_action block&#13;
        timekey 1h&#13;
     &lt;/buffer&gt;&#13;
    &lt;/match&gt;&#13;
---&#13;
kind: Deployment&#13;
apiVersion: apps/v1&#13;
metadata:&#13;
  name: nginx&#13;
  namespace: cncp-production&#13;
spec:&#13;
  replicas: 3&#13;
  revisionHistoryLimit: 15&#13;
  selector:&#13;
    matchLabels:&#13;
      cncp-component: nginx&#13;
  template:&#13;
    metadata:&#13;
      labels:&#13;
        cncp-component: nginx&#13;
    spec:&#13;
      volumes:&#13;
      - name: localtime&#13;
        hostPath:&#13;
          path: /etc/localtime&#13;
      - name: config&#13;
        configMap:&#13;
          name: nginx&#13;
          defaultMode: 511&#13;
      - name: storage&#13;
        persistentVolumeClaim:&#13;
          claimName: nginx&#13;
      - name: varlog&#13;
        hostPath:&#13;
          path: /var/log&#13;
      - name: varlibdockercontainers&#13;
        hostPath:&#13;
          path: /var/lib/docker/containers&#13;
      - name: shared-data&#13;
        emptyDir: {}&#13;
      initContainers:&#13;
      - name: init&#13;
        image: mingyangtech.com.cn/mingyang/centos:v7.9.2009&#13;
        imagePullPolicy: IfNotPresent&#13;
        volumeMounts:&#13;
        - name: config&#13;
          mountPath: /opt/nginx/nginx.conf&#13;
          subPath: nginx.conf&#13;
        - name: config&#13;
          mountPath: /usr/local/bin/entrypoint.sh&#13;
          subPath: init-entrypoint.sh&#13;
        - name: storage&#13;
          mountPath: /usr/local/nginx/conf/nginxconf/&#13;
          subPath: usr/local/nginx/conf/nginxconf/&#13;
      containers:&#13;
      - name: nginx&#13;
        image: mingyangtech.com.cn/mingyang/cncp-nginx:v1.2.1&#13;
        imagePullPolicy: IfNotPresent&#13;
        env:&#13;
        - name: TZ&#13;
          value: 'Asia/Shanghai'&#13;
        ports:&#13;
        - containerPort: 80&#13;
          protocol: TCP&#13;
        volumeMounts:&#13;
        - name: localtime&#13;
          mountPath: /etc/localtime&#13;
        - name: config&#13;
          mountPath: /usr/local/bin/handle-hosts.sh&#13;
          subPath: handle-hosts.sh&#13;
        - name: config&#13;
          mountPath: /usr/local/bin/handle-outerchains.sh&#13;
          subPath: handle-outerchains.sh&#13;
        - name: config&#13;
          mountPath: /usr/local/bin/docker-entrypoint.sh&#13;
          subPath: docker-entrypoint.sh&#13;
        - name: storage&#13;
          mountPath: /usr/local/nginx/conf/nginxconf/&#13;
          subPath: usr/local/nginx/conf/nginxconf/&#13;
        - name: storage&#13;
          mountPath: /usr/local/nginx/cert&#13;
          subPath: usr/local/nginx/cert&#13;
        - name: storage&#13;
          mountPath: /usr/local/nginx/cache&#13;
          subPath: usr/local/nginx/cache&#13;
        #- name: storage&#13;
        #  mountPath: /usr/local/nginx/logs&#13;
        #  subPath: usr/local/nginx/logs&#13;
        - name: shared-data&#13;
          mountPath: /usr/local/nginx/logs&#13;
      - name: fluentd&#13;
        image: mingyangtech.com.cn/mingyang/fluentd:v1.0.0&#13;
        imagePullPolicy: IfNotPresent&#13;
        env:&#13;
        - name: TZ&#13;
          value: 'Asia/Shanghai'&#13;
        env:&#13;
        - name: FLUENTD_ARGS&#13;
          value: --no-supervisor -q&#13;
        resources:&#13;
          limits:&#13;
            memory: 500Mi&#13;
          requests:&#13;
            cpu: 100m&#13;
            memory: 200Mi&#13;
        volumeMounts:&#13;
        - name: varlog&#13;
          mountPath: /var/log&#13;
        - name: varlibdockercontainers&#13;
          mountPath: /var/lib/docker/containers&#13;
        - name: config&#13;
          mountPath: /fluentd/etc&#13;
        - name: shared-data&#13;
          mountPath: /usr/local/nginx/logs&#13;
        securityContext:&#13;
          privileged: true&#13;
      nodeSelector:&#13;
        kubernetes.io/os: linux&#13;
      affinity:&#13;
        podAntiAffinity:&#13;
          requiredDuringSchedulingIgnoredDuringExecution:  # Ӳ����&#13;
          - labelSelector:&#13;
              matchExpressions:&#13;
              - key: app&#13;
                operator: In&#13;
                values:&#13;
                - busybox-pod&#13;
            topologyKey: kubernetes.io/hostname&#13;
      tolerations:&#13;
      - key: node.kubenetes.io/not-ready&#13;
        effect: NoExecute&#13;
        tolerationSeconds: 30&#13;
&#13;
---&#13;
kind: Service&#13;
apiVersion: v1&#13;
metadata:&#13;
  name: nginx-helper&#13;
  namespace: cncp-production&#13;
spec:&#13;
  ports:&#13;
  - protocol: TCP&#13;
    port: 22&#13;
    targetPort: 22&#13;
    nodePort: 32004&#13;
  selector:&#13;
    cncp-component: nginx-helper&#13;
  type: NodePort&#13;
&#13;
---&#13;
kind: Deployment&#13;
apiVersion: apps/v1&#13;
metadata:&#13;
  name: nginx-helper&#13;
  namespace: cncp-production&#13;
spec:&#13;
  replicas: 1&#13;
  selector:&#13;
    matchLabels:&#13;
      cncp-component: nginx-helper&#13;
  template: &#13;
    metadata:&#13;
      labels: &#13;
        cncp-component: nginx-helper&#13;
    spec:&#13;
      volumes:&#13;
      - name: localtime&#13;
        hostPath:&#13;
          path: /etc/localtime&#13;
      - name: storage&#13;
        persistentVolumeClaim:&#13;
          claimName: nginx&#13;
      containers:&#13;
      - name: helper&#13;
        image: mingyangtech.com.cn/mingyang/ssh-server:v1.0.0&#13;
        imagePullPolicy: IfNotPresent&#13;
        env:&#13;
        - name: TZ&#13;
          value: 'Asia/Shanghai'&#13;
        ports:&#13;
        - containerPort: 22&#13;
        resources:&#13;
          requests:&#13;
            cpu: 10m&#13;
            memory: 40Mi&#13;
          limits:&#13;
            cpu: 500m&#13;
            memory: 2Gi&#13;
        volumeMounts:&#13;
        - name: localtime&#13;
          mountPath: /etc/localtime&#13;
        - name: storage&#13;
          mountPath: /usr/local/nginx/conf/nginxconf/&#13;
          subPath: usr/local/nginx/conf/nginxconf/&#13;
        - name: storage&#13;
          mountPath: /usr/local/nginx/cert&#13;
          subPath: usr/local/nginx/cert&#13;
        - name: storage&#13;
          mountPath: /usr/local/nginx/cache&#13;
          subPath: usr/local/nginx/cache&#13;
        - name: storage&#13;
          mountPath: /usr/local/nginx/logs&#13;
          subPath: usr/local/nginx/logs&#13;
        securityContext:&#13;
          privileged: true&#13;
      nodeSelector:&#13;
        kubernetes.io/os: linux&#13;
      tolerations:&#13;
      - operator: Exists&#13;
        effect: NoSchedule&#13;
      - operator: Exists&#13;
        effect: NoExecute&#13;
  strategy:&#13;
    type: Recreate&#13;
。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/nginx-deployment.yaml.html</guid><pubDate>Wed, 12 Jun 2024 02:50:01 +0000</pubDate></item><item><title>patch.yaml</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/patch.yaml.html</link><description>```yaml&#13;
- op: add&#13;
  path: /machine/install/extensions&#13;
  value:&#13;
    - image: ghcr.io/siderolabs/iscsi-tools:v0.1.1&#13;
    - image: ghcr.io/nanfei-chen/hello-world-service:v1.4.0&#13;
- op: replace&#13;
  path: /machine/install/image&#13;
  value: ghcr.io/siderolabs/installer:v1.5.5-mycos1&#13;
- op: add&#13;
  path: /machine/kubelet/extraMounts&#13;
  value:&#13;
    - destination: /var/openebs/local&#13;
      type: bind&#13;
      source: /var/openebs/local&#13;
      options:&#13;
        - bind&#13;
        - rshared&#13;
        - rw&#13;
    - destination: /var/local-storage&#13;
      type: bind&#13;
      source: /var/local-storage&#13;
      options:&#13;
        - bind&#13;
        - rshared&#13;
        - rw&#13;
- op: add&#13;
  path: /machine/kubelet/extraConfig&#13;
  value:&#13;
    containerLogMaxFiles: 5&#13;
    containerLogMaxSize: 30Mi&#13;
- op: add&#13;
  path: /machine/network/hostname&#13;
  value: cncp-ms-01&#13;
- op: add&#13;
  path: /machine/network/interfaces&#13;
  value: &#13;
    - interface: bond-cluster&#13;
      addresses:&#13;
      - 172.16.102.102/24&#13;
      - 2408:8631:c02:ffa2::102/64&#13;
      routes:&#13;
      - network: 0.0.0.0/0&#13;
        gateway: 172.16.102.1&#13;
      - network: ::/0&#13;
        gateway: 2408:8631:c02:ffa2::1&#13;
      mtu: 1500&#13;
      bond:&#13;
        deviceSelectors:&#13;
        - busPath: 0000:07:00.0&#13;
        - busPath: 0000:08:00.0&#13;
        mode: active-backup&#13;
    - interface: bond-ip6&#13;
      bond:&#13;
        deviceSelectors:&#13;
        - busPath: 0000:0b:00.0&#13;
        - busPath: 0000:0c:00.0&#13;
        mode: active-backup&#13;
    - interface: bond-ip4&#13;
      bond:&#13;
        deviceSelectors:&#13;
        - busPath: 0000:12:00.0&#13;
        - busPath: 0000:13:00.0&#13;
        mode: active-backup&#13;
- op: replace&#13;
  path: /machine/registries&#13;
  value:&#13;
    mirrors:&#13;
      '*':&#13;
        endpoints:&#13;
          - https://172.16.1.200/v2/&#13;
      docker.io:&#13;
        endpoints:&#13;
          - https://172.16.1.200/v2/docker.io&#13;
        overridePath: true&#13;
      gcr.io:&#13;
        endpoints:&#13;
          - https://172.16.1.200/v2/gcr.io&#13;
        overridePath: true&#13;
      ghcr.io:&#13;
        endpoints:&#13;
          - https://172.16.1.200/v2/ghcr.io&#13;
        overridePath: true&#13;
      k8s.gcr.io:&#13;
        endpoints:&#13;
          - https://172.16.1.200/v2/k8s.gcr.io&#13;
        overridePath: true&#13;
      nvcr.io:&#13;
        endpoints:&#13;
          - https://172.16.1.200/v2/nvcr.io&#13;
        overridePath: true&#13;
      quay.io:&#13;
        endpoints:&#13;
          - https://172.16.1.200/v2/quay.io&#13;
        overridePath: true&#13;
      registry.k8s.io:&#13;
        endpoints:&#13;
          - https://172.16.1.200/v2/registry.k8s.io&#13;
        overridePath: true&#13;
      mingyangtech.com.cn:&#13;
        endpoints:&#13;
          - https://172.16.1.200/v2/mingyangtech.com.cn&#13;
        overridePath: true&#13;
    config:&#13;
      172.16.1.200:&#13;
        tls:&#13;
          insecureSkipVerify: true&#13;
      172.16.106.11:10080:&#13;
        auth:&#13;
          username: admin&#13;
          password: Passw0rd@MY&#13;
- op: add&#13;
  path: /machine/kernel&#13;
  value: &#13;
    modules:&#13;
      - name: nfsd&#13;
      - name: ngbe&#13;
      - name: txgbe&#13;
      - name: jool&#13;
      - name: jool_siit&#13;
      - name: jool_common&#13;
- op: add&#13;
  path: /machine/network/nameservers&#13;
  value: &#13;
    - 114.114.114.114&#13;
    - 8.8.8.8&#13;
    - 2400:3200::1&#13;
    - 2400:3200:baba::1&#13;
- op: add&#13;
  path: /machine/network/extraHostEntries&#13;
  value: &#13;
    - ip: 172.16.102.102&#13;
      aliases:&#13;
        - endpoint&#13;
        - cncp-ms-01&#13;
- op: add&#13;
  path: /machine/pods&#13;
  value:&#13;
  - kind: Pod&#13;
    apiVersion: v1&#13;
    metadata:&#13;
      name: manager&#13;
      namespace: kube-system&#13;
    spec:&#13;
      volumes:&#13;
      - name: cni&#13;
        hostPath:&#13;
          path: /etc/cni&#13;
          type: DirectoryOrCreate  &#13;
      containers:&#13;
      - name: manager&#13;
        image: mingyangtech.com.cn/mingyang/centos7:v1.0.0&#13;
        imagePullPolicy: IfNotPresent&#13;
        resources:&#13;
          limits:&#13;
            cpu: 50m&#13;
            memory: 200Mi&#13;
        volumeMounts:&#13;
        - name: cni&#13;
          mountPath: /etc/cni&#13;
        securityContext:&#13;
          privileged: true&#13;
      restartPolicy: Always&#13;
      hostNetwork: true&#13;
      priorityClassName: system-node-critical&#13;
- op: add&#13;
  path: /machine/time&#13;
  value:&#13;
    disabled: false&#13;
    servers:&#13;
    - cn.ntp.org.cn&#13;
- op: add&#13;
  path: /machine/nodeLabels   &#13;
  value:&#13;
    node-role.kubernetes.io/master: '' &#13;
- op: add&#13;
  path: /machine/sysctls &#13;
  value:&#13;
    vm.max_map_count: '262144'&#13;
- op: replace&#13;
  path: /cluster/network/podSubnets&#13;
  value:&#13;
    - 10.32.0.0/16&#13;
    - fd00:1032::/48&#13;
- op: replace&#13;
  path: /cluster/network/serviceSubnets&#13;
  value:&#13;
    - 10.64.0.0/16&#13;
    - fd00:1064::/112&#13;
- op: add&#13;
  path: /cluster/network/cni&#13;
  value:&#13;
    name: custom&#13;
    urls:&#13;
      - http://172.16.106.11:8088/mingyang/cncp/cilium-dsr.yaml&#13;
- op: replace&#13;
  path: /cluster/apiServer/admissionControl&#13;
  value:&#13;
   []&#13;
- op: replace&#13;
  path: /cluster/proxy&#13;
  value:&#13;
    disabled: true&#13;
    image: registry.k8s.io/kube-proxy:v1.27.1&#13;
    mode: ipvs&#13;
    extraArgs:&#13;
      ipvs-strict-arp: true&#13;
- op: add&#13;
  path: /cluster/extraManifests&#13;
  value:&#13;
  - http://172.16.106.11:8088/mingyang/cncp/cni-installation-ds.yaml&#13;
  - http://172.16.106.11:8088/mingyang/cncp/multus-with-patch.yaml&#13;
  - http://172.16.106.11:8088/mingyang/cncp/openebs.yaml&#13;
  - http://172.16.106.11:8088/mingyang/cncp/openebs-sc.yaml&#13;
  - http://172.16.106.11:8088/mingyang/cncp/dashboard-deploy.yaml&#13;
  - http://172.16.106.11:8088/mingyang/cncp/metallb-native.yaml&#13;
  - http://172.16.106.11:8088/mingyang/cncp/reloader.yaml&#13;
  - http://172.16.106.11:8088/mingyang/cncp/cncp-namespaces.yaml&#13;
  - http://172.16.106.11:8088/mingyang/cncp/nfs-server-deploy.yaml&#13;
- op: add&#13;
  path: /cluster/inlineManifests&#13;
  value:&#13;
  - name: cluster-config-cm&#13;
    contents: |-&#13;
      kind: ConfigMap&#13;
      apiVersion: v1&#13;
      metadata:&#13;
        name: cluster-config&#13;
        namespace: kube-system&#13;
      data:&#13;
        KUBERNETES_API_SERVER_ADDRESS: '172.16.102.102'&#13;
        KUBERNETES_API_SERVER_PORT: '6443'&#13;
- op: add&#13;
  path: /cluster/adminKubeconfig&#13;
  value:&#13;
    certLifetime: 87600h0m0s&#13;
- op: add&#13;
  path: /cluster/allowSchedulingOnControlPlanes&#13;
  value: true&#13;
  。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/patch.yaml.html</guid><pubDate>Wed, 12 Jun 2024 02:49:12 +0000</pubDate></item><item><title>k8s_master.yaml</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/k8s_master.yaml.html</link><description>version: v1alpha1 # Indicates the schema used to decode the contents.&#13;
debug: false # Enable verbose logging to the console.&#13;
persist: true # description: |&#13;
# Provides machine specific configuration options.&#13;
machine:&#13;
    type: controlplane # Defines the role of the machine within the cluster.&#13;
    token: jj2db4.b6zct20qwbjgcj9a # The `token` is used by a machine to join the PKI of the cluster.&#13;
    # The root certificate authority of the PKI.&#13;
    ca:&#13;
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBdk5GTHhGdjArMWdGcVNoUnV4Mkl6REFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qUXdORE13TURFek5UTXpXaGNOTXpRd05ESTRNREV6TlRNeldqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQUdUV0d1VW5hZk9naVlyNjJvTVZNZ3p2TzFNeTQ0d3NmWGloClBjVWpPODN5bzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk5uM3QvY2s0NUgvZHAwZQpITWdpMDVjNHRiYzZNQVVHQXl0bGNBTkJBUEJobVJYenlSSHFwQ2I4ZzFLUjIrMEVyL1h2WjNVR1JkZW9NZzk0CkMzMGVzb3RVdE9xSnFsM0FGZmxia1IxOHZqWkhOaDRvNjJKOGxuaWRQL1h1aFFNPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==&#13;
        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJREJVYzNJcXJrdVFmTjdQTzcycytrVE5DY3hXVFBzMTV5RFpIWWFNRW5OMgotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K&#13;
    # Extra certificate subject alternative names for the machine's certificate.&#13;
    certSANs: []&#13;
    #   # Uncomment this to enable SANs.&#13;
    #   - 10.0.0.10&#13;
    #   - 172.16.0.10&#13;
    #   - 192.168.0.10&#13;
&#13;
    # Used to provide additional options to the kubelet.&#13;
    kubelet:&#13;
        image: ghcr.io/siderolabs/kubelet:v1.28.5 # The `image` field is an optional reference to an alternative kubelet image.&#13;
        # The `extraMounts` field is used to add additional mounts to the kubelet container.&#13;
        extraMounts:&#13;
            - destination: /var/openebs/local&#13;
              type: bind&#13;
              source: /var/openebs/local&#13;
              options:&#13;
                - bind&#13;
                - rshared&#13;
                - rw&#13;
            - destination: /var/local-storage&#13;
              type: bind&#13;
              source: /var/local-storage&#13;
              options:&#13;
                - bind&#13;
                - rshared&#13;
                - rw&#13;
        # The `extraConfig` field is used to provide kubelet configuration overrides.&#13;
        extraConfig:&#13;
            containerLogMaxFiles: 5&#13;
            containerLogMaxSize: 30Mi&#13;
        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.&#13;
        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.&#13;
        &#13;
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.&#13;
        # clusterDNS:&#13;
        #     - 10.96.0.10&#13;
        #     - 169.254.2.53&#13;
&#13;
        # # The `extraArgs` field is used to provide additional flags to the kubelet.&#13;
        # extraArgs:&#13;
        #     key: value&#13;
&#13;
        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.&#13;
        # nodeIP:&#13;
        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.&#13;
        #     validSubnets:&#13;
        #         - 10.0.0.0/8&#13;
        #         - '!10.0.0.3/32'&#13;
        #         - fdc7::/16&#13;
    # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.&#13;
    pods:&#13;
        - apiVersion: v1&#13;
          kind: Pod&#13;
          metadata:&#13;
            name: manager&#13;
            namespace: kube-system&#13;
          spec:&#13;
            containers:&#13;
                - image: mingyangtech.com.cn/mingyang/centos7:v1.0.0&#13;
                  imagePullPolicy: IfNotPresent&#13;
                  name: manager&#13;
                  resources:&#13;
                    limits:&#13;
                        cpu: 50m&#13;
                        memory: 200Mi&#13;
                  securityContext:&#13;
                    privileged: true&#13;
                  volumeMounts:&#13;
                    - mountPath: /etc/cni&#13;
                      name: cni&#13;
            hostNetwork: true&#13;
            priorityClassName: system-node-critical&#13;
            restartPolicy: Always&#13;
            volumes:&#13;
                - hostPath:&#13;
                    path: /etc/cni&#13;
                    type: DirectoryOrCreate&#13;
                  name: cni&#13;
    # Provides machine specific network configuration options.&#13;
    network:&#13;
        hostname: cncp-ms-01 # Used to statically set the hostname for the machine.&#13;
        # `interfaces` is used to define the network interface configuration.&#13;
        interfaces:&#13;
            - interface: bond-cluster # The interface name.&#13;
              # Assigns static IP addresses to the interface.&#13;
              addresses:&#13;
                - 10.1.13.214/27&#13;
                - 2001:da8:9002:c400::1003/112&#13;
              # A list of routes associated with the interface.&#13;
              routes:&#13;
                - network: 0.0.0.0/0 # The route's network (destination).&#13;
                  gateway: 10.1.13.222 # The route's gateway (if empty, creates link scope route).&#13;
                - network: ::/0 # The route's network (destination).&#13;
                  gateway: 2001:da8:9002:c400::fffe # The route's gateway (if empty, creates link scope route).&#13;
              # Bond specific options.&#13;
              bond:&#13;
                # The interfaces that make up the bond.&#13;
                interfaces: []&#13;
                # Picks a network device using the selector.&#13;
                deviceSelectors:&#13;
                    - busPath: 0000:19:00.0 # PCI, USB bus prefix, supports matching by wildcard.&#13;
                mode: active-backup # A bond option.&#13;
              mtu: 1500 # The interface's MTU.&#13;
              &#13;
              # # Picks a network device using the selector.&#13;
&#13;
              # # select a device with bus prefix 00:*.&#13;
              # deviceSelector:&#13;
              #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.&#13;
              # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.&#13;
              # deviceSelector:&#13;
              #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.&#13;
              #     driver: virtio # Kernel driver, supports matching by wildcard.&#13;
              # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.&#13;
              # deviceSelector:&#13;
              #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.&#13;
              #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.&#13;
              #       driver: virtio # Kernel driver, supports matching by wildcard.&#13;
&#13;
              # # Bridge specific options.&#13;
              # bridge:&#13;
              #     # The interfaces that make up the bridge.&#13;
              #     interfaces:&#13;
              #         - enxda4042ca9a51&#13;
              #         - enxae2a6774c259&#13;
              #     # A bridge option.&#13;
              #     stp:&#13;
              #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.&#13;
&#13;
              # # Indicates if DHCP should be used to configure the interface.&#13;
              # dhcp: true&#13;
&#13;
              # # DHCP specific options.&#13;
              # dhcpOptions:&#13;
              #     routeMetric: 1024 # The priority of all routes received via DHCP.&#13;
&#13;
              # # Wireguard specific configuration.&#13;
&#13;
              # # wireguard server example&#13;
              # wireguard:&#13;
              #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).&#13;
              #     listenPort: 51111 # Specifies a device's listening port.&#13;
              #     # Specifies a list of peer configurations to apply to a device.&#13;
              #     peers:&#13;
              #         - publicKey: ABCDEF... # Specifies the public key of this peer.&#13;
              #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.&#13;
              #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.&#13;
              #           allowedIPs:&#13;
              #             - 192.168.1.0/24&#13;
              # # wireguard peer example&#13;
              # wireguard:&#13;
              #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).&#13;
              #     # Specifies a list of peer configurations to apply to a device.&#13;
              #     peers:&#13;
              #         - publicKey: ABCDEF... # Specifies the public key of this peer.&#13;
              #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.&#13;
              #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.&#13;
              #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.&#13;
              #           allowedIPs:&#13;
              #             - 192.168.1.0/24&#13;
&#13;
              # # Virtual (shared) IP address configuration.&#13;
&#13;
              # # layer2 vip example&#13;
              # vip:&#13;
              #     ip: 172.16.199.55 # Specifies the IP address to be used.&#13;
            - interface: bond-oob # The interface name.&#13;
              # Bond specific options.&#13;
              bond:&#13;
                # The interfaces that make up the bond.&#13;
                interfaces: []&#13;
                # Picks a network device using the selector.&#13;
                deviceSelectors:&#13;
                    - busPath: 0000:05:00.0 # PCI, USB bus prefix, supports matching by wildcard.&#13;
                    - busPath: 0000:06:00.0 # PCI, USB bus prefix, supports matching by wildcard.&#13;
                mode: active-backup # A bond option.&#13;
              mtu: 1500 # The interface's MTU.&#13;
              dhcp: false # Indicates if DHCP should be used to configure the interface.&#13;
              &#13;
              # # Picks a network device using the selector.&#13;
&#13;
              # # select a device with bus prefix 00:*.&#13;
              # deviceSelector:&#13;
              #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.&#13;
              # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.&#13;
              # deviceSelector:&#13;
              #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.&#13;
              #     driver: virtio # Kernel driver, supports matching by wildcard.&#13;
              # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.&#13;
              # deviceSelector:&#13;
              #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.&#13;
              #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.&#13;
              #       driver: virtio # Kernel driver, supports matching by wildcard.&#13;
&#13;
              # # Assigns static IP addresses to the interface.&#13;
              # addresses:&#13;
              #     - 10.5.0.0/16&#13;
              #     - 192.168.3.7&#13;
&#13;
              # # A list of routes associated with the interface.&#13;
              # routes:&#13;
              #     - network: 0.0.0.0/0 # The route's network (destination).&#13;
              #       gateway: 10.5.0.1 # The route's gateway (if empty, creates link scope route).&#13;
              #     - network: 10.2.0.0/16 # The route's network (destination).&#13;
              #       gateway: 10.2.0.1 # The route's gateway (if empty, creates link scope route).&#13;
&#13;
              # # Bridge specific options.&#13;
              # bridge:&#13;
              #     # The interfaces that make up the bridge.&#13;
              #     interfaces:&#13;
              #         - enxda4042ca9a51&#13;
              #         - enxae2a6774c259&#13;
              #     # A bridge option.&#13;
              #     stp:&#13;
              #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.&#13;
&#13;
              # # DHCP specific options.&#13;
              # dhcpOptions:&#13;
              #     routeMetric: 1024 # The priority of all routes received via DHCP.&#13;
&#13;
              # # Wireguard specific configuration.&#13;
&#13;
              # # wireguard server example&#13;
              # wireguard:&#13;
              #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).&#13;
              #     listenPort: 51111 # Specifies a device's listening port.&#13;
              #     # Specifies a list of peer configurations to apply to a device.&#13;
              #     peers:&#13;
              #         - publicKey: ABCDEF... # Specifies the public key of this peer.&#13;
              #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.&#13;
              #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.&#13;
              #           allowedIPs:&#13;
              #             - 192.168.1.0/24&#13;
              # # wireguard peer example&#13;
              # wireguard:&#13;
              #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).&#13;
              #     # Specifies a list of peer configurations to apply to a device.&#13;
              #     peers:&#13;
              #         - publicKey: ABCDEF... # Specifies the public key of this peer.&#13;
              #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.&#13;
              #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.&#13;
              #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.&#13;
              #           allowedIPs:&#13;
              #             - 192.168.1.0/24&#13;
&#13;
              # # Virtual (shared) IP address configuration.&#13;
&#13;
              # # layer2 vip example&#13;
              # vip:&#13;
              #     ip: 172.16.199.55 # Specifies the IP address to be used.&#13;
        # Used to statically set the nameservers for the machine.&#13;
        nameservers:&#13;
            - 223.5.5.5&#13;
            - 223.6.6.6&#13;
            - 2400:3200::1&#13;
            - 2400:3200:baba::1&#13;
        # Allows for extra entries to be added to the `/etc/hosts` file&#13;
        extraHostEntries:&#13;
            - ip: 10.1.13.214 # The IP of the host.&#13;
              # The host alias.&#13;
              aliases:&#13;
                - endpoint&#13;
        &#13;
        # # Configures KubeSpan feature.&#13;
        # kubespan:&#13;
        #     enabled: true # Enable the KubeSpan feature.&#13;
    # Used to provide instructions for installations.&#13;
    install:&#13;
        disk: /dev/sda # The disk used for installations.&#13;
        image: ghcr.io/siderolabs/installer:v1.5.5-mycos1 # Allows for supplying the image used to perform the installation.&#13;
        # Allows for supplying additional system extension images to install on top of base Talos image.&#13;
        extensions:&#13;
            - image: ghcr.io/siderolabs/iscsi-tools:v0.1.1 # System extension image.&#13;
            - image: ghcr.io/nanfei-chen/hello-world-service:v1.4.0 # System extension image.&#13;
        wipe: false # Indicates if the installation disk should be wiped at installation time.&#13;
        &#13;
        # # Look up disk using disk attributes like model, size, serial and others.&#13;
        # diskSelector:&#13;
        #     size: 4GB # Disk size.&#13;
        #     model: WDC* # Disk model `/sys/block/&lt;dev&gt;/device/model`.&#13;
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.&#13;
&#13;
        # # Allows for supplying extra kernel args via the bootloader.&#13;
        # extraKernelArgs:&#13;
        #     - talos.platform=metal&#13;
        #     - reboot=k&#13;
    # Used to configure the machine's time settings.&#13;
    time:&#13;
        disabled: false # Indicates if the time service is disabled for the machine.&#13;
        # Specifies time (NTP) servers to use for setting the system time.&#13;
        servers:&#13;
            - 10.1.13.207&#13;
    # Used to configure the machine's sysctls.&#13;
    sysctls:&#13;
        vm.max_map_count: '262144'&#13;
    # Used to configure the machine's container image registry mirrors.&#13;
    registries:&#13;
        # Specifies mirror configuration for each registry host namespace.&#13;
        mirrors:&#13;
            '*':&#13;
                # List of endpoints (URLs) for registry mirrors to use.&#13;
                endpoints:&#13;
                    - https://10.1.13.207/v2/&#13;
            docker.io:&#13;
                # List of endpoints (URLs) for registry mirrors to use.&#13;
                endpoints:&#13;
                    - https://10.1.13.207/v2/docker.io&#13;
                overridePath: true # Use the exact path specified for the endpoint (don't append /v2/).&#13;
            gcr.io:&#13;
                # List of endpoints (URLs) for registry mirrors to use.&#13;
                endpoints:&#13;
                    - https://10.1.13.207/v2/gcr.io&#13;
                overridePath: true # Use the exact path specified for the endpoint (don't append /v2/).&#13;
            ghcr.io:&#13;
                # List of endpoints (URLs) for registry mirrors to use.&#13;
                endpoints:&#13;
                    - https://10.1.13.207/v2/ghcr.io&#13;
                overridePath: true # Use the exact path specified for the endpoint (don't append /v2/).&#13;
            k8s.gcr.io:&#13;
                # List of endpoints (URLs) for registry mirrors to use.&#13;
                endpoints:&#13;
                    - https://10.1.13.207/v2/k8s.gcr.io&#13;
                overridePath: true # Use the exact path specified for the endpoint (don't append /v2/).&#13;
            mingyangtech.com.cn:&#13;
                # List of endpoints (URLs) for registry mirrors to use.&#13;
                endpoints:&#13;
                    - http://10.1.13.207/v2/mingyangtech.com.cn&#13;
                overridePath: true # Use the exact path specified for the endpoint (don't append /v2/).&#13;
            nvcr.io:&#13;
                # List of endpoints (URLs) for registry mirrors to use.&#13;
                endpoints:&#13;
                    - https://10.1.13.207/v2/nvcr.io&#13;
                overridePath: true # Use the exact path specified for the endpoint (don't append /v2/).&#13;
            quay.io:&#13;
                # List of endpoints (URLs) for registry mirrors to use.&#13;
                endpoints:&#13;
                    - https://10.1.13.207/v2/quay.io&#13;
                overridePath: true # Use the exact path specified for the endpoint (don't append /v2/).&#13;
            registry.k8s.io:&#13;
                # List of endpoints (URLs) for registry mirrors to use.&#13;
                endpoints:&#13;
                    - https://10.1.13.207/v2/registry.k8s.io&#13;
                overridePath: true # Use the exact path specified for the endpoint (don't append /v2/).&#13;
        # Specifies TLS &amp; auth configuration for HTTPS image registries.&#13;
        config:&#13;
            10.1.13.207:&#13;
                # The TLS configuration for the registry.&#13;
                tls:&#13;
                    insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).&#13;
                    &#13;
                    # # Enable mutual TLS authentication with the registry.&#13;
                    # clientIdentity:&#13;
                    #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t&#13;
                    #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==&#13;
                &#13;
                # # The auth configuration for this registry.&#13;
                # auth:&#13;
                #     username: username # Optional registry authentication.&#13;
                #     password: password # Optional registry authentication.&#13;
            10.1.13.207:10080:&#13;
                # The auth configuration for this registry.&#13;
                auth:&#13;
                    username: admin # Optional registry authentication.&#13;
                    password: Passw0rd@MY # Optional registry authentication.&#13;
                &#13;
                # # The TLS configuration for the registry.&#13;
                # tls:&#13;
                #     # Enable mutual TLS authentication with the registry.&#13;
                #     clientIdentity:&#13;
                #         crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t&#13;
                #         key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==&#13;
                # tls:&#13;
                #     # Enable mutual TLS authentication with the registry.&#13;
                #     clientIdentity:&#13;
                #         crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t&#13;
                #         key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==&#13;
                #     insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).&#13;
    # Features describe individual Talos features that can be switched on or off.&#13;
    features:&#13;
        rbac: true # Enable role-based access control (RBAC).&#13;
        stableHostname: true # Enable stable default hostname.&#13;
        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.&#13;
        diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.&#13;
        &#13;
        # # Configure Talos API access from Kubernetes pods.&#13;
        # kubernetesTalosAPIAccess:&#13;
        #     enabled: true # Enable Talos API access from Kubernetes pods.&#13;
        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.&#13;
        #     allowedRoles:&#13;
        #         - os:reader&#13;
        #     # The list of Kubernetes namespaces Talos API access is available from.&#13;
        #     allowedKubernetesNamespaces:&#13;
        #         - kube-system&#13;
    # Configures the kernel.&#13;
    kernel:&#13;
        # Kernel modules to load.&#13;
        modules:&#13;
            - name: jool # Module name.&#13;
            - name: jool_siit # Module name.&#13;
            - name: jool_common # Module name.&#13;
            - name: nfsd # Module name.&#13;
    &#13;
    # # Provides machine specific control plane configuration options.&#13;
&#13;
    # # ControlPlane definition example.&#13;
    # controlPlane:&#13;
    #     # Controller manager machine specific configuration options.&#13;
    #     controllerManager:&#13;
    #         disabled: false # Disable kube-controller-manager on the node.&#13;
    #     # Scheduler machine specific configuration options.&#13;
    #     scheduler:&#13;
    #         disabled: true # Disable kube-scheduler on the node.&#13;
&#13;
    # # Used to partition, format and mount additional disks.&#13;
&#13;
    # # MachineDisks list example.&#13;
    # disks:&#13;
    #     - device: /dev/sdb # The name of the disk to use.&#13;
    #       # A list of partitions to create on the disk.&#13;
    #       partitions:&#13;
    #         - mountpoint: /var/mnt/extra # Where to mount the partition.&#13;
    #           &#13;
    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.&#13;
&#13;
    #           # # Human readable representation.&#13;
    #           # size: 100 MB&#13;
    #           # # Precise value in bytes.&#13;
    #           # size: 1073741824&#13;
&#13;
    # # Allows the addition of user specified files.&#13;
&#13;
    # # MachineFiles usage example.&#13;
    # files:&#13;
    #     - content: '...' # The contents of the file.&#13;
    #       permissions: 0o666 # The file's permissions in octal.&#13;
    #       path: /tmp/file.txt # The path of the file.&#13;
    #       op: append # The operation to use&#13;
&#13;
    # # The `env` field allows for the addition of environment variables.&#13;
&#13;
    # # Environment variables definition examples.&#13;
    # env:&#13;
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info&#13;
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: '99'&#13;
    #     https_proxy: http://SERVER:PORT/&#13;
    # env:&#13;
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error&#13;
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/&#13;
    # env:&#13;
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/&#13;
&#13;
    # # Used to configure the machine's sysfs.&#13;
&#13;
    # # MachineSysfs usage example.&#13;
    # sysfs:&#13;
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance&#13;
&#13;
    # # Machine system disk encryption configuration.&#13;
    # systemDiskEncryption:&#13;
    #     # Ephemeral partition encryption.&#13;
    #     ephemeral:&#13;
    #         provider: luks2 # Encryption provider to use for the encryption.&#13;
    #         # Defines the encryption keys generation and storage method.&#13;
    #         keys:&#13;
    #             - # Deterministically generated key from the node UUID and PartitionLabel.&#13;
    #               nodeID: {}&#13;
    #               slot: 0 # Key slot number for LUKS2 encryption.&#13;
    #               &#13;
    #               # # KMS managed encryption key.&#13;
    #               # kms:&#13;
    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.&#13;
    #         &#13;
    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.&#13;
    #         # cipher: aes-xts-plain64&#13;
&#13;
    #         # # Defines the encryption sector size.&#13;
    #         # blockSize: 4096&#13;
&#13;
    #         # # Additional --perf parameters for the LUKS2 encryption.&#13;
    #         # options:&#13;
    #         #     - no_read_workqueue&#13;
    #         #     - no_write_workqueue&#13;
&#13;
    # # Configures the udev system.&#13;
    # udev:&#13;
    #     # List of udev rules to apply to the udev system&#13;
    #     rules:&#13;
    #         - SUBSYSTEM=='drm', KERNEL=='renderD*', GROUP='44', MODE='0660'&#13;
&#13;
    # # Configures the logging system.&#13;
    # logging:&#13;
    #     # Logging destination.&#13;
    #     destinations:&#13;
    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are 'tcp' and 'udp'.&#13;
    #           format: json_lines # Logs format.&#13;
&#13;
    # # Configures the seccomp profiles for the machine.&#13;
    # seccompProfiles:&#13;
    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.&#13;
    #       # The `value` field is used to provide the seccomp profile.&#13;
    #       value:&#13;
    #         defaultAction: SCMP_ACT_LOG&#13;
&#13;
    # # Configures the node labels for the machine.&#13;
&#13;
    # # node labels example.&#13;
    # nodeLabels:&#13;
    #     exampleLabel: exampleLabelValue&#13;
# Provides cluster specific configuration options.&#13;
cluster:&#13;
    id: I9fUXHhy5mqFVSAQV_lsuwwUxx3O-drZcStM16d62-E= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).&#13;
    secret: 8YE+YZiG8lnSRDkYcouBhMI1Dl+safRsfarKxydViBo= # Shared secret of cluster (base64 encoded random 32 bytes).&#13;
    # Provides control plane specific configuration options.&#13;
    controlPlane:&#13;
        endpoint: https://10.1.13.214:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.&#13;
    clusterName: mingyang # Configures the cluster's name.&#13;
    # Provides cluster specific network configuration options.&#13;
    network:&#13;
        # The CNI used.&#13;
        cni:&#13;
            name: custom # Name of CNI to use.&#13;
            # URLs containing manifests to apply for the CNI.&#13;
            urls:&#13;
                - http://10.1.13.207:8088/mingyang/cncp/cilium-dsr.yaml&#13;
        dnsDomain: cluster.local # The domain used by Kubernetes DNS.&#13;
        # The pod subnet CIDR.&#13;
        podSubnets:&#13;
            - 10.32.0.0/16&#13;
            - fd00:1032::/48&#13;
        # The service subnet CIDR.&#13;
        serviceSubnets:&#13;
            - 10.64.0.0/16&#13;
            - fd00:1064::/112&#13;
    token: 1f1vya.rhaai2peuebr05su # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.&#13;
    secretboxEncryptionSecret: zp3K6SyWptnHMI6yw9RX5EMJIe8A8/5jcFTdauUY6WQ= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).&#13;
    # The base64 encoded root certificate authority used by Kubernetes.&#13;
    ca:&#13;
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpekNDQVRDZ0F3SUJBZ0lSQU1TdnNFNmtXZmR4RUJDSjE2dWNNNVF3Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlOREEwTXpBd01UTTFNek5hRncwek5EQTBNamd3TVRNMQpNek5hTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVRibjRaOWdOVEorMVhPNStjdWNHWDJCMks3RitCbzhub0crWHNWeHRicjhodmhudytzalNQakN6cXAKN29tYnBUUzArR044TjZrcVRrUitZQVFQUVhqcm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGR2wwSE1CRE5nNk53NTZGeFFJNHhGREtvYVdZTUFvR0NDcUdTTTQ5QkFNQ0Ewa0FNRVlDSVFEVWI0OHAKdHRjNGdQZk9mV2ZlWitoRUY3VnJuNTZSQ3lEQlBvSW5ENnhjZkFJaEFQSklyT2FSdUV1Z25GbU1GSnlDdVE0LwpuWnBzYXlxa1JQOU9WR1RRY0IyZgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==&#13;
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUw0eUd4QnZ3eFp5M1g3QmdXSXBtQ0VoV1lqTkRsdW9yRFBPc25zaEpmRUFvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFMjUrR2ZZRFV5ZnRWenVmbkxuQmw5Z2RpdXhmZ2FQSjZCdmw3RmNiVzYvSWI0WjhQckkwago0d3M2cWU2Sm02VTB0UGhqZkRlcEtrNUVmbUFFRDBGNDZ3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=&#13;
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.&#13;
    aggregatorCA:&#13;
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYakNDQVFXZ0F3SUJBZ0lRYkVYcmQvOUxhMmM4a2xWMzBqR0xBekFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJME1EUXpNREF4TXpVek0xb1hEVE0wTURReU9EQXhNelV6TTFvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCTDFJbGVlaTBYOTlwY0poOHcwT2tSWHRlK1luMVhzSkc5bk51MC8xcGkwaHEzUVdJMUdpCkVsL0RsZHdGQ2hjV21DcXRDUmY2OC9zdlZkNlNId1JtWEkyallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVU3cmVBRytpdGRXQTdYeXkrS25rb1g2K0VVV1l3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnCmZnRHAzQ0Qxa094SWpmNVRpUHZlOVlZY2tqWENmQmZ5dlpKYmFBdExiVFlDSUdoZlNoVGtjaWVuNUhWUE1PVzIKN3FoeDJXVjFLdXhheEVtQ0Y0dXd5d3BLCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K&#13;
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU5aeG52MHNwMEdZaVQ1Z2ozb0JhSWQxTW00ZXlraVpnR1NqaUQ3dCszWGRvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFdlVpVjU2TFJmMzJsd21IekRRNlJGZTE3NWlmVmV3a2IyYzI3VC9XbUxTR3JkQllqVWFJUwpYOE9WM0FVS0Z4YVlLcTBKRi9yeit5OVYzcElmQkdaY2pRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=&#13;
    # The base64 encoded private key for service account token generation.&#13;
    serviceAccount:&#13;
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU5kYmpCR1h2dFkyVCt3RVF5bW83UTNqSElBcTZRaTEvQlNLWU44eExTOVFvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFT0JVOFVmUmVNbWVobkY2U0FaS3JLMXhUNEZWT0FDVnpabFI2TnVDZlp1RzNuK21Hdko4ZgpVbFJTaUw5aDl4L1NIZ2JvN20xMWtLOGFFOE5kczBaRjN3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=&#13;
    # API server specific configuration options.&#13;
    apiServer:&#13;
        image: registry.k8s.io/kube-apiserver:v1.28.5 # The container image used in the API server manifest.&#13;
        # Extra certificate subject alternative names for the API server's certificate.&#13;
        certSANs:&#13;
            - 10.1.13.214&#13;
        disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.&#13;
        # Configure the API server audit policy.&#13;
        auditPolicy:&#13;
            apiVersion: audit.k8s.io/v1&#13;
            kind: Policy&#13;
            rules:&#13;
                - level: Metadata&#13;
        &#13;
        # # Configure the API server admission plugins.&#13;
        # admissionControl:&#13;
        #     - name: PodSecurity # Name is the name of the admission controller.&#13;
        #       # Configuration is an embedded configuration object to be used as the plugin's&#13;
        #       configuration:&#13;
        #         apiVersion: pod-security.admission.config.k8s.io/v1alpha1&#13;
        #         defaults:&#13;
        #             audit: restricted&#13;
        #             audit-version: latest&#13;
        #             enforce: baseline&#13;
        #             enforce-version: latest&#13;
        #             warn: restricted&#13;
        #             warn-version: latest&#13;
        #         exemptions:&#13;
        #             namespaces:&#13;
        #                 - kube-system&#13;
        #             runtimeClasses: []&#13;
        #             usernames: []&#13;
        #         kind: PodSecurityConfiguration&#13;
    # Controller manager server specific configuration options.&#13;
    controllerManager:&#13;
        image: registry.k8s.io/kube-controller-manager:v1.28.5 # The container image used in the controller manager manifest.&#13;
    # Kube-proxy server-specific configuration options&#13;
    proxy:&#13;
        disabled: true # Disable kube-proxy deployment on cluster bootstrap.&#13;
        &#13;
        # # The container image used in the kube-proxy manifest.&#13;
        # image: registry.k8s.io/kube-proxy:v1.28.3&#13;
    # Scheduler server specific configuration options.&#13;
    scheduler:&#13;
        image: registry.k8s.io/kube-scheduler:v1.28.5 # The container image used in the scheduler manifest.&#13;
    # Configures cluster member discovery.&#13;
    discovery:&#13;
        enabled: true # Enable the cluster membership discovery feature.&#13;
        # Configure registries used for cluster member discovery.&#13;
        registries:&#13;
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information&#13;
            kubernetes:&#13;
                disabled: true # Disable Kubernetes discovery registry.&#13;
            # Service registry is using an external service to push and pull information about cluster members.&#13;
            service: {}&#13;
            # # External service endpoint.&#13;
            # endpoint: https://discovery.talos.dev/&#13;
    # Etcd specific configuration options.&#13;
    etcd:&#13;
        # The `ca` is the root certificate authority of the PKI.&#13;
        ca:&#13;
            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNTZ0F3SUJBZ0lSQU9XQ0JTWXNibU5pVEJQVnllajNXQmd3Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TkRBME16QXdNVE0xTXpOYUZ3MHpOREEwTWpnd01UTTFNek5hTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFUY0NXUEhheUM1CnE2T2FBcDdUSlRQZEgrM2FPeTFSdDN5NVFvNHJwMFprdlY5UU9uVUw3S3ZoSEVIa2ZBeGE4Tyt0eGZBNUtCMVoKQlhxeWhERWhQWmpKbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkFMbUo3NGNsVE5BCi9SMHlRWno1UVhIUDFkVmVNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJUURqNmk0SklPdE1XMzRWWisxTndyWG8KcDZPTE0yM0o0b1g5T1ZFekU3eGltZ0lnVUozaDk3MUNKV0FmUmJFSG1qd1BGcXJvMXhUZTRxekJtZXYvTytFRgp1NVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K&#13;
            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUdpOXZkK24rN3NWM2wzZTBZcGR6UEVhNWtiaVlsY0JVZENCbmFWYTZFTUZvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFM0Fsangyc2d1YXVqbWdLZTB5VXozUi90MmpzdFViZDh1VUtPSzZkR1pMMWZVRHAxQyt5cgo0UnhCNUh3TVd2RHZyY1h3T1NnZFdRVjZzb1F4SVQyWXlRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=&#13;
        &#13;
        # # The container image used to create the etcd service.&#13;
        # image: gcr.io/etcd-development/etcd:v3.5.10&#13;
&#13;
        # # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.&#13;
        # advertisedSubnets:&#13;
        #     - 10.0.0.0/8&#13;
    # A list of urls that point to additional manifests.&#13;
    extraManifests:&#13;
        - http://10.1.13.207:8088/mingyang/cncp/cni-installation-ds.yaml&#13;
        - http://10.1.13.207:8088/mingyang/cncp/multus-ds.yaml&#13;
        - http://10.1.13.207:8088/mingyang/cncp/openebs.yaml&#13;
        - http://10.1.13.207:8088/mingyang/cncp/openebs-sc.yaml&#13;
        - http://10.1.13.207:8088/mingyang/cncp/dashboard-deploy.yaml&#13;
        - http://10.1.13.207:8088/mingyang/cncp/metallb-native.yaml&#13;
        - http://10.1.13.207:8088/mingyang/cncp/reloader.yaml&#13;
        - http://10.1.13.207:8088/mingyang/cncp/cncp-namespaces.yaml&#13;
        - http://10.1.13.207:8088/mingyang/cncp/nfs-server-deploy.yaml&#13;
    # A list of inline Kubernetes manifests.&#13;
    inlineManifests:&#13;
        - name: cluster-config-cm # Name of the manifest.&#13;
          contents: |- # Manifest contents as a string.&#13;
            kind: ConfigMap&#13;
            apiVersion: v1&#13;
            metadata:&#13;
              name: cluster-config&#13;
              namespace: kube-system&#13;
            data:&#13;
              KUBERNETES_API_SERVER_ADDRESS: '10.1.13.214'&#13;
              KUBERNETES_API_SERVER_PORT: '6443'&#13;
    # Settings for admin kubeconfig generation.&#13;
    adminKubeconfig:&#13;
        certLifetime: 87600h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).&#13;
    allowSchedulingOnControlPlanes: true # Allows running workload on control-plane nodes.&#13;
    &#13;
    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).&#13;
&#13;
    # # Decryption secret example (do not use in production!).&#13;
    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=&#13;
&#13;
    # # Core DNS specific configuration options.&#13;
    # coreDNS:&#13;
    #     image: registry.k8s.io/coredns/coredns:v1.10.1 # The `image` field is an override to the default coredns image.&#13;
&#13;
    # # External cloud provider configuration.&#13;
    # externalCloudProvider:&#13;
    #     enabled: true # Enable external cloud provider.&#13;
    #     # A list of urls that point to additional manifests for an external cloud provider.&#13;
    #     manifests:&#13;
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml&#13;
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml&#13;
&#13;
    # # A map of key value pairs that will be added while fetching the extraManifests.&#13;
    # extraManifestHeaders:&#13;
    #     Token: '1234567'&#13;
    #     X-ExtraInfo: info&#13;
。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/k8s_master.yaml.html</guid><pubDate>Wed, 12 Jun 2024 02:47:31 +0000</pubDate></item><item><title>harbor_docker_compose.yaml</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/harbor_docker_compose.yaml.html</link><description>```yaml&#13;
version: '2.3'&#13;
services:&#13;
  log:&#13;
    image: goharbor/harbor-log:v2.11.0&#13;
    container_name: harbor-log&#13;
    restart: always&#13;
    cap_drop:&#13;
      - ALL&#13;
    cap_add:&#13;
      - CHOWN&#13;
      - DAC_OVERRIDE&#13;
      - SETGID&#13;
      - SETUID&#13;
    volumes:&#13;
      - /var/log/harbor/:/var/log/docker/:z&#13;
      - type: bind&#13;
        source: ./common/config/log/logrotate.conf&#13;
        target: /etc/logrotate.d/logrotate.conf&#13;
      - type: bind&#13;
        source: ./common/config/log/rsyslog_docker.conf&#13;
        target: /etc/rsyslog.d/rsyslog_docker.conf&#13;
    ports:&#13;
      - 127.0.0.1:1514:10514&#13;
    networks:&#13;
      - harbor&#13;
  registry:&#13;
    image: goharbor/registry-photon:v2.11.0&#13;
    container_name: registry&#13;
    restart: always&#13;
    cap_drop:&#13;
      - ALL&#13;
    cap_add:&#13;
      - CHOWN&#13;
      - SETGID&#13;
      - SETUID&#13;
    volumes:&#13;
      - /data/registry:/storage:z&#13;
      - ./common/config/registry/:/etc/registry/:z&#13;
      - type: bind&#13;
        source: /data/secret/registry/root.crt&#13;
        target: /etc/registry/root.crt&#13;
      - type: bind&#13;
        source: ./common/config/shared/trust-certificates&#13;
        target: /harbor_cust_cert&#13;
    networks:&#13;
      - harbor&#13;
    depends_on:&#13;
      - log&#13;
    logging:&#13;
      driver: 'syslog'&#13;
      options:&#13;
        syslog-address: 'tcp://localhost:1514'&#13;
        tag: 'registry'&#13;
  registryctl:&#13;
    image: goharbor/harbor-registryctl:v2.11.0&#13;
    container_name: registryctl&#13;
    env_file:&#13;
      - ./common/config/registryctl/env&#13;
    restart: always&#13;
    cap_drop:&#13;
      - ALL&#13;
    cap_add:&#13;
      - CHOWN&#13;
      - SETGID&#13;
      - SETUID&#13;
    volumes:&#13;
      - /data/registry:/storage:z&#13;
      - ./common/config/registry/:/etc/registry/:z&#13;
      - type: bind&#13;
        source: ./common/config/registryctl/config.yml&#13;
        target: /etc/registryctl/config.yml&#13;
      - type: bind&#13;
        source: ./common/config/shared/trust-certificates&#13;
        target: /harbor_cust_cert&#13;
    networks:&#13;
      - harbor&#13;
    depends_on:&#13;
      - log&#13;
    logging:&#13;
      driver: 'syslog'&#13;
      options:&#13;
        syslog-address: 'tcp://localhost:1514'&#13;
        tag: 'registryctl'&#13;
  postgresql:&#13;
    image: goharbor/harbor-db:v2.11.0&#13;
    container_name: harbor-db&#13;
    restart: always&#13;
    cap_drop:&#13;
      - ALL&#13;
    cap_add:&#13;
      - CHOWN&#13;
      - DAC_OVERRIDE&#13;
      - SETGID&#13;
      - SETUID&#13;
    volumes:&#13;
      - /data/database:/var/lib/postgresql/data:z&#13;
    networks:&#13;
      harbor:&#13;
    env_file:&#13;
      - ./common/config/db/env&#13;
    depends_on:&#13;
      - log&#13;
    logging:&#13;
      driver: 'syslog'&#13;
      options:&#13;
        syslog-address: 'tcp://localhost:1514'&#13;
        tag: 'postgresql'&#13;
    shm_size: '1gb'&#13;
  core:&#13;
    image: goharbor/harbor-core:v2.11.0&#13;
    container_name: harbor-core&#13;
    env_file:&#13;
      - ./common/config/core/env&#13;
    restart: always&#13;
    cap_drop:&#13;
      - ALL&#13;
    cap_add:&#13;
      - SETGID&#13;
      - SETUID&#13;
    volumes:&#13;
      - /data/ca_download/:/etc/core/ca/:z&#13;
      - /data/:/data/:z&#13;
      - ./common/config/core/certificates/:/etc/core/certificates/:z&#13;
      - type: bind&#13;
        source: ./common/config/core/app.conf&#13;
        target: /etc/core/app.conf&#13;
      - type: bind&#13;
        source: /data/secret/core/private_key.pem&#13;
        target: /etc/core/private_key.pem&#13;
      - type: bind&#13;
        source: /data/secret/keys/secretkey&#13;
        target: /etc/core/key&#13;
      - type: bind&#13;
        source: ./common/config/shared/trust-certificates&#13;
        target: /harbor_cust_cert&#13;
    networks:&#13;
      harbor:&#13;
    depends_on:&#13;
      - log&#13;
      - registry&#13;
      - redis&#13;
      - postgresql&#13;
    logging:&#13;
      driver: 'syslog'&#13;
      options:&#13;
        syslog-address: 'tcp://localhost:1514'&#13;
        tag: 'core'&#13;
  portal:&#13;
    image: goharbor/harbor-portal:v2.11.0&#13;
    container_name: harbor-portal&#13;
    restart: always&#13;
    cap_drop:&#13;
      - ALL&#13;
    cap_add:&#13;
      - CHOWN&#13;
      - SETGID&#13;
      - SETUID&#13;
      - NET_BIND_SERVICE&#13;
    volumes:&#13;
      - type: bind&#13;
        source: ./common/config/portal/nginx.conf&#13;
        target: /etc/nginx/nginx.conf&#13;
    networks:&#13;
      - harbor&#13;
    depends_on:&#13;
      - log&#13;
    logging:&#13;
      driver: 'syslog'&#13;
      options:&#13;
        syslog-address: 'tcp://localhost:1514'&#13;
        tag: 'portal'&#13;
&#13;
  jobservice:&#13;
    image: goharbor/harbor-jobservice:v2.11.0&#13;
    container_name: harbor-jobservice&#13;
    env_file:&#13;
      - ./common/config/jobservice/env&#13;
    restart: always&#13;
    cap_drop:&#13;
      - ALL&#13;
    cap_add:&#13;
      - CHOWN&#13;
      - SETGID&#13;
      - SETUID&#13;
    volumes:&#13;
      - /data/job_logs:/var/log/jobs:z&#13;
      - type: bind&#13;
        source: ./common/config/jobservice/config.yml&#13;
        target: /etc/jobservice/config.yml&#13;
      - type: bind&#13;
        source: ./common/config/shared/trust-certificates&#13;
        target: /harbor_cust_cert&#13;
    networks:&#13;
      - harbor&#13;
    depends_on:&#13;
      - core&#13;
    logging:&#13;
      driver: 'syslog'&#13;
      options:&#13;
        syslog-address: 'tcp://localhost:1514'&#13;
        tag: 'jobservice'&#13;
  redis:&#13;
    image: goharbor/redis-photon:v2.11.0&#13;
    container_name: redis&#13;
    restart: always&#13;
    cap_drop:&#13;
      - ALL&#13;
    cap_add:&#13;
      - CHOWN&#13;
      - SETGID&#13;
      - SETUID&#13;
    volumes:&#13;
      - /data/redis:/var/lib/redis&#13;
    networks:&#13;
      harbor:&#13;
    depends_on:&#13;
      - log&#13;
    logging:&#13;
      driver: 'syslog'&#13;
      options:&#13;
        syslog-address: 'tcp://localhost:1514'&#13;
        tag: 'redis'&#13;
  proxy:&#13;
    image: goharbor/nginx-photon:v2.11.0&#13;
    container_name: nginx&#13;
    restart: always&#13;
    cap_drop:&#13;
      - ALL&#13;
    cap_add:&#13;
      - CHOWN&#13;
      - SETGID&#13;
      - SETUID&#13;
      - NET_BIND_SERVICE&#13;
    volumes:&#13;
      - ./common/config/nginx:/etc/nginx:z&#13;
      - /data/secret/cert:/etc/cert:z&#13;
      - type: bind&#13;
        source: ./common/config/shared/trust-certificates&#13;
        target: /harbor_cust_cert&#13;
    networks:&#13;
      - harbor&#13;
    ports:&#13;
      - 8888:8080&#13;
      - 443:8443&#13;
    depends_on:&#13;
      - registry&#13;
      - core&#13;
      - portal&#13;
      - log&#13;
    logging:&#13;
      driver: 'syslog'&#13;
      options:&#13;
        syslog-address: 'tcp://localhost:1514'&#13;
        tag: 'proxy'&#13;
networks:&#13;
  harbor:&#13;
    external: false。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/harbor_docker_compose.yaml.html</guid><pubDate>Wed, 12 Jun 2024 02:45:26 +0000</pubDate></item><item><title>harbor.yaml</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/harbor.yaml.html</link><description>```yaml&#13;
# Configuration file of Harbor&#13;
&#13;
# The IP address or hostname to access admin UI and registry service.&#13;
# DO NOT use localhost or 127.0.0.1, because Harbor needs to be accessed by external clients.&#13;
hostname: 172.16.8.3&#13;
# http related config&#13;
http:&#13;
  # port for http, default is 80. If https enabled, this port will redirect to https port&#13;
  port: 80&#13;
&#13;
# https related config&#13;
https:&#13;
  # https port for harbor, default is 443&#13;
  port: 443&#13;
  # The path of cert and key files for nginx&#13;
  certificate: /home/test/harbor/harbor/172.16.8.3.crt&#13;
  private_key: /home/test/harbor/harbor/172.16.8.3.key&#13;
  # enable strong ssl ciphers (default: false)&#13;
  # strong_ssl_ciphers: false&#13;
&#13;
# # Harbor will set ipv4 enabled only by default if this block is not configured&#13;
# # Otherwise, please uncomment this block to configure your own ip_family stacks&#13;
# ip_family:&#13;
#   # ipv6Enabled set to true if ipv6 is enabled in docker network, currently it affected the nginx related component&#13;
#   ipv6:&#13;
#     enabled: false&#13;
#   # ipv4Enabled set to true by default, currently it affected the nginx related component&#13;
#   ipv4:&#13;
#     enabled: true&#13;
&#13;
# # Uncomment following will enable tls communication between all harbor components&#13;
# internal_tls:&#13;
#   # set enabled to true means internal tls is enabled&#13;
#   enabled: true&#13;
#   # put your cert and key files on dir&#13;
#   dir: /etc/harbor/tls/internal&#13;
&#13;
&#13;
# Uncomment external_url if you want to enable external proxy&#13;
# And when it enabled the hostname will no longer used&#13;
# external_url: https://reg.mydomain.com:8433&#13;
&#13;
# The initial password of Harbor admin&#13;
# It only works in first time to install harbor&#13;
# Remember Change the admin password from UI after launching Harbor.&#13;
harbor_admin_password: Harbor12345&#13;
&#13;
# Harbor DB configuration&#13;
database:&#13;
  # The password for the root user of Harbor DB. Change this before any production use.&#13;
  password: root123&#13;
  # The maximum number of connections in the idle connection pool. If it &lt;=0, no idle connections are retained.&#13;
  max_idle_conns: 100&#13;
  # The maximum number of open connections to the database. If it &lt;= 0, then there is no limit on the number of open connections.&#13;
  # Note: the default number of connections is 1024 for postgres of harbor.&#13;
  max_open_conns: 900&#13;
  # The maximum amount of time a connection may be reused. Expired connections may be closed lazily before reuse. If it &lt;= 0, connections are not closed due to a connection's age.&#13;
  # The value is a duration string. A duration string is a possibly signed sequence of decimal numbers, each with optional fraction and a unit suffix, such as '300ms', '-1.5h' or '2h45m'. Valid time units are 'ns', 'us' (or 'µs'), 'ms', 's', 'm', 'h'.&#13;
  conn_max_lifetime: 5m&#13;
  # The maximum amount of time a connection may be idle. Expired connections may be closed lazily before reuse. If it &lt;= 0, connections are not closed due to a connection's idle time.&#13;
  # The value is a duration string. A duration string is a possibly signed sequence of decimal numbers, each with optional fraction and a unit suffix, such as '300ms', '-1.5h' or '2h45m'. Valid time units are 'ns', 'us' (or 'µs'), 'ms', 's', 'm', 'h'.&#13;
  conn_max_idle_time: 0&#13;
&#13;
# The default data volume&#13;
data_volume: /data&#13;
&#13;
# Harbor Storage settings by default is using /data dir on local filesystem&#13;
# Uncomment storage_service setting If you want to using external storage&#13;
# storage_service:&#13;
#   # ca_bundle is the path to the custom root ca certificate, which will be injected into the truststore&#13;
#   # of registry's containers.  This is usually needed when the user hosts a internal storage with self signed certificate.&#13;
#   ca_bundle:&#13;
&#13;
#   # storage backend, default is filesystem, options include filesystem, azure, gcs, s3, swift and oss&#13;
#   # for more info about this configuration please refer https://distribution.github.io/distribution/about/configuration/&#13;
#   # and https://distribution.github.io/distribution/storage-drivers/&#13;
#   filesystem:&#13;
#     maxthreads: 100&#13;
#   # set disable to true when you want to disable registry redirect&#13;
#   redirect:&#13;
#     disable: false&#13;
&#13;
# Trivy configuration&#13;
#&#13;
# Trivy DB contains vulnerability information from NVD, Red Hat, and many other upstream vulnerability databases.&#13;
# It is downloaded by Trivy from the GitHub release page https://github.com/aquasecurity/trivy-db/releases and cached&#13;
# in the local file system. In addition, the database contains the update timestamp so Trivy can detect whether it&#13;
# should download a newer version from the Internet or use the cached one. Currently, the database is updated every&#13;
# 12 hours and published as a new release to GitHub.&#13;
trivy:&#13;
  # ignoreUnfixed The flag to display only fixed vulnerabilities&#13;
  ignore_unfixed: false&#13;
  # skipUpdate The flag to enable or disable Trivy DB downloads from GitHub&#13;
  #&#13;
  # You might want to enable this flag in test or CI/CD environments to avoid GitHub rate limiting issues.&#13;
  # If the flag is enabled you have to download the `trivy-offline.tar.gz` archive manually, extract `trivy.db` and&#13;
  # `metadata.json` files and mount them in the `/home/scanner/.cache/trivy/db` path.&#13;
  skip_update: false&#13;
  #&#13;
  # skipJavaDBUpdate If the flag is enabled you have to manually download the `trivy-java.db` file and mount it in the&#13;
  # `/home/scanner/.cache/trivy/java-db/trivy-java.db` path&#13;
  skip_java_db_update: false&#13;
  #&#13;
  # The offline_scan option prevents Trivy from sending API requests to identify dependencies.&#13;
  # Scanning JAR files and pom.xml may require Internet access for better detection, but this option tries to avoid it.&#13;
  # For example, the offline mode will not try to resolve transitive dependencies in pom.xml when the dependency doesn't&#13;
  # exist in the local repositories. It means a number of detected vulnerabilities might be fewer in offline mode.&#13;
  # It would work if all the dependencies are in local.&#13;
  # This option doesn't affect DB download. You need to specify 'skip-update' as well as 'offline-scan' in an air-gapped environment.&#13;
  offline_scan: false&#13;
  #&#13;
  # Comma-separated list of what security issues to detect. Possible values are `vuln`, `config` and `secret`. Defaults to `vuln`.&#13;
  security_check: vuln&#13;
  #&#13;
  # insecure The flag to skip verifying registry certificate&#13;
  insecure: false&#13;
  #&#13;
  # timeout The duration to wait for scan completion.&#13;
  # There is upper bound of 30 minutes defined in scan job. So if this `timeout` is larger than 30m0s, it will also timeout at 30m0s.&#13;
  timeout: 5m0s&#13;
  #&#13;
  # github_token The GitHub access token to download Trivy DB&#13;
  #&#13;
  # Anonymous downloads from GitHub are subject to the limit of 60 requests per hour. Normally such rate limit is enough&#13;
  # for production operations. If, for any reason, it's not enough, you could increase the rate limit to 5000&#13;
  # requests per hour by specifying the GitHub access token. For more details on GitHub rate limiting please consult&#13;
  # https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting&#13;
  #&#13;
  # You can create a GitHub token by following the instructions in&#13;
  # https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line&#13;
  #&#13;
  # github_token: xxx&#13;
&#13;
jobservice:&#13;
  # Maximum number of job workers in job service&#13;
  max_job_workers: 10&#13;
  # The jobLoggers backend name, only support 'STD_OUTPUT', 'FILE' and/or 'DB'&#13;
  job_loggers:&#13;
    - STD_OUTPUT&#13;
    - FILE&#13;
    # - DB&#13;
  # The jobLogger sweeper duration (ignored if `jobLogger` is `stdout`)&#13;
  logger_sweeper_duration: 1 #days&#13;
&#13;
notification:&#13;
  # Maximum retry count for webhook job&#13;
  webhook_job_max_retry: 3&#13;
  # HTTP client timeout for webhook job&#13;
  webhook_job_http_client_timeout: 3 #seconds&#13;
&#13;
# Log configurations&#13;
log:&#13;
  # options are debug, info, warning, error, fatal&#13;
  level: info&#13;
  # configs for logs in local storage&#13;
  local:&#13;
    # Log files are rotated log_rotate_count times before being removed. If count is 0, old versions are removed rather than rotated.&#13;
    rotate_count: 50&#13;
    # Log files are rotated only if they grow bigger than log_rotate_size bytes. If size is followed by k, the size is assumed to be in kilobytes.&#13;
    # If the M is used, the size is in megabytes, and if G is used, the size is in gigabytes. So size 100, size 100k, size 100M and size 100G&#13;
    # are all valid.&#13;
    rotate_size: 200M&#13;
    # The directory on your host that store log&#13;
    location: /var/log/harbor&#13;
&#13;
  # Uncomment following lines to enable external syslog endpoint.&#13;
  # external_endpoint:&#13;
  #   # protocol used to transmit log to external endpoint, options is tcp or udp&#13;
  #   protocol: tcp&#13;
  #   # The host of external endpoint&#13;
  #   host: localhost&#13;
  #   # Port of external endpoint&#13;
  #   port: 5140&#13;
&#13;
#This attribute is for migrator to detect the version of the .cfg file, DO NOT MODIFY!&#13;
_version: 2.11.0&#13;
&#13;
# Uncomment external_database if using external database.&#13;
# external_database:&#13;
#   harbor:&#13;
#     host: harbor_db_host&#13;
#     port: harbor_db_port&#13;
#     db_name: harbor_db_name&#13;
#     username: harbor_db_username&#13;
#     password: harbor_db_password&#13;
#     ssl_mode: disable&#13;
#     max_idle_conns: 2&#13;
#     max_open_conns: 0&#13;
&#13;
# Uncomment redis if need to customize redis db&#13;
# redis:&#13;
#   # db_index 0 is for core, it's unchangeable&#13;
#   # registry_db_index: 1&#13;
#   # jobservice_db_index: 2&#13;
#   # trivy_db_index: 5&#13;
#   # it's optional, the db for harbor business misc, by default is 0, uncomment it if you want to change it.&#13;
#   # harbor_db_index: 6&#13;
#   # it's optional, the db for harbor cache layer, by default is 0, uncomment it if you want to change it.&#13;
#   # cache_layer_db_index: 7&#13;
&#13;
# Uncomment external_redis if using external Redis server&#13;
# external_redis:&#13;
#   # support redis, redis+sentinel&#13;
#   # host for redis: &lt;host_redis&gt;:&lt;port_redis&gt;&#13;
#   # host for redis+sentinel:&#13;
#   #  &lt;host_sentinel1&gt;:&lt;port_sentinel1&gt;,&lt;host_sentinel2&gt;:&lt;port_sentinel2&gt;,&lt;host_sentinel3&gt;:&lt;port_sentinel3&gt;&#13;
#   host: redis:6379&#13;
#   password: &#13;
#   # Redis AUTH command was extended in Redis 6, it is possible to use it in the two-arguments AUTH &lt;username&gt; &lt;password&gt; form.&#13;
#   # there's a known issue when using external redis username ref:https://github.com/goharbor/harbor/issues/18892&#13;
#   # if you care about the image pull/push performance, please refer to this https://github.com/goharbor/harbor/wiki/Harbor-FAQs#external-redis-username-password-usage&#13;
#   # username:&#13;
#   # sentinel_master_set must be set to support redis+sentinel&#13;
#   #sentinel_master_set:&#13;
#   # db_index 0 is for core, it's unchangeable&#13;
#   registry_db_index: 1&#13;
#   jobservice_db_index: 2&#13;
#   trivy_db_index: 5&#13;
#   idle_timeout_seconds: 30&#13;
#   # it's optional, the db for harbor business misc, by default is 0, uncomment it if you want to change it.&#13;
#   # harbor_db_index: 6&#13;
#   # it's optional, the db for harbor cache layer, by default is 0, uncomment it if you want to change it.&#13;
#   # cache_layer_db_index: 7&#13;
&#13;
# Uncomment uaa for trusting the certificate of uaa instance that is hosted via self-signed cert.&#13;
# uaa:&#13;
#   ca_file: /path/to/ca&#13;
&#13;
# Global proxy&#13;
# Config http proxy for components, e.g. http://my.proxy.com:3128&#13;
# Components doesn't need to connect to each others via http proxy.&#13;
# Remove component from `components` array if want disable proxy&#13;
# for it. If you want use proxy for replication, MUST enable proxy&#13;
# for core and jobservice, and set `http_proxy` and `https_proxy`.&#13;
# Add domain to the `no_proxy` field, when you want disable proxy&#13;
# for some special registry.&#13;
proxy:&#13;
  http_proxy:&#13;
  https_proxy:&#13;
  no_proxy:&#13;
  components:&#13;
    - core&#13;
    - jobservice&#13;
    - trivy&#13;
&#13;
# metric:&#13;
#   enabled: false&#13;
#   port: 9090&#13;
#   path: /metrics&#13;
&#13;
# Trace related config&#13;
# only can enable one trace provider(jaeger or otel) at the same time,&#13;
# and when using jaeger as provider, can only enable it with agent mode or collector mode.&#13;
# if using jaeger collector mode, uncomment endpoint and uncomment username, password if needed&#13;
# if using jaeger agetn mode uncomment agent_host and agent_port&#13;
# trace:&#13;
#   enabled: true&#13;
#   # set sample_rate to 1 if you wanna sampling 100% of trace data; set 0.5 if you wanna sampling 50% of trace data, and so forth&#13;
#   sample_rate: 1&#13;
#   # # namespace used to differentiate different harbor services&#13;
#   # namespace:&#13;
#   # # attributes is a key value dict contains user defined attributes used to initialize trace provider&#13;
#   # attributes:&#13;
#   #   application: harbor&#13;
#   # # jaeger should be 1.26 or newer.&#13;
#   # jaeger:&#13;
#   #   endpoint: http://hostname:14268/api/traces&#13;
#   #   username:&#13;
#   #   password:&#13;
#   #   agent_host: hostname&#13;
#   #   # export trace data by jaeger.thrift in compact mode&#13;
#   #   agent_port: 6831&#13;
#   # otel:&#13;
#   #   endpoint: hostname:4318&#13;
#   #   url_path: /v1/traces&#13;
#   #   compression: false&#13;
#   #   insecure: true&#13;
#   #   # timeout is in seconds&#13;
#   #   timeout: 10&#13;
&#13;
# Enable purge _upload directories&#13;
upload_purging:&#13;
  enabled: true&#13;
  # remove files in _upload directories which exist for a period of time, default is one week.&#13;
  age: 168h&#13;
  # the interval of the purge operations&#13;
  interval: 24h&#13;
  dryrun: false&#13;
&#13;
# Cache layer configurations&#13;
# If this feature enabled, harbor will cache the resource&#13;
# `project/project_metadata/repository/artifact/manifest` in the redis&#13;
# which can especially help to improve the performance of high concurrent&#13;
# manifest pulling.&#13;
# NOTICE&#13;
# If you are deploying Harbor in HA mode, make sure that all the harbor&#13;
# instances have the same behaviour, all with caching enabled or disabled,&#13;
# otherwise it can lead to potential data inconsistency.&#13;
cache:&#13;
  # not enabled by default&#13;
  enabled: false&#13;
  # keep cache for one day by default&#13;
  expire_hours: 24&#13;
&#13;
# Harbor core configurations&#13;
# Uncomment to enable the following harbor core related configuration items.&#13;
# core:&#13;
#   # The provider for updating project quota(usage), there are 2 options, redis or db,&#13;
#   # by default is implemented by db but you can switch the updation via redis which&#13;
#   # can improve the performance of high concurrent pushing to the same project,&#13;
#   # and reduce the database connections spike and occupies.&#13;
#   # By redis will bring up some delay for quota usage updation for display, so only&#13;
#   # suggest switch provider to redis if you were ran into the db connections spike around&#13;
#   # the scenario of high concurrent pushing to same project, no improvement for other scenes.&#13;
#   quota_update_provider: redis # Or db&#13;
。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/harbor.yaml.html</guid><pubDate>Wed, 12 Jun 2024 02:44:52 +0000</pubDate></item><item><title>gitlab.yaml</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/gitlab.yaml.html</link><description>```yaml&#13;
version: '3.6'&#13;
services:&#13;
  gitlab:&#13;
    image: gitlab/gitlab-ce:latest&#13;
    container_name: gitlab&#13;
    restart: always&#13;
    hostname: '172.16.8.3'&#13;
    environment:&#13;
      GITLAB_OMNIBUS_CONFIG: |&#13;
        external_url 'http://172.16.8.3:8929'&#13;
        gitlab_rails['gitlab_shell_ssh_port'] = 2424&#13;
    ports:&#13;
      - '8929:8929'&#13;
      - '4443:443'&#13;
      - '2424:22'&#13;
    volumes:&#13;
      - '/srv/config:/etc/gitlab'&#13;
      - '/srv/logs:/var/log/gitlab'&#13;
      - '/srv/data:/var/opt/gitlab'&#13;
    shm_size: '256m'。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/gitlab.yaml.html</guid><pubDate>Wed, 12 Jun 2024 02:40:16 +0000</pubDate></item><item><title>K8S灾难恢复</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/K8S-zai-nan-hui-fu.html</link><description>![image](https://github.com/donkeytt11111/jiaxin.github.io/assets/167744103/4817925f-e8c4-4e62-a983-b1439f36ac84)&#13;
。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/K8S-zai-nan-hui-fu.html</guid><pubDate>Wed, 12 Jun 2024 00:39:01 +0000</pubDate></item><item><title>talos</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/talos.html</link><description>![image](https://github.com/donkeytt11111/jiaxin.github.io/assets/167744103/86f3f38b-b49e-4fa7-b7b6-47d3507d76a1)&#13;
&#13;
&#13;
。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/talos.html</guid><pubDate>Tue, 11 Jun 2024 09:30:55 +0000</pubDate></item><item><title>test_auto</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/test_auto.html</link><description>[case_test.zip](https://github.com/user-attachments/files/15785392/case_test.zip)&#13;
&#13;
&#13;
。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/test_auto.html</guid><pubDate>Tue, 11 Jun 2024 09:17:52 +0000</pubDate></item><item><title>k8s_status</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/k8s_status.html</link><description>echo '开始检查k8s集群状态'&#13;
while true; do&#13;
  # 尝试获取所有Pod的状态信息，直到成功&#13;
  while true; do&#13;
    pod_statuses=$(kubectl get pods -A --output=json 2&gt;&amp;1)&#13;
    if [[ $(echo '$pod_statuses' | jq -r '.items[] | select(.metadata.namespace == 'kube-system')') ]]; then  # 检查kube-system是否存在&#13;
      echo '成功连接到Kubernetes集群'&#13;
      break&#13;
    fi&#13;
    echo '无法获取kube-system命名空间的Pod信息。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/k8s_status.html</guid><pubDate>Tue, 11 Jun 2024 09:13:44 +0000</pubDate></item><item><title>project_ddi</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/project_ddi.html</link><description>```shell&#13;
#!/bin/bash&#13;
#集团文件夹下方执行&#13;
#执行之前确定/path/to/dhcpdb_create.pgsql有没有这个文件&#13;
&#13;
&#13;
&#13;
source_config_path='/root/.kube/config'&#13;
helm_path='cncp-helm'&#13;
services_path='cncp-helm/cncp-basic-services/values.yaml'&#13;
core_path='cncp-helm/cncp-core-components/values.yaml'&#13;
one_path=$1&#13;
tow_path=$2&#13;
ipv4_path='172.16.102.240-172.16.102.244'&#13;
ipv6_path='2408:8631:c02:ffa2::240-2408:8631:c02:ffa2::244'&#13;
dns_path=$3&#13;
dhcp_path=$4&#13;
ddi_file_path='cncp-helm/ddi-components/values.yaml'&#13;
ddi_dns_path=$5&#13;
ddi_dhcp_path=$6&#13;
sql_path=$7&#13;
&#13;
&#13;
# bak&#13;
#backup_suffix='_$(date +%Y%m%d%H%M%S).bak'&#13;
#cp '$services_path' '${services_path}${backup_suffix}'&#13;
#cp '$core_path' '${core_path}${backup_suffix}'&#13;
&#13;
#echo '服务路径（$services_path）和核心路径（$core_path）的备份已完成。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/project_ddi.html</guid><pubDate>Tue, 11 Jun 2024 09:12:58 +0000</pubDate></item><item><title>talos_master</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/talos_master.html</link><description>```shell&#13;
#!/bin/bash&#13;
# 参数检查&#13;
talosctl_version='talosctl version'&#13;
talosctl_service='talosctl service'&#13;
command_jiqun='talosctl kubeconfig'&#13;
kubectl_version='kubectl get pods -A'&#13;
#生成配置文件&#13;
command_token='talosctl  gen  config  mingyang https://172.16.102.102:6443  --config-patch-control-plane @patch.yaml --config-patch-worker @patch-worker.yaml'&#13;
all_file_name=*&#13;
patch_name=patch*&#13;
k8s_path=/home/k8s&#13;
failpath=/opt&#13;
jituan_path=$1&#13;
talos_path=$2&#13;
cncp_path=$3&#13;
ipv46_patch=$4&#13;
linshi_ip=$5&#13;
talos_cfg=$6&#13;
del_jt=${failpath}/${jituan_path}&#13;
ctrl_file=${failpath}/${jituan_path}/${talos_path}/controlplane.yaml&#13;
taloscfg_file=${failpath}/${jituan_path}/${talos_path}/talosconfig&#13;
talos_file_path=${failpath}/${jituan_path}/${talos_path}&#13;
&#13;
&#13;
# 检查参数个数是否满足要求&#13;
if [[ $# -lt 6 ]]; then&#13;
    echo '使用错误！使用方法 sh danji.sh 集团名 talos cncp-helm 要修改的IP地址!主机位! 临时IP地址绑定的地址!主机位! talosconfig中的IP地址!主机位!'&#13;
    exit 1&#13;
fi&#13;
&#13;
# 逐个检查参数是否合法（以检查非空且非仅空格字符为例）&#13;
for ((i=1; i&lt;=6; i++)); do&#13;
    param='${!i}'&#13;
    if [[ -z '$param' || '$param' =~ ^\s+$ ]]; then&#13;
        echo '使用错误！使用方法 sh danji.sh 集团名 talos cncp-helm 要修改的IP地址!主机位! 临时IP地址绑定的地址!主机位! talosconfig中的IP地址!主机位!'&#13;
        exit 1&#13;
    fi&#13;
done&#13;
&#13;
# 所有参数检查通过，记录日志并继续执行&#13;
&#13;
kubecfg_path='/root/.kube/config'&#13;
if rm '$kubecfg_path'; then&#13;
  echo '文件 '$kubecfg_path' 已成功删除。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/talos_master.html</guid><pubDate>Tue, 11 Jun 2024 09:11:48 +0000</pubDate></item><item><title>k8s_delete.sh</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/k8s_delete.sh.html</link><description>```shell&#13;
#!/bin/bash&#13;
function delete_pods_by_status {&#13;
    local namespace='$1'&#13;
    local status='$2'&#13;
    kubectl -n '$namespace' get pods | grep '$status' | awk '{print $1}' | xargs kubectl -n '$namespace' delete pods&#13;
}&#13;
&#13;
#ERROR&#13;
delete_pods_by_status 'default' 'Error'&#13;
delete_pods_by_status 'cncp-system' 'Error'&#13;
delete_pods_by_status 'metallb-system' 'Error'&#13;
delete_pods_by_status 'kubernetes-dashboard' 'Error'&#13;
delete_pods_by_status 'openebs' 'Error'&#13;
delete_pods_by_status 'kube-system' 'Error'&#13;
&#13;
#completed&#13;
delete_pods_by_status 'default' 'Completed'&#13;
delete_pods_by_status 'cncp-system' 'Completed'&#13;
delete_pods_by_status 'metallb-system' 'Completed'&#13;
delete_pods_by_status 'kubernetes-dashboard' 'Completed'&#13;
delete_pods_by_status 'openebs' 'Completed'&#13;
delete_pods_by_status 'kube-system' 'Completed'。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/k8s_delete.sh.html</guid><pubDate>Fri, 07 Jun 2024 09:07:47 +0000</pubDate></item><item><title>harbor部署</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/harbor-bu-shu.html</link><description>wget https://github.com/goharbor/harbor/releases/download/v2.11.0/harbor-offline-installer-v2.11.0.tgz&#13;
解压压缩包&#13;
复制compose文件&#13;
![image](https://github.com/donkeytt11111/jiaxin.github.io/assets/167744103/fcc2629c-8bd9-4889-97b3-c4c5cf1e88a0)&#13;
#修改配置文件中的端口和hostname&#13;
vim harbor.yml&#13;
👍 &#13;
# 生成私钥&#13;
openssl genrsa -out 172.16.8.3.key 2048&#13;
# 生成CSR（证书签署请求）&#13;
openssl req -new -key 172.16.8.3.key -out 172.16.8.3.csr&#13;
# 用私钥生成自签名证书&#13;
openssl x509 -req -days 365 -in 172.16.8.3.csr -signkey 172.16.8.3.key -out 172.16.8.3.crt&#13;
&#13;
💯 #新版修复&#13;
openssl x509 -req -days 365 -in 172.16.8.3.csr -CA 172.16.8.3.crt -CAkey 172.16.8.3.key -set_serial 01 -out 172.16.8.3.crt -extfile &lt;(echo -e 'subjectAltName = IP:172.16.8.3')&#13;
👍 &#13;
#修改配置文件&#13;
https:&#13;
  enabled: true&#13;
  port: 443&#13;
  certificate: /home/test/harbor/harbor/172.16.8.3.crt&#13;
  private_key: /home/test/harbor/harbor/172.16.8.3.key&#13;
👍 &#13;
#执行脚本&#13;
./prepre&#13;
👍 &#13;
#执行安装脚本&#13;
install&#13;
#配置登录模块&#13;
sudo tee /etc/docker/daemon.json &lt;&lt;-'EOF'&#13;
&gt; {&#13;
&gt; 'insecure-registries':['172.16.8.3']&#13;
&gt; }&#13;
&gt; EOF&#13;
👍 密钥方法&#13;
生成&#13;
openssl genpkey -algorithm RSA -out 10.42.13.200.key -pkeyopt rsa_keygen_bits:2048&#13;
生成csr&#13;
openssl req -new -key 10.42.13.200.key -out 10.42.13.200.csr -subj '/C=XX/ST=State/L=Location/O=Organization/OU=OrganizationalUnit/CN=10.42.13.200'&#13;
生成证书&#13;
openssl x509 -req -days 365 -in 10.42.13.200.csr -signkey 10.42.13.200.key -out 10.42.13.200.crt -extfile &lt;(echo 'subjectAltName = IP:10.42.13.200')&#13;
&#13;
。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/harbor-bu-shu.html</guid><pubDate>Fri, 07 Jun 2024 07:24:26 +0000</pubDate></item><item><title>禅道部署</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/shan-dao-bu-shu.html</link><description>docker pull hub.zentao.net/app/zentao:18.5 &#13;
&#13;
&#13;
&#13;
docker run \&#13;
--name zentao \&#13;
-p 80:8888 \&#13;
--network=tt \&#13;
-v /data/zentao:/home/ljx/data \&#13;
-e MYSQL_INTERNAL=true \&#13;
hub.zentao.net/app/zentao:18.5&#13;
&#13;
&#13;
&#13;
docker run -d -v /home/data:/data -p 8888:80 -e MYSQL_INTERNAL=true hub.zentao.net/app/zentao:18.5&#13;
&#13;
http://120.46.211.167:8888/&#13;
。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/shan-dao-bu-shu.html</guid><pubDate>Thu, 06 Jun 2024 02:40:39 +0000</pubDate></item><item><title>helm转yaml方法</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/helm-zhuan-yaml-fang-fa.html</link><description>#1.首先需要一个http服务器，通过docker或者在centos上直接yum install 部署都可以&#13;
docker run -d -p 8081:80 -v /var/www:/usr/local/apache2/htdocs httpd&#13;
这个docker命令会创建并运行一个httpd容器,参数说明如下: &#13;
&#13;
-d: 后台运行容器&#13;
-p 8081:80: 映射容器内80端口到宿主机8081端口&#13;
-v /var/www:/usr/local/apache2/htdocs: 把宿主机/var/www目录挂载到容器的/usr/local/apache2/htdocs,作为网页文档根目录&#13;
httpd: 使用httpd镜像启动容器&#13;
这样就在宿主机8081端口启动了一个httpd服务器,网页文档来自宿主机的/var/www目录。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/helm-zhuan-yaml-fang-fa.html</guid><pubDate>Thu, 06 Jun 2024 02:36:16 +0000</pubDate></item><item><title>集群快照备份</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/ji-qun-kuai-zhao-bei-fen.html</link><description>snap install yq&#13;
&#13;
#创建etcd节点数据库备份&#13;
talosctl -n 172.16.8.70 etcd snapshot db.snapshot&#13;
&#13;
#若etcd状态异常则通过目录挂载方式备份快照&#13;
talosctl -n 172.16.8.70 cp /var/lib/etcd/member/snap/db .&#13;
&#13;
#备份yaml文件&#13;
talosctl -n 172.16.8.70 get mc v1alpha1 -o yaml | yq eval '.spec' - &gt; machine_config.yaml&#13;
&#13;
确保没有具有机器类型的控制平面节点init：&#13;
&#13;
talosctl -n 172.16.8.70,172.16.8.71,172.16.8.72 get machinetype&#13;
NODE         NAMESPACE   TYPE          ID             VERSION   TYPE&#13;
172.20.0.2   config      MachineType   machine-type   2         controlplane&#13;
172.20.0.4   config      MachineType   machine-type   2         controlplane&#13;
172.20.0.3   config      MachineType   machine-type   2         controlplane&#13;
&#13;
#重置并重启&#13;
talosctl -n 172.16.8.70 reset --graceful=false --reboot --system-labels-to-wipe=EPHEMERAL&#13;
&#13;
#恢复备份&#13;
talosctl -n 172.16.8.70 bootstrap --recover-from=./db.snapshot&#13;
&#13;
![image](https://github.com/donkeytt11111/jiaxin.github.io/assets/167744103/f5dfde30-bce8-4ff7-900b-f5d99af109ac)。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/ji-qun-kuai-zhao-bei-fen.html</guid><pubDate>Thu, 06 Jun 2024 02:30:37 +0000</pubDate></item><item><title>集群证书替换方案</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/ji-qun-zheng-shu-ti-huan-fang-an.html</link><description>先看是几个节点的集群，需要在每个节点执行以下操作。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/ji-qun-zheng-shu-ti-huan-fang-an.html</guid><pubDate>Thu, 06 Jun 2024 02:00:28 +0000</pubDate></item><item><title>hb_docker.sh</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/hb_docker.sh.html</link><description>```shell&#13;
#!/bin/bash&#13;
Harbor_Address=172.16.1.200       #Harbor主机地址&#13;
Harbor_User=admin                      #登录Harbor的用户&#13;
Harbor_Passwd=Harbor12345              #登录Harbor的用户密码&#13;
Images_File=./images.list      # 镜像清单文件&#13;
Tar_File=/backup/Harbor-backup/                 #镜像tar包存放路径&#13;
set -x&#13;
&#13;
# 获取Harbor中所有的项目（Projects）&#13;
Project_List=$(curl -u admin:Harbor12345  -H 'Content-Type: application/json' -X GET  https://$Harbor_Address/api/v2.0/projects  -k  | python3 -m json.tool | grep name | awk '/'name': /' | awk -F ''' '{print $4}')&#13;
&#13;
for Project in $Project_List;do&#13;
   # 循环获取项目下所有的镜像&#13;
    Image_Names=$(curl -u admin:Harbor12345 -H 'Content-Type: application/json' -X GET https://$Harbor_Address/api/v2.0/projects/$Project/repositories -k | python3 -m json.tool | grep name | awk '/'name': /' | awk -F ''' '{print $4}')&#13;
    for Image in $Image_Names;do&#13;
        # 循环获取镜像的版本（tag)&#13;
        Image_Tags=$(curl -u admin:Harbor12345  -H 'Content-Type: application/json'   -X GET  https://$Harbor_Address/v2/$Image/tags/list  -k |  awk -F '''  '{print $8,$10,$12}')&#13;
       for Tag in $Image_Tags;do&#13;
            # 格式化输出镜像信息&#13;
            echo '$Harbor_Address/$Image:$Tag'   &gt;&gt; harbor-images-`date '+%Y-%m-%d'`.txt&#13;
        done&#13;
    done&#13;
done&#13;
&#13;
# 读取Images_File文件中的镜像名称&#13;
while read -r image_tag; do&#13;
    # 使用awk提取镜像名称和标签，同时处理特殊字符&#13;
    image_Name=$(echo $image_tag | awk -F/ '{print $3}' |  awk -F: '{print $1}' | sed 's/\//-/g')&#13;
    image_Lable=$(echo $image_tag | awk -F/ '{print $3}' |  awk -F: '{print $2}' | sed 's/:/_/g')&#13;
&#13;
    # 检查image_Name和image_Lable是否为空&#13;
    if [ -z '$image_Name' ]; then&#13;
        echo 'Error: Empty image_Name for $image_tag' &gt;&gt; error_images.txt&#13;
        continue&#13;
    fi&#13;
    if [ -z '$image_Lable' ]; then&#13;
        echo 'Error: Empty image_Lable for $image_tag' &gt;&gt; error_images.txt&#13;
        continue&#13;
    fi&#13;
&#13;
    # 创建安全的文件名&#13;
    image_save='$image_Name-$image_Lable'&#13;
&#13;
    docker pull $Harbor_Address/$image_tag&#13;
    docker tag $Harbor_Address/$image_tag $image_tag&#13;
    docker save $image_tag -o '$Tar_File/$image_save.tar'&#13;
    docker rmi $Harbor_Address/$image_tag&#13;
    docker rmi $image_tag&#13;
done &lt; '$Images_File'&#13;
。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/hb_docker.sh.html</guid><pubDate>Wed, 05 Jun 2024 07:16:57 +0000</pubDate></item><item><title>email</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/email.html</link><description>```shell&#13;
#!/bin/bash&#13;
&#13;
&#13;
&#13;
# 发送邮件方法&#13;
function send_config_files_by_email() {&#13;
    project_name=$1&#13;
&#13;
    echo '请输入你部署的项目的名字，英文，若输入错误 请用ctrl+w撤回后重新输入'&#13;
    read project_name&#13;
&#13;
    # 定义接收者列表&#13;
    recipients=('1553232697@qq.com' '18640549232@163.com' '442283241@qq.com' '2505584859@qq.com' '1223645860@qq.com')&#13;
&#13;
    # 定义要发送的配置文件列表&#13;
    config_files=('/root/.kube/config' '/root/.talos/config')&#13;
&#13;
    # 安装msmtp和mailx&#13;
    install_deps() {&#13;
        if command -v yum &amp;&gt; /dev/null; then&#13;
            echo '正在为CentOS/RHEL系统安装必要软件...'&#13;
            sudo yum install -y msmtp ca-certificates mailx&#13;
        else&#13;
            echo '无法识别的包管理器，请手动安装msmtp和mailx。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/email.html</guid><pubDate>Wed, 05 Jun 2024 07:11:06 +0000</pubDate></item><item><title>K8S集群IP迁移方案</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/K8S-ji-qun-IP-qian-yi-fang-an.html</link><description>![image](https://github.com/donkeytt11111/jiaxin.github.io/assets/167744103/df4eac8d-85f4-4e83-bc69-c4b2f34ef6e0)&#13;
👍 先修改master3&#13;
👍 :%s/172.16.8.70/172.16.102.70/g&#13;
![image](https://github.com/donkeytt11111/jiaxin.github.io/assets/167744103/44e9920b-3a94-45bf-bc96-d3d7ccc9ff9f)&#13;
👍 新增&#13;
master2 master1 同理&#13;
👍 master1注意network下面的IP要改回之前的参照下图(因为全局替换了)&#13;
![image](https://github.com/donkeytt11111/jiaxin.github.io/assets/167744103/ca265ed9-9a8b-498d-9066-ae19f96467de)&#13;
👍 将 /root/.tallos 和kube 改为新节点master1的IP&#13;
👍 kubectl edit configmap  cluster-config -n kube-system 将IP改为新地址IP&#13;
👍 talosctl reboot -n ms1,ms2,ms3(IP)&#13;
👍 重启完成后，将网关修改新的网关，旧IP删除&#13;
![image](https://github.com/donkeytt11111/jiaxin.github.io/assets/167744103/814dcc35-22fd-429f-bd60-ac0b7417fe18)&#13;
![image](https://github.com/donkeytt11111/jiaxin.github.io/assets/167744103/817a5bf1-9c84-434c-8d4e-caa9e35205ce)&#13;
。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/K8S-ji-qun-IP-qian-yi-fang-an.html</guid><pubDate>Wed, 05 Jun 2024 05:26:57 +0000</pubDate></item><item><title>jenkins部署</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/jenkins-bu-shu.html</link><description>docker pull jenkins/jenkins&#13;
&#13;
docker run \&#13;
  -u root \&#13;
  --rm \&#13;
  -d \&#13;
  -p 8080:8080 \&#13;
  -p 50000:50000 \&#13;
  -v jenkins-data:/var/jenkins_home \&#13;
  -v /var/run/docker.sock:/var/run/docker.sock \&#13;
  --name jenkins \&#13;
  jenkins/jenkins:latest。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/jenkins-bu-shu.html</guid><pubDate>Wed, 05 Jun 2024 00:41:44 +0000</pubDate></item><item><title>Gitlab部署</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/Gitlab-bu-shu.html</link><description>vim /etc/ssh/sshd_config&#13;
Port = 2424&#13;
&#13;
systemctl restart sshd&#13;
&#13;
mkdir -p /srv/gitlab&#13;
&#13;
export GITLAB_HOME=/srv/gitlab&#13;
&#13;
```golang&#13;
&#13;
version: '3.6'&#13;
services:&#13;
  gitlab:&#13;
    image: gitlab/gitlab-ce:latest&#13;
    container_name: gitlab&#13;
    restart: always&#13;
    hostname: '172.16.8.3'&#13;
    environment:&#13;
      GITLAB_OMNIBUS_CONFIG: |&#13;
        external_url 'http://172.16.8.3:8929'&#13;
        gitlab_rails['gitlab_shell_ssh_port'] = 2424&#13;
    ports:&#13;
      - '8929:8929'&#13;
      - '4443:443'&#13;
      - '2424:22'&#13;
    volumes:&#13;
      - '/srv/config:/etc/gitlab'&#13;
      - '/srv/logs:/var/log/gitlab'&#13;
      - '/srv/data:/var/opt/gitlab'&#13;
    shm_size: '256m'&#13;
&#13;
sudo docker exec -it gitlab grep 'Password:' /etc/gitlab/initial_root_password&#13;
。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/Gitlab-bu-shu.html</guid><pubDate>Wed, 05 Jun 2024 00:39:51 +0000</pubDate></item><item><title>PXE系统部署</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/PXE-xi-tong-bu-shu.html</link><description>✧ 使用http用来发布linux系统的安装树（也可以使用NFS、FTP server或HTTPS）&#13;
✧ DHCP server为客户端分配ip并提供TFTP服务器地址及PXE启动文件位置&#13;
✧ TFTP server为客户端提供引导文件。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/PXE-xi-tong-bu-shu.html</guid><pubDate>Tue, 04 Jun 2024 09:07:13 +0000</pubDate></item><item><title>harbor自动化拉取镜像方案</title><link>https://donkeytt11111.github.io/jiaxin.github.io/post/harbor-zi-dong-hua-la-qu-jing-xiang-fang-an.html</link><description>grep data_volume  /app/harbor/harbor.yml    #根据配置文件查找数据存储目录&#13;
data_volume: /data&#13;
&#13;
cd /data/registry     #进入到Harbor的数据目录下&#13;
&#13;
find  docker/   -type  d  -name 'current'  | sed  's|docker/registry/v2/repositories/||g;s|/_manifests/tags/|:|g;s|/current||g'  &gt;  images.list&#13;
&#13;
cat images.list&#13;
 &#13;
curl https://192.168.2.250:443/api/version  -k&#13;
{'version':'v2.0'}&#13;
![image](https://github.com/donkeytt11111/jiaxin.github.io/assets/167744103/2390402e-6803-45a1-bf0d-e99f0347395d)&#13;
&#13;
&#13;
&#13;
```shell&#13;
#!/bin/bash&#13;
Harbor_Address=172.16.1.200       #Harbor主机地址&#13;
Harbor_User=admin                      #登录Harbor的用户&#13;
Harbor_Passwd=Harbor12345              #登录Harbor的用户密码&#13;
Images_File=./images.list   # 镜像清单文件&#13;
Tar_File=/backup/Harbor-backup/                 #镜像tar包存放路径&#13;
set -x&#13;
# 获取Harbor中所有的项目（Projects）&#13;
Project_List=$(curl -u admin:Harbor12345  -H 'Content-Type: application/json' -X GET  https://172.16.1.200/api/v2.0/projects  -k  | python3 -m json.tool | grep name | awk '/'name': /' | awk -F ''' '{print $4}')&#13;
&#13;
for Project in $Project_List;do&#13;
   # 循环获取项目下所有的镜像&#13;
    Image_Names=$(curl -u admin:Harbor12345 -H 'Content-Type: application/json' -X GET https://172.16.1.200/api/v2.0/projects/$Project/repositories -k | python3 -m json.tool | grep name | awk '/'name': /' | awk -F ''' '{print $4}')&#13;
    for Image in $Image_Names;do&#13;
        # 循环获取镜像的版本（tag)&#13;
        Image_Tags=$(curl -u admin:Harbor12345  -H 'Content-Type: application/json'   -X GET  https://172.16.1.200/v2/$Image/tags/list  -k |  awk -F '''  '{print $8,$10,$12}')&#13;
       for Tag in $Image_Tags;do&#13;
            # 格式化输出镜像信息&#13;
            echo '$Harbor_Address/$Image:$Tag'   &gt;&gt; harbor-images-`date '+%Y-%m-%d'`.txt&#13;
        done&#13;
    done&#13;
done&#13;
Image_tags=$(uniq $Images_File)&#13;
for image_tag in $Image_tags;do&#13;
    image_Name=$(echo $image_tag | awk -F/ '{print $3}' |  awk -F: '{print $1}')&#13;
    image_Lable=$(echo $image_tag | awk -F/ '{print $3}' |  awk -F: '{print $2}')&#13;
    #image_Name=$(echo $image_tag | awk -F ' +' '{print $1}')&#13;
    #image_Lable=$(echo $image_tag | awk -F ' +' '{print $2}')&#13;
    docker pull 172.16.1.200/$image_tag&#13;
    docker tag  172.16.1.200/$image_tag $image_tag&#13;
    docker save $image_tag  -o $image_Name.tar&#13;
    docker rmi  172.16.1.200/$image_tag&#13;
    docker rmi  $image_tag&#13;
    mv $image_Name.tar  $Tar_File&#13;
done&#13;
```&#13;
![image](https://github.com/donkeytt11111/jiaxin.github.io/assets/167744103/cdad1ceb-eb50-42ab-b84e-7e6fe15f9cb1)&#13;
&#13;
👍 &#13;
将errorlist文件修改为镜像仓库地址&#13;
&#13;
使用以下脚本完成errorimage拉取&#13;
&#13;
```shell&#13;
#!/bin/bash&#13;
&#13;
# 从文件读取镜像列表&#13;
while IFS= read -r image; do&#13;
    echo '正在拉取镜像: $image'&#13;
    docker pull '$image'&#13;
&#13;
    # 正确提取域名后面直到标签前的部分（保留斜杠后的所有内容直到冒号）&#13;
    new_repo_name=$(echo '$image' | cut -d/ -f2- | cut -d: -f1)&#13;
    new_tag_name=$(echo '$new_repo_name' | awk -F/ '{print $NF}')&#13;
    echo '$new_repo_name'&#13;
    echo '$new_tag_name'&#13;
    version=$(echo '$image' | awk -F: '{print $NF}') # 获取版本号&#13;
&#13;
    # 构建新的标签（包含完整路径和版本号）&#13;
    new_tag='${new_repo_name}:${version}'&#13;
    &#13;
    echo '为镜像打标签: $image -&gt; $new_tag'&#13;
    docker tag '$image' '$new_tag'&#13;
&#13;
    echo '导出镜像为tar包: $new_tag'&#13;
    docker save '$new_tag' &gt; '/backup/Harbor-backup/${new_tag_name}_${version}.tar'&#13;
&#13;
    # 删除原镜像（根据需要可选择性执行此步骤）&#13;
    echo '删除原镜像: $image'&#13;
    docker rmi '$image'&#13;
    docker rmi '$new_tag'&#13;
done &lt; error_images.txt&#13;
&#13;
# 检查是否有任何操作失败&#13;
if [ $? -eq 0 ]; then&#13;
    echo '所有镜像已成功处理并备份。</description><guid isPermaLink="true">https://donkeytt11111.github.io/jiaxin.github.io/post/harbor-zi-dong-hua-la-qu-jing-xiang-fang-an.html</guid><pubDate>Tue, 04 Jun 2024 06:37:38 +0000</pubDate></item></channel></rss>